4340a9122262a146b9518788a175f0fb
/* istanbul ignore next */
function cov_15xaq4ap2k() {
  var path = "/Users/oliver/Projects/boutique/middleware/auth.js";
  var hash = "0c5b3b8ae9d8ed24b864dd075433e60cb2e10b79";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/oliver/Projects/boutique/middleware/auth.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 12
        },
        end: {
          line: 1,
          column: 35
        }
      },
      "1": {
        start: {
          line: 2,
          column: 13
        },
        end: {
          line: 2,
          column: 38
        }
      },
      "2": {
        start: {
          line: 5,
          column: 26
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "3": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 51
        }
      },
      "5": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 56
        }
      },
      "6": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "7": {
        start: {
          line: 11,
          column: 6
        },
        end: {
          line: 11,
          column: 22
        }
      },
      "8": {
        start: {
          line: 12,
          column: 6
        },
        end: {
          line: 12,
          column: 20
        }
      },
      "9": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 61
        }
      },
      "10": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "11": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "12": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 19,
          column: 22
        }
      },
      "13": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "14": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 11
        }
      },
      "16": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "17": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 11
        }
      },
      "18": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "19": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 91,
          column: 3
        }
      },
      "20": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "21": {
        start: {
          line: 35,
          column: 18
        },
        end: {
          line: 35,
          column: 56
        }
      },
      "22": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "23": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "24": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 61
        }
      },
      "25": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 48,
          column: 72
        }
      },
      "26": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "27": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "28": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 20
        }
      },
      "29": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "30": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "31": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "32": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "33": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "34": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 50
        }
      },
      "35": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 90,
          column: 7
        }
      },
      "36": {
        start: {
          line: 95,
          column: 21
        },
        end: {
          line: 166,
          column: 1
        }
      },
      "37": {
        start: {
          line: 96,
          column: 2
        },
        end: {
          line: 165,
          column: 3
        }
      },
      "38": {
        start: {
          line: 97,
          column: 23
        },
        end: {
          line: 97,
          column: 51
        }
      },
      "39": {
        start: {
          line: 98,
          column: 18
        },
        end: {
          line: 98,
          column: 56
        }
      },
      "40": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "41": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "42": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 61
        }
      },
      "43": {
        start: {
          line: 111,
          column: 17
        },
        end: {
          line: 111,
          column: 72
        }
      },
      "44": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "45": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "46": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "47": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "48": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 20
        }
      },
      "49": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "50": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "51": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "52": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "53": {
        start: {
          line: 148,
          column: 6
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "54": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 46
        }
      },
      "55": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 164,
          column: 7
        }
      },
      "56": {
        start: {
          line: 168,
          column: 0
        },
        end: {
          line: 172,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 26
          },
          end: {
            line: 5,
            column: 27
          }
        },
        loc: {
          start: {
            line: 5,
            column: 52
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 20
          },
          end: {
            line: 32,
            column: 21
          }
        },
        loc: {
          start: {
            line: 32,
            column: 46
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 95,
            column: 21
          },
          end: {
            line: 95,
            column: 22
          }
        },
        loc: {
          start: {
            line: 95,
            column: 47
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 95
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 28
          }
        }, {
          start: {
            line: 8,
            column: 32
          },
          end: {
            line: 8,
            column: 56
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 13
          }
        }, {
          start: {
            line: 18,
            column: 17
          },
          end: {
            line: 18,
            column: 31
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 18
          },
          end: {
            line: 35,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 18
          },
          end: {
            line: 35,
            column: 28
          }
        }, {
          start: {
            line: 35,
            column: 32
          },
          end: {
            line: 35,
            column: 56
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 31
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "10": {
        loc: {
          start: {
            line: 98,
            column: 18
          },
          end: {
            line: 98,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 18
          },
          end: {
            line: 98,
            column: 28
          }
        }, {
          start: {
            line: 98,
            column: 32
          },
          end: {
            line: 98,
            column: 56
          }
        }],
        line: 98
      },
      "11": {
        loc: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "12": {
        loc: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "13": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 113,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 113,
            column: 13
          }
        }, {
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 113,
            column: 31
          }
        }],
        line: 113
      },
      "14": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "15": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "16": {
        loc: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c5b3b8ae9d8ed24b864dd075433e60cb2e10b79"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15xaq4ap2k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15xaq4ap2k();
const jwt =
/* istanbul ignore next */
(cov_15xaq4ap2k().s[0]++, require('jsonwebtoken'));
const User =
/* istanbul ignore next */
(cov_15xaq4ap2k().s[1]++, require('../models/User'));

// Middleware to authenticate JWT tokens
/* istanbul ignore next */
cov_15xaq4ap2k().s[2]++;
const authenticateToken = async (req, res, next) => {
  /* istanbul ignore next */
  cov_15xaq4ap2k().f[0]++;
  cov_15xaq4ap2k().s[3]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[4]++, req.headers['authorization']);
    const token =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[5]++,
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[0][0]++, authHeader) &&
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[0][1]++, authHeader.split(' ')[1])); // Bearer TOKEN
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[6]++;
    if (!token) {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[1][0]++;
      cov_15xaq4ap2k().s[7]++;
      req.user = null;
      /* istanbul ignore next */
      cov_15xaq4ap2k().s[8]++;
      return next(); // Continue without authentication for optional auth routes
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[1][1]++;
    }
    const decoded =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[9]++, jwt.verify(token, process.env.JWT_SECRET));
    const user =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[10]++, await User.findById(decoded.userId).select('-password'));
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[3][0]++, !user) ||
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[3][1]++, !user.isActive)) {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[2][0]++;
      cov_15xaq4ap2k().s[12]++;
      req.user = null;
      /* istanbul ignore next */
      cov_15xaq4ap2k().s[13]++;
      return next();
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[2][1]++;
    }
    cov_15xaq4ap2k().s[14]++;
    req.user = user;
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[15]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[16]++;
    req.user = null;
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[17]++;
    next(); // Continue without authentication for optional auth routes
  }
};

// Middleware to require authentication
/* istanbul ignore next */
cov_15xaq4ap2k().s[18]++;
const requireAuth = async (req, res, next) => {
  /* istanbul ignore next */
  cov_15xaq4ap2k().f[1]++;
  cov_15xaq4ap2k().s[19]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[20]++, req.headers['authorization']);
    const token =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[21]++,
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[4][0]++, authHeader) &&
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[4][1]++, authHeader.split(' ')[1]));
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[22]++;
    if (!token) {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[5][0]++;
      cov_15xaq4ap2k().s[23]++;
      return res.status(401).json({
        success: false,
        error: {
          code: 'NO_TOKEN',
          message: 'Access token is required'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[5][1]++;
    }
    const decoded =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[24]++, jwt.verify(token, process.env.JWT_SECRET));
    const user =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[25]++, await User.findById(decoded.userId).select('-password'));
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[7][0]++, !user) ||
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[7][1]++, !user.isActive)) {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[6][0]++;
      cov_15xaq4ap2k().s[27]++;
      return res.status(401).json({
        success: false,
        error: {
          code: 'INVALID_TOKEN',
          message: 'Invalid or expired token'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[6][1]++;
    }
    cov_15xaq4ap2k().s[28]++;
    req.user = user;
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[29]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[30]++;
    if (error.name === 'JsonWebTokenError') {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[8][0]++;
      cov_15xaq4ap2k().s[31]++;
      return res.status(401).json({
        success: false,
        error: {
          code: 'INVALID_TOKEN',
          message: 'Invalid token format'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[8][1]++;
    }
    cov_15xaq4ap2k().s[32]++;
    if (error.name === 'TokenExpiredError') {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[9][0]++;
      cov_15xaq4ap2k().s[33]++;
      return res.status(401).json({
        success: false,
        error: {
          code: 'TOKEN_EXPIRED',
          message: 'Token has expired'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[9][1]++;
    }
    cov_15xaq4ap2k().s[34]++;
    console.error('Authentication error:', error);
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[35]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'AUTH_ERROR',
        message: 'Authentication failed'
      }
    });
  }
};

// Middleware to require admin role
/* istanbul ignore next */
cov_15xaq4ap2k().s[36]++;
const requireAdmin = async (req, res, next) => {
  /* istanbul ignore next */
  cov_15xaq4ap2k().f[2]++;
  cov_15xaq4ap2k().s[37]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[38]++, req.headers['authorization']);
    const token =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[39]++,
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[10][0]++, authHeader) &&
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[10][1]++, authHeader.split(' ')[1]));
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[40]++;
    if (!token) {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[11][0]++;
      cov_15xaq4ap2k().s[41]++;
      return res.status(401).json({
        success: false,
        error: {
          code: 'NO_TOKEN',
          message: 'Access token is required'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[11][1]++;
    }
    const decoded =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[42]++, jwt.verify(token, process.env.JWT_SECRET));
    const user =
    /* istanbul ignore next */
    (cov_15xaq4ap2k().s[43]++, await User.findById(decoded.userId).select('-password'));
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[44]++;
    if (
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[13][0]++, !user) ||
    /* istanbul ignore next */
    (cov_15xaq4ap2k().b[13][1]++, !user.isActive)) {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[12][0]++;
      cov_15xaq4ap2k().s[45]++;
      return res.status(401).json({
        success: false,
        error: {
          code: 'INVALID_TOKEN',
          message: 'Invalid or expired token'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[12][1]++;
    }

    // Check if user has admin role
    cov_15xaq4ap2k().s[46]++;
    if (!user.isAdmin) {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[14][0]++;
      cov_15xaq4ap2k().s[47]++;
      return res.status(403).json({
        success: false,
        error: {
          code: 'INSUFFICIENT_PERMISSIONS',
          message: 'Admin access required'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[14][1]++;
    }
    cov_15xaq4ap2k().s[48]++;
    req.user = user;
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[49]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[50]++;
    if (error.name === 'JsonWebTokenError') {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[15][0]++;
      cov_15xaq4ap2k().s[51]++;
      return res.status(401).json({
        success: false,
        error: {
          code: 'INVALID_TOKEN',
          message: 'Invalid token format'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[15][1]++;
    }
    cov_15xaq4ap2k().s[52]++;
    if (error.name === 'TokenExpiredError') {
      /* istanbul ignore next */
      cov_15xaq4ap2k().b[16][0]++;
      cov_15xaq4ap2k().s[53]++;
      return res.status(401).json({
        success: false,
        error: {
          code: 'TOKEN_EXPIRED',
          message: 'Token has expired'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_15xaq4ap2k().b[16][1]++;
    }
    cov_15xaq4ap2k().s[54]++;
    console.error('Admin auth error:', error);
    /* istanbul ignore next */
    cov_15xaq4ap2k().s[55]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'AUTH_ERROR',
        message: 'Authorization failed'
      }
    });
  }
};
/* istanbul ignore next */
cov_15xaq4ap2k().s[56]++;
module.exports = {
  authenticateToken,
  requireAuth,
  requireAdmin
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,