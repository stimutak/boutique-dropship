{"version":3,"names":["cov_15xaq4ap2k","actualCoverage","jwt","s","require","User","authenticateToken","req","res","next","f","authHeader","headers","token","b","split","user","decoded","verify","process","env","JWT_SECRET","findById","userId","select","isActive","error","requireAuth","status","json","success","code","message","name","console","requireAdmin","isAdmin","module","exports"],"sources":["auth.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst User = require('../models/User');\n\n// Middleware to authenticate JWT tokens\nconst authenticateToken = async (req, res, next) => {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN\n    \n    if (!token) {\n      req.user = null;\n      return next(); // Continue without authentication for optional auth routes\n    }\n    \n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(decoded.userId).select('-password');\n    \n    if (!user || !user.isActive) {\n      req.user = null;\n      return next();\n    }\n    \n    req.user = user;\n    next();\n  } catch (error) {\n    req.user = null;\n    next(); // Continue without authentication for optional auth routes\n  }\n};\n\n// Middleware to require authentication\nconst requireAuth = async (req, res, next) => {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n    \n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'NO_TOKEN',\n          message: 'Access token is required'\n        }\n      });\n    }\n    \n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(decoded.userId).select('-password');\n    \n    if (!user || !user.isActive) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'INVALID_TOKEN',\n          message: 'Invalid or expired token'\n        }\n      });\n    }\n    \n    req.user = user;\n    next();\n  } catch (error) {\n    if (error.name === 'JsonWebTokenError') {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'INVALID_TOKEN',\n          message: 'Invalid token format'\n        }\n      });\n    }\n    \n    if (error.name === 'TokenExpiredError') {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'TOKEN_EXPIRED',\n          message: 'Token has expired'\n        }\n      });\n    }\n    \n    console.error('Authentication error:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'AUTH_ERROR',\n        message: 'Authentication failed'\n      }\n    });\n  }\n};\n\n// Middleware to require admin role\nconst requireAdmin = async (req, res, next) => {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n    \n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'NO_TOKEN',\n          message: 'Access token is required'\n        }\n      });\n    }\n    \n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(decoded.userId).select('-password');\n    \n    if (!user || !user.isActive) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'INVALID_TOKEN',\n          message: 'Invalid or expired token'\n        }\n      });\n    }\n    \n    // Check if user has admin role\n    if (!user.isAdmin) {\n      return res.status(403).json({\n        success: false,\n        error: {\n          code: 'INSUFFICIENT_PERMISSIONS',\n          message: 'Admin access required'\n        }\n      });\n    }\n    \n    req.user = user;\n    next();\n  } catch (error) {\n    if (error.name === 'JsonWebTokenError') {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'INVALID_TOKEN',\n          message: 'Invalid token format'\n        }\n      });\n    }\n    \n    if (error.name === 'TokenExpiredError') {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'TOKEN_EXPIRED',\n          message: 'Token has expired'\n        }\n      });\n    }\n    \n    console.error('Admin auth error:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'AUTH_ERROR',\n        message: 'Authorization failed'\n      }\n    });\n  }\n};\n\nmodule.exports = {\n  authenticateToken,\n  requireAuth,\n  requireAdmin\n};"],"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","ignoreList":[]}