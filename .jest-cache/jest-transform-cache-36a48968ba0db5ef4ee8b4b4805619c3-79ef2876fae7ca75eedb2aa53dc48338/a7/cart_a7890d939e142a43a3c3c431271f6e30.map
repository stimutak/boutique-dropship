{"version":3,"names":["cov_1bv1ns2jgf","actualCoverage","express","s","require","router","Router","Product","authenticateToken","requireAuth","initializeCart","req","res","next","f","session","cart","b","get","user","populatedCart","Promise","all","map","item","product","findById","productId","select","isActive","_id","toPublicJSON","quantity","price","subtotal","error","console","validCart","filter","reduce","sum","itemCount","json","success","items","totalItems","totalPrice","Math","round","isEmpty","length","status","code","message","post","body","existingItemIndex","findIndex","toString","newQuantity","parseInt","push","resolve","reject","save","err","sessionError","put","itemIndex","splice","cartItemCount","delete","module","exports"],"sources":["cart.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Product = require('../models/Product');\nconst { authenticateToken, requireAuth } = require('../middleware/auth');\n\n// Middleware to initialize cart in session\nconst initializeCart = (req, res, next) => {\n  if (!req.session.cart) {\n    req.session.cart = [];\n  }\n  next();\n};\n\n// Get cart contents\nrouter.get('/', authenticateToken, initializeCart, async (req, res) => {\n  try {\n    let cart = [];\n    \n    if (req.user) {\n      // For authenticated users, get cart from user session or database\n      cart = req.session.cart || [];\n    } else {\n      // For guests, get cart from session\n      cart = req.session.cart || [];\n    }\n    \n    // Populate product details for cart items\n    const populatedCart = await Promise.all(\n      cart.map(async (item) => {\n        try {\n          const product = await Product.findById(item.productId).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Remove inactive products\n          }\n          \n          return {\n            _id: item._id || item.productId,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: product.price,\n            subtotal: product.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n    \n    // Filter out null items (inactive products)\n    const validCart = populatedCart.filter(item => item !== null);\n    \n    // Update session cart to remove invalid items\n    req.session.cart = validCart.map(item => ({\n      productId: item.product._id,\n      quantity: item.quantity\n    }));\n    \n    // Calculate totals\n    const subtotal = validCart.reduce((sum, item) => sum + item.subtotal, 0);\n    const itemCount = validCart.reduce((sum, item) => sum + item.quantity, 0);\n    \n    res.json({\n      success: true,\n      items: validCart,\n      totalItems: itemCount,\n      totalPrice: Math.round(subtotal * 100) / 100,\n      isEmpty: validCart.length === 0\n    });\n    \n  } catch (error) {\n    console.error('Error getting cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_ERROR',\n        message: 'Failed to retrieve cart contents'\n      }\n    });\n  }\n});\n\n// Add item to cart\nrouter.post('/add', authenticateToken, initializeCart, async (req, res) => {\n  try {\n    const { productId, quantity = 1 } = req.body;\n    \n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n    \n    if (quantity < 1 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 1 and 99'\n        }\n      });\n    }\n    \n    // Verify product exists and is active\n    const product = await Product.findById(productId);\n    if (!product || !product.isActive) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found or unavailable'\n        }\n      });\n    }\n    \n    // Check if item already exists in cart\n    const existingItemIndex = req.session.cart.findIndex(\n      item => item.productId.toString() === productId\n    );\n    \n    if (existingItemIndex > -1) {\n      // Update quantity of existing item\n      const newQuantity = req.session.cart[existingItemIndex].quantity + parseInt(quantity);\n      if (newQuantity > 99) {\n        return res.status(400).json({\n          success: false,\n          error: {\n            code: 'MAX_QUANTITY_EXCEEDED',\n            message: 'Maximum quantity per item is 99'\n          }\n        });\n      }\n      req.session.cart[existingItemIndex].quantity = newQuantity;\n    } else {\n      // Add new item to cart\n      req.session.cart.push({\n        productId: productId,\n        quantity: parseInt(quantity)\n      });\n    }\n    \n    // Save session and get updated cart\n    try {\n      await new Promise((resolve, reject) => {\n        req.session.save((err) => {\n          if (err) reject(err);\n          else resolve();\n        });\n      });\n      \n      // Get updated cart with populated products\n      const populatedCart = await Promise.all(\n        req.session.cart.map(async (item) => {\n          try {\n            const product = await Product.findById(item.productId).select('-wholesaler');\n            if (!product || !product.isActive) {\n              return null;\n            }\n            \n            return {\n              _id: item.productId,\n              product: product.toPublicJSON(),\n              quantity: item.quantity,\n              price: product.price,\n              subtotal: product.price * item.quantity\n            };\n          } catch (error) {\n            console.error('Error populating cart item:', error);\n            return null;\n          }\n        })\n      );\n      \n      const validCart = populatedCart.filter(item => item !== null);\n      const totalPrice = validCart.reduce((sum, item) => sum + item.subtotal, 0);\n      const totalItems = validCart.reduce((sum, item) => sum + item.quantity, 0);\n      \n      res.json({\n        success: true,\n        items: validCart,\n        totalItems,\n        totalPrice: Math.round(totalPrice * 100) / 100,\n        message: 'Item added to cart'\n      });\n    } catch (sessionError) {\n      console.error('Session save error:', sessionError);\n      return res.status(500).json({\n        success: false,\n        error: {\n          code: 'SESSION_ERROR',\n          message: 'Failed to save cart'\n        }\n      });\n    }\n    \n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_ADD_ERROR',\n        message: 'Failed to add item to cart'\n      }\n    });\n  }\n});\n\n// Update cart item quantity\nrouter.put('/update', initializeCart, async (req, res) => {\n  try {\n    const { productId, quantity } = req.body;\n    \n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n    \n    if (quantity < 0 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 0 and 99'\n        }\n      });\n    }\n    \n    const itemIndex = req.session.cart.findIndex(\n      item => item.productId.toString() === productId\n    );\n    \n    if (itemIndex === -1) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'ITEM_NOT_FOUND',\n          message: 'Item not found in cart'\n        }\n      });\n    }\n    \n    if (quantity === 0) {\n      // Remove item if quantity is 0\n      req.session.cart.splice(itemIndex, 1);\n    } else {\n      // Update quantity\n      req.session.cart[itemIndex].quantity = parseInt(quantity);\n    }\n    \n    req.session.save((err) => {\n      if (err) {\n        console.error('Session save error:', err);\n        return res.status(500).json({\n          success: false,\n          error: {\n            code: 'SESSION_ERROR',\n            message: 'Failed to update cart'\n          }\n        });\n      }\n      \n      res.json({\n        success: true,\n        message: quantity === 0 ? 'Item removed from cart' : 'Cart updated',\n        cartItemCount: req.session.cart.reduce((sum, item) => sum + item.quantity, 0)\n      });\n    });\n    \n  } catch (error) {\n    console.error('Error updating cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_UPDATE_ERROR',\n        message: 'Failed to update cart'\n      }\n    });\n  }\n});\n\n// Remove item from cart\nrouter.delete('/remove', initializeCart, async (req, res) => {\n  try {\n    const { productId } = req.body;\n    \n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n    \n    const itemIndex = req.session.cart.findIndex(\n      item => item.productId.toString() === productId\n    );\n    \n    if (itemIndex === -1) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'ITEM_NOT_FOUND',\n          message: 'Item not found in cart'\n        }\n      });\n    }\n    \n    req.session.cart.splice(itemIndex, 1);\n    \n    req.session.save((err) => {\n      if (err) {\n        console.error('Session save error:', err);\n        return res.status(500).json({\n          success: false,\n          error: {\n            code: 'SESSION_ERROR',\n            message: 'Failed to remove item from cart'\n          }\n        });\n      }\n      \n      res.json({\n        success: true,\n        message: 'Item removed from cart',\n        cartItemCount: req.session.cart.reduce((sum, item) => sum + item.quantity, 0)\n      });\n    });\n    \n  } catch (error) {\n    console.error('Error removing from cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_REMOVE_ERROR',\n        message: 'Failed to remove item from cart'\n      }\n    });\n  }\n});\n\n// Clear entire cart\nrouter.delete('/clear', initializeCart, async (req, res) => {\n  try {\n    req.session.cart = [];\n    \n    req.session.save((err) => {\n      if (err) {\n        console.error('Session save error:', err);\n        return res.status(500).json({\n          success: false,\n          error: {\n            code: 'SESSION_ERROR',\n            message: 'Failed to clear cart'\n          }\n        });\n      }\n      \n      res.json({\n        success: true,\n        message: 'Cart cleared',\n        cartItemCount: 0\n      });\n    });\n    \n  } catch (error) {\n    console.error('Error clearing cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_CLEAR_ERROR',\n        message: 'Failed to clear cart'\n      }\n    });\n  }\n});\n\nmodule.exports = router;"],"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","ignoreList":[]}