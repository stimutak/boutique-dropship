{"version":3,"names":["crypto","require","mongoSanitize","rateLimit","slowDown","body","validationResult","csrfProtection","req","res","next","includes","method","headers","token","_csrf","sessionToken","session","csrfToken","status","json","success","error","code","message","generateCSRFToken","randomBytes","toString","apiKeyAuth","apiKey","validApiKeys","process","env","VALID_API_KEYS","split","createRateLimit","windowMs","max","standardHeaders","legacyHeaders","rateLimits","general","auth","payment","admin","integration","speedLimiter","delayAfter","delayMs","maxDelayMs","validate","sanitizeInput","replaceWith","onSanitize","key","console","warn","path","validationRules","email","isEmail","normalizeEmail","withMessage","password","isLength","min","matches","name","trim","phone","optional","isMobilePhone","address","price","isFloat","quantity","isInt","handleValidationErrors","errors","isEmpty","details","array","map","field","msg","value","securityHeaders","setHeader","removeHeader","module","exports"],"sources":["security.js"],"sourcesContent":["const crypto = require('crypto');\nconst mongoSanitize = require('express-mongo-sanitize');\nconst rateLimit = require('express-rate-limit');\nconst slowDown = require('express-slow-down');\nconst { body, validationResult } = require('express-validator');\n\n// CSRF Protection Middleware\nconst csrfProtection = (req, res, next) => {\n  // Skip CSRF for GET, HEAD, OPTIONS requests\n  if (['GET', 'HEAD', 'OPTIONS'].includes(req.method)) {\n    return next();\n  }\n\n  // Skip CSRF for API key authenticated requests\n  if (req.headers['x-api-key']) {\n    return next();\n  }\n\n  const token = req.headers['x-csrf-token'] || req.body._csrf;\n  const sessionToken = req.session.csrfToken;\n\n  if (!token || !sessionToken || token !== sessionToken) {\n    return res.status(403).json({\n      success: false,\n      error: {\n        code: 'CSRF_TOKEN_MISMATCH',\n        message: 'Invalid CSRF token'\n      }\n    });\n  }\n\n  next();\n};\n\n// Generate CSRF token\nconst generateCSRFToken = (req, res, next) => {\n  if (!req.session.csrfToken) {\n    req.session.csrfToken = crypto.randomBytes(32).toString('hex');\n  }\n  next();\n};\n\n// API Key Authentication\nconst apiKeyAuth = (req, res, next) => {\n  const apiKey = req.headers['x-api-key'];\n  \n  if (!apiKey) {\n    return res.status(401).json({\n      success: false,\n      error: {\n        code: 'API_KEY_REQUIRED',\n        message: 'API key is required for cross-site integration'\n      }\n    });\n  }\n\n  // Validate API key (in production, store these securely)\n  const validApiKeys = process.env.VALID_API_KEYS?.split(',') || [];\n  \n  if (!validApiKeys.includes(apiKey)) {\n    return res.status(401).json({\n      success: false,\n      error: {\n        code: 'INVALID_API_KEY',\n        message: 'Invalid API key'\n      }\n    });\n  }\n\n  req.apiKeyAuth = true;\n  next();\n};\n\n// Enhanced Rate Limiting\nconst createRateLimit = (windowMs, max, message) => {\n  return rateLimit({\n    windowMs,\n    max,\n    message: {\n      success: false,\n      error: {\n        code: 'RATE_LIMIT_EXCEEDED',\n        message\n      }\n    },\n    standardHeaders: true,\n    legacyHeaders: false,\n  });\n};\n\n// Different rate limits for different endpoints\n// More forgiving limits for development while still providing protection\nconst rateLimits = {\n  // General API rate limit - increased for development\n  general: createRateLimit(\n    15 * 60 * 1000, // 15 minutes\n    500, // 500 requests per window (was 100)\n    'Too many requests, please try again later'\n  ),\n  \n  // Authentication endpoints - more forgiving for dev/testing\n  auth: createRateLimit(\n    15 * 60 * 1000, // 15 minutes\n    50, // 50 requests per window (was 10)\n    'Too many authentication attempts, please try again later'\n  ),\n  \n  // Payment endpoints rate limit - slightly increased\n  payment: createRateLimit(\n    60 * 60 * 1000, // 1 hour\n    50, // 50 requests per hour (was 20)\n    'Too many payment requests, please try again later'\n  ),\n  \n  // Admin endpoints rate limit - increased\n  admin: createRateLimit(\n    15 * 60 * 1000, // 15 minutes\n    200, // 200 requests per window (was 50)\n    'Too many admin requests, please try again later'\n  ),\n  \n  // Cross-site integration rate limit - increased\n  integration: createRateLimit(\n    60 * 1000, // 1 minute\n    100, // 100 requests per minute (was 30)\n    'Too many integration requests, please try again later'\n  )\n};\n\n// Slow down middleware for brute force protection\nconst speedLimiter = slowDown({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  delayAfter: 5, // allow 5 requests per windowMs without delay\n  delayMs: () => 500, // add 500ms delay per request after delayAfter\n  maxDelayMs: 20000, // max delay of 20 seconds\n  validate: { delayMs: false } // disable warning\n});\n\n// Input sanitization middleware\nconst sanitizeInput = [\n  mongoSanitize({\n    replaceWith: '_',\n    onSanitize: ({ req, key }) => {\n      console.warn(`Sanitized input: ${key} in ${req.method} ${req.path}`);\n    },\n  }),\n];\n\n// Common validation rules\nconst validationRules = {\n  email: body('email')\n    .isEmail()\n    .normalizeEmail()\n    .withMessage('Please provide a valid email address'),\n  \n  password: body('password')\n    .isLength({ min: 8 })\n    .withMessage('Password must be at least 8 characters long')\n    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/)\n    .withMessage('Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'),\n  \n  name: body('name')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Name must be between 2 and 50 characters')\n    .matches(/^[a-zA-Z\\s'-]+$/)\n    .withMessage('Name can only contain letters, spaces, hyphens, and apostrophes'),\n  \n  phone: body('phone')\n    .optional()\n    .isMobilePhone()\n    .withMessage('Please provide a valid phone number'),\n  \n  address: body('address')\n    .optional()\n    .trim()\n    .isLength({ max: 200 })\n    .withMessage('Address must not exceed 200 characters'),\n  \n  price: body('price')\n    .isFloat({ min: 0 })\n    .withMessage('Price must be a positive number'),\n  \n  quantity: body('quantity')\n    .isInt({ min: 1 })\n    .withMessage('Quantity must be a positive integer'),\n};\n\n// Validation error handler\nconst handleValidationErrors = (req, res, next) => {\n  const errors = validationResult(req);\n  \n  if (!errors.isEmpty()) {\n    return res.status(400).json({\n      success: false,\n      error: {\n        code: 'VALIDATION_ERROR',\n        message: 'Invalid input data',\n        details: errors.array().map(error => ({\n          field: error.path,\n          message: error.msg,\n          value: error.value\n        }))\n      }\n    });\n  }\n  \n  next();\n};\n\n// Security headers middleware\nconst securityHeaders = (req, res, next) => {\n  // Additional security headers beyond helmet\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n  res.setHeader('X-Frame-Options', 'DENY');\n  res.setHeader('X-XSS-Protection', '1; mode=block');\n  res.setHeader('Referrer-Policy', 'strict-origin-when-cross-origin');\n  res.setHeader('Permissions-Policy', 'geolocation=(), microphone=(), camera=()');\n  \n  // Remove server information\n  res.removeHeader('X-Powered-By');\n  \n  next();\n};\n\nmodule.exports = {\n  csrfProtection,\n  generateCSRFToken,\n  apiKeyAuth,\n  rateLimits,\n  speedLimiter,\n  sanitizeInput,\n  validationRules,\n  handleValidationErrors,\n  securityHeaders\n};"],"mappings":"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","ignoreList":[]}