f6168fdf5ff22910e51dcdda663bf52d
/* istanbul ignore next */
function cov_1mdbgbws22() {
  var path = "/Users/oliver/Projects/boutique/middleware/errorHandler.js";
  var hash = "7b0c3537d3a99d2a425f96f42a5701eb3e66c883";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/oliver/Projects/boutique/middleware/errorHandler.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 19
        },
        end: {
          line: 1,
          column: 45
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 19
        }
      },
      "2": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 33
        }
      },
      "3": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 21
        }
      },
      "4": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "5": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 69
        }
      },
      "6": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "7": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "8": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 53
        }
      },
      "9": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 19,
          column: 50
        }
      },
      "10": {
        start: {
          line: 22,
          column: 32
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "11": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 55
        }
      },
      "12": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 78
        }
      },
      "13": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 25,
          column: 55
        }
      },
      "14": {
        start: {
          line: 28,
          column: 32
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "15": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 64
        }
      },
      "16": {
        start: {
          line: 29,
          column: 53
        },
        end: {
          line: 29,
          column: 63
        }
      },
      "17": {
        start: {
          line: 30,
          column: 18
        },
        end: {
          line: 30,
          column: 60
        }
      },
      "18": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 31,
          column: 56
        }
      },
      "19": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 35,
          column: 75
        }
      },
      "20": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 35,
          column: 75
        }
      },
      "21": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 38,
          column: 84
        }
      },
      "22": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 38,
          column: 84
        }
      },
      "23": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "24": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "25": {
        start: {
          line: 52,
          column: 2
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "26": {
        start: {
          line: 64,
          column: 22
        },
        end: {
          line: 99,
          column: 1
        }
      },
      "27": {
        start: {
          line: 66,
          column: 2
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "28": {
        start: {
          line: 76,
          column: 2
        },
        end: {
          line: 84,
          column: 3
        }
      },
      "29": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 83,
          column: 7
        }
      },
      "30": {
        start: {
          line: 87,
          column: 2
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "31": {
        start: {
          line: 92,
          column: 2
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "32": {
        start: {
          line: 102,
          column: 27
        },
        end: {
          line: 121,
          column: 1
        }
      },
      "33": {
        start: {
          line: 103,
          column: 2
        },
        end: {
          line: 103,
          column: 41
        }
      },
      "34": {
        start: {
          line: 104,
          column: 2
        },
        end: {
          line: 104,
          column: 37
        }
      },
      "35": {
        start: {
          line: 106,
          column: 2
        },
        end: {
          line: 120,
          column: 3
        }
      },
      "36": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 32
        }
      },
      "37": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 26
        }
      },
      "38": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 32
        }
      },
      "39": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 69
        }
      },
      "40": {
        start: {
          line: 113,
          column: 36
        },
        end: {
          line: 113,
          column: 69
        }
      },
      "41": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 69
        }
      },
      "42": {
        start: {
          line: 114,
          column: 30
        },
        end: {
          line: 114,
          column: 69
        }
      },
      "43": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 81
        }
      },
      "44": {
        start: {
          line: 115,
          column: 42
        },
        end: {
          line: 115,
          column: 81
        }
      },
      "45": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 69
        }
      },
      "46": {
        start: {
          line: 116,
          column: 44
        },
        end: {
          line: 116,
          column: 69
        }
      },
      "47": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 76
        }
      },
      "48": {
        start: {
          line: 117,
          column: 44
        },
        end: {
          line: 117,
          column: 76
        }
      },
      "49": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 35
        }
      },
      "50": {
        start: {
          line: 124,
          column: 19
        },
        end: {
          line: 128,
          column: 1
        }
      },
      "51": {
        start: {
          line: 125,
          column: 2
        },
        end: {
          line: 127,
          column: 4
        }
      },
      "52": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 35
        }
      },
      "53": {
        start: {
          line: 131,
          column: 0
        },
        end: {
          line: 140,
          column: 3
        }
      },
      "54": {
        start: {
          line: 132,
          column: 2
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "55": {
        start: {
          line: 139,
          column: 2
        },
        end: {
          line: 139,
          column: 18
        }
      },
      "56": {
        start: {
          line: 143,
          column: 0
        },
        end: {
          line: 151,
          column: 3
        }
      },
      "57": {
        start: {
          line: 144,
          column: 2
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "58": {
        start: {
          line: 150,
          column: 2
        },
        end: {
          line: 150,
          column: 18
        }
      },
      "59": {
        start: {
          line: 153,
          column: 0
        },
        end: {
          line: 157,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 70
          },
          end: {
            line: 13,
            column: 3
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 17,
            column: 27
          }
        },
        loc: {
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 32
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 29,
            column: 48
          }
        },
        loc: {
          start: {
            line: 29,
            column: 53
          },
          end: {
            line: 29,
            column: 63
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 23
          },
          end: {
            line: 34,
            column: 24
          }
        },
        loc: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 35,
            column: 75
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 37,
            column: 30
          },
          end: {
            line: 37,
            column: 31
          }
        },
        loc: {
          start: {
            line: 38,
            column: 2
          },
          end: {
            line: 38,
            column: 84
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 41,
            column: 21
          },
          end: {
            line: 41,
            column: 22
          }
        },
        loc: {
          start: {
            line: 41,
            column: 40
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 41
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 64,
            column: 22
          },
          end: {
            line: 64,
            column: 23
          }
        },
        loc: {
          start: {
            line: 64,
            column: 41
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 64
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 102,
            column: 27
          },
          end: {
            line: 102,
            column: 28
          }
        },
        loc: {
          start: {
            line: 102,
            column: 52
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 102
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 124,
            column: 19
          },
          end: {
            line: 124,
            column: 20
          }
        },
        loc: {
          start: {
            line: 124,
            column: 27
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 124
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 125,
            column: 10
          }
        },
        loc: {
          start: {
            line: 125,
            column: 29
          },
          end: {
            line: 127,
            column: 3
          }
        },
        line: 125
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 131,
            column: 33
          },
          end: {
            line: 131,
            column: 34
          }
        },
        loc: {
          start: {
            line: 131,
            column: 51
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 131
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 143,
            column: 32
          },
          end: {
            line: 143,
            column: 33
          }
        },
        loc: {
          start: {
            line: 143,
            column: 41
          },
          end: {
            line: 151,
            column: 1
          }
        },
        line: 143
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 35
          },
          end: {
            line: 5,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 42
          },
          end: {
            line: 5,
            column: 46
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 5,
            column: 48
          },
          end: {
            line: 5,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 64
          },
          end: {
            line: 5,
            column: 68
          }
        }],
        line: 5
      },
      "2": {
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 10,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 52
          },
          end: {
            line: 10,
            column: 58
          }
        }, {
          start: {
            line: 10,
            column: 61
          },
          end: {
            line: 10,
            column: 68
          }
        }],
        line: 10
      },
      "3": {
        loc: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "4": {
        loc: {
          start: {
            line: 103,
            column: 19
          },
          end: {
            line: 103,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 19
          },
          end: {
            line: 103,
            column: 33
          }
        }, {
          start: {
            line: 103,
            column: 37
          },
          end: {
            line: 103,
            column: 40
          }
        }],
        line: 103
      },
      "5": {
        loc: {
          start: {
            line: 104,
            column: 15
          },
          end: {
            line: 104,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 15
          },
          end: {
            line: 104,
            column: 25
          }
        }, {
          start: {
            line: 104,
            column: 29
          },
          end: {
            line: 104,
            column: 36
          }
        }],
        line: 104
      },
      "6": {
        loc: {
          start: {
            line: 106,
            column: 2
          },
          end: {
            line: 120,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 2
          },
          end: {
            line: 120,
            column: 3
          }
        }, {
          start: {
            line: 108,
            column: 9
          },
          end: {
            line: 120,
            column: 3
          }
        }],
        line: 106
      },
      "7": {
        loc: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "8": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "9": {
        loc: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "10": {
        loc: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "11": {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7b0c3537d3a99d2a425f96f42a5701eb3e66c883"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mdbgbws22 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mdbgbws22();
const {
  logger
} =
/* istanbul ignore next */
(cov_1mdbgbws22().s[0]++, require('../utils/logger'));

// Custom error class for application errors
class AppError extends Error {
  constructor(message, statusCode, code =
  /* istanbul ignore next */
  (cov_1mdbgbws22().b[0][0]++, null), isOperational =
  /* istanbul ignore next */
  (cov_1mdbgbws22().b[1][0]++, true)) {
    /* istanbul ignore next */
    cov_1mdbgbws22().f[0]++;
    cov_1mdbgbws22().s[1]++;
    super(message);
    /* istanbul ignore next */
    cov_1mdbgbws22().s[2]++;
    this.statusCode = statusCode;
    /* istanbul ignore next */
    cov_1mdbgbws22().s[3]++;
    this.code = code;
    /* istanbul ignore next */
    cov_1mdbgbws22().s[4]++;
    this.isOperational = isOperational;
    /* istanbul ignore next */
    cov_1mdbgbws22().s[5]++;
    this.status = `${statusCode}`.startsWith('4') ?
    /* istanbul ignore next */
    (cov_1mdbgbws22().b[2][0]++, 'fail') :
    /* istanbul ignore next */
    (cov_1mdbgbws22().b[2][1]++, 'error');
    /* istanbul ignore next */
    cov_1mdbgbws22().s[6]++;
    Error.captureStackTrace(this, this.constructor);
  }
}

// Error handling for different error types
/* istanbul ignore next */
cov_1mdbgbws22().s[7]++;
const handleCastErrorDB = err => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[1]++;
  const message =
  /* istanbul ignore next */
  (cov_1mdbgbws22().s[8]++, `Invalid ${err.path}: ${err.value}`);
  /* istanbul ignore next */
  cov_1mdbgbws22().s[9]++;
  return new AppError(message, 400, 'INVALID_ID');
};
/* istanbul ignore next */
cov_1mdbgbws22().s[10]++;
const handleDuplicateFieldsDB = err => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[2]++;
  const value =
  /* istanbul ignore next */
  (cov_1mdbgbws22().s[11]++, err.errmsg.match(/(["'])(\\?.)*?\1/)[0]);
  const message =
  /* istanbul ignore next */
  (cov_1mdbgbws22().s[12]++, `Duplicate field value: ${value}. Please use another value!`);
  /* istanbul ignore next */
  cov_1mdbgbws22().s[13]++;
  return new AppError(message, 400, 'DUPLICATE_FIELD');
};
/* istanbul ignore next */
cov_1mdbgbws22().s[14]++;
const handleValidationErrorDB = err => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[3]++;
  const errors =
  /* istanbul ignore next */
  (cov_1mdbgbws22().s[15]++, Object.values(err.errors).map(el => {
    /* istanbul ignore next */
    cov_1mdbgbws22().f[4]++;
    cov_1mdbgbws22().s[16]++;
    return el.message;
  }));
  const message =
  /* istanbul ignore next */
  (cov_1mdbgbws22().s[17]++, `Invalid input data. ${errors.join('. ')}`);
  /* istanbul ignore next */
  cov_1mdbgbws22().s[18]++;
  return new AppError(message, 400, 'VALIDATION_ERROR');
};
/* istanbul ignore next */
cov_1mdbgbws22().s[19]++;
const handleJWTError = () => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[5]++;
  cov_1mdbgbws22().s[20]++;
  return new AppError('Invalid token. Please log in again!', 401, 'INVALID_TOKEN');
};
/* istanbul ignore next */
cov_1mdbgbws22().s[21]++;
const handleJWTExpiredError = () => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[6]++;
  cov_1mdbgbws22().s[22]++;
  return new AppError('Your token has expired! Please log in again.', 401, 'TOKEN_EXPIRED');
};

// Send error response in development
/* istanbul ignore next */
cov_1mdbgbws22().s[23]++;
const sendErrorDev = (err, req, res) => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[7]++;
  cov_1mdbgbws22().s[24]++;
  // Log error details
  logger.error('Error in development:', {
    error: err.message,
    stack: err.stack,
    url: req.originalUrl,
    method: req.method,
    ip: req.ip,
    userAgent: req.get('User-Agent')
  });
  /* istanbul ignore next */
  cov_1mdbgbws22().s[25]++;
  return res.status(err.statusCode).json({
    success: false,
    error: {
      code: err.code,
      message: err.message,
      stack: err.stack,
      details: err
    }
  });
};

// Send error response in production
/* istanbul ignore next */
cov_1mdbgbws22().s[26]++;
const sendErrorProd = (err, req, res) => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[8]++;
  cov_1mdbgbws22().s[27]++;
  // Log error details
  logger.error('Production error:', {
    error: err.message,
    code: err.code,
    url: req.originalUrl,
    method: req.method,
    ip: req.ip,
    statusCode: err.statusCode
  });

  // Operational, trusted error: send message to client
  /* istanbul ignore next */
  cov_1mdbgbws22().s[28]++;
  if (err.isOperational) {
    /* istanbul ignore next */
    cov_1mdbgbws22().b[3][0]++;
    cov_1mdbgbws22().s[29]++;
    return res.status(err.statusCode).json({
      success: false,
      error: {
        code: err.code,
        message: err.message
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1mdbgbws22().b[3][1]++;
  }

  // Programming or other unknown error: don't leak error details
  cov_1mdbgbws22().s[30]++;
  logger.error('Unknown error:', {
    error: err,
    stack: err.stack
  });
  /* istanbul ignore next */
  cov_1mdbgbws22().s[31]++;
  return res.status(500).json({
    success: false,
    error: {
      code: 'INTERNAL_ERROR',
      message: 'Something went wrong!'
    }
  });
};

// Global error handling middleware
/* istanbul ignore next */
cov_1mdbgbws22().s[32]++;
const globalErrorHandler = (err, req, res, next) => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[9]++;
  cov_1mdbgbws22().s[33]++;
  err.statusCode =
  /* istanbul ignore next */
  (cov_1mdbgbws22().b[4][0]++, err.statusCode) ||
  /* istanbul ignore next */
  (cov_1mdbgbws22().b[4][1]++, 500);
  /* istanbul ignore next */
  cov_1mdbgbws22().s[34]++;
  err.status =
  /* istanbul ignore next */
  (cov_1mdbgbws22().b[5][0]++, err.status) ||
  /* istanbul ignore next */
  (cov_1mdbgbws22().b[5][1]++, 'error');
  /* istanbul ignore next */
  cov_1mdbgbws22().s[35]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_1mdbgbws22().b[6][0]++;
    cov_1mdbgbws22().s[36]++;
    sendErrorDev(err, req, res);
  } else {
    /* istanbul ignore next */
    cov_1mdbgbws22().b[6][1]++;
    let error =
    /* istanbul ignore next */
    (cov_1mdbgbws22().s[37]++, {
      ...err
    });
    /* istanbul ignore next */
    cov_1mdbgbws22().s[38]++;
    error.message = err.message;

    // Handle specific error types
    /* istanbul ignore next */
    cov_1mdbgbws22().s[39]++;
    if (error.name === 'CastError') {
      /* istanbul ignore next */
      cov_1mdbgbws22().b[7][0]++;
      cov_1mdbgbws22().s[40]++;
      error = handleCastErrorDB(error);
    } else
    /* istanbul ignore next */
    {
      cov_1mdbgbws22().b[7][1]++;
    }
    cov_1mdbgbws22().s[41]++;
    if (error.code === 11000) {
      /* istanbul ignore next */
      cov_1mdbgbws22().b[8][0]++;
      cov_1mdbgbws22().s[42]++;
      error = handleDuplicateFieldsDB(error);
    } else
    /* istanbul ignore next */
    {
      cov_1mdbgbws22().b[8][1]++;
    }
    cov_1mdbgbws22().s[43]++;
    if (error.name === 'ValidationError') {
      /* istanbul ignore next */
      cov_1mdbgbws22().b[9][0]++;
      cov_1mdbgbws22().s[44]++;
      error = handleValidationErrorDB(error);
    } else
    /* istanbul ignore next */
    {
      cov_1mdbgbws22().b[9][1]++;
    }
    cov_1mdbgbws22().s[45]++;
    if (error.name === 'JsonWebTokenError') {
      /* istanbul ignore next */
      cov_1mdbgbws22().b[10][0]++;
      cov_1mdbgbws22().s[46]++;
      error = handleJWTError();
    } else
    /* istanbul ignore next */
    {
      cov_1mdbgbws22().b[10][1]++;
    }
    cov_1mdbgbws22().s[47]++;
    if (error.name === 'TokenExpiredError') {
      /* istanbul ignore next */
      cov_1mdbgbws22().b[11][0]++;
      cov_1mdbgbws22().s[48]++;
      error = handleJWTExpiredError();
    } else
    /* istanbul ignore next */
    {
      cov_1mdbgbws22().b[11][1]++;
    }
    cov_1mdbgbws22().s[49]++;
    sendErrorProd(error, req, res);
  }
};

// Async error wrapper
/* istanbul ignore next */
cov_1mdbgbws22().s[50]++;
const catchAsync = fn => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[10]++;
  cov_1mdbgbws22().s[51]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_1mdbgbws22().f[11]++;
    cov_1mdbgbws22().s[52]++;
    fn(req, res, next).catch(next);
  };
};

// Handle unhandled promise rejections
/* istanbul ignore next */
cov_1mdbgbws22().s[53]++;
process.on('unhandledRejection', (err, promise) => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[12]++;
  cov_1mdbgbws22().s[54]++;
  logger.error('Unhandled Promise Rejection:', {
    error: err.message,
    stack: err.stack,
    promise: promise
  });

  // Close server gracefully
  /* istanbul ignore next */
  cov_1mdbgbws22().s[55]++;
  process.exit(1);
});

// Handle uncaught exceptions
/* istanbul ignore next */
cov_1mdbgbws22().s[56]++;
process.on('uncaughtException', err => {
  /* istanbul ignore next */
  cov_1mdbgbws22().f[13]++;
  cov_1mdbgbws22().s[57]++;
  logger.error('Uncaught Exception:', {
    error: err.message,
    stack: err.stack
  });

  // Close server gracefully
  /* istanbul ignore next */
  cov_1mdbgbws22().s[58]++;
  process.exit(1);
});
/* istanbul ignore next */
cov_1mdbgbws22().s[59]++;
module.exports = {
  AppError,
  globalErrorHandler,
  catchAsync
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW1kYmdid3MyMiIsImFjdHVhbENvdmVyYWdlIiwibG9nZ2VyIiwicyIsInJlcXVpcmUiLCJBcHBFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJtZXNzYWdlIiwic3RhdHVzQ29kZSIsImNvZGUiLCJiIiwiaXNPcGVyYXRpb25hbCIsImYiLCJzdGF0dXMiLCJzdGFydHNXaXRoIiwiY2FwdHVyZVN0YWNrVHJhY2UiLCJoYW5kbGVDYXN0RXJyb3JEQiIsImVyciIsInBhdGgiLCJ2YWx1ZSIsImhhbmRsZUR1cGxpY2F0ZUZpZWxkc0RCIiwiZXJybXNnIiwibWF0Y2giLCJoYW5kbGVWYWxpZGF0aW9uRXJyb3JEQiIsImVycm9ycyIsIk9iamVjdCIsInZhbHVlcyIsIm1hcCIsImVsIiwiam9pbiIsImhhbmRsZUpXVEVycm9yIiwiaGFuZGxlSldURXhwaXJlZEVycm9yIiwic2VuZEVycm9yRGV2IiwicmVxIiwicmVzIiwiZXJyb3IiLCJzdGFjayIsInVybCIsIm9yaWdpbmFsVXJsIiwibWV0aG9kIiwiaXAiLCJ1c2VyQWdlbnQiLCJnZXQiLCJqc29uIiwic3VjY2VzcyIsImRldGFpbHMiLCJzZW5kRXJyb3JQcm9kIiwiZ2xvYmFsRXJyb3JIYW5kbGVyIiwibmV4dCIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIm5hbWUiLCJjYXRjaEFzeW5jIiwiZm4iLCJjYXRjaCIsIm9uIiwicHJvbWlzZSIsImV4aXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiZXJyb3JIYW5kbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgbG9nZ2VyIH0gPSByZXF1aXJlKCcuLi91dGlscy9sb2dnZXInKTtcblxuLy8gQ3VzdG9tIGVycm9yIGNsYXNzIGZvciBhcHBsaWNhdGlvbiBlcnJvcnNcbmNsYXNzIEFwcEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBzdGF0dXNDb2RlLCBjb2RlID0gbnVsbCwgaXNPcGVyYXRpb25hbCA9IHRydWUpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy5pc09wZXJhdGlvbmFsID0gaXNPcGVyYXRpb25hbDtcbiAgICB0aGlzLnN0YXR1cyA9IGAke3N0YXR1c0NvZGV9YC5zdGFydHNXaXRoKCc0JykgPyAnZmFpbCcgOiAnZXJyb3InO1xuXG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG4gIH1cbn1cblxuLy8gRXJyb3IgaGFuZGxpbmcgZm9yIGRpZmZlcmVudCBlcnJvciB0eXBlc1xuY29uc3QgaGFuZGxlQ2FzdEVycm9yREIgPSAoZXJyKSA9PiB7XG4gIGNvbnN0IG1lc3NhZ2UgPSBgSW52YWxpZCAke2Vyci5wYXRofTogJHtlcnIudmFsdWV9YDtcbiAgcmV0dXJuIG5ldyBBcHBFcnJvcihtZXNzYWdlLCA0MDAsICdJTlZBTElEX0lEJyk7XG59O1xuXG5jb25zdCBoYW5kbGVEdXBsaWNhdGVGaWVsZHNEQiA9IChlcnIpID0+IHtcbiAgY29uc3QgdmFsdWUgPSBlcnIuZXJybXNnLm1hdGNoKC8oW1wiJ10pKFxcXFw/LikqP1xcMS8pWzBdO1xuICBjb25zdCBtZXNzYWdlID0gYER1cGxpY2F0ZSBmaWVsZCB2YWx1ZTogJHt2YWx1ZX0uIFBsZWFzZSB1c2UgYW5vdGhlciB2YWx1ZSFgO1xuICByZXR1cm4gbmV3IEFwcEVycm9yKG1lc3NhZ2UsIDQwMCwgJ0RVUExJQ0FURV9GSUVMRCcpO1xufTtcblxuY29uc3QgaGFuZGxlVmFsaWRhdGlvbkVycm9yREIgPSAoZXJyKSA9PiB7XG4gIGNvbnN0IGVycm9ycyA9IE9iamVjdC52YWx1ZXMoZXJyLmVycm9ycykubWFwKGVsID0+IGVsLm1lc3NhZ2UpO1xuICBjb25zdCBtZXNzYWdlID0gYEludmFsaWQgaW5wdXQgZGF0YS4gJHtlcnJvcnMuam9pbignLiAnKX1gO1xuICByZXR1cm4gbmV3IEFwcEVycm9yKG1lc3NhZ2UsIDQwMCwgJ1ZBTElEQVRJT05fRVJST1InKTtcbn07XG5cbmNvbnN0IGhhbmRsZUpXVEVycm9yID0gKCkgPT5cbiAgbmV3IEFwcEVycm9yKCdJbnZhbGlkIHRva2VuLiBQbGVhc2UgbG9nIGluIGFnYWluIScsIDQwMSwgJ0lOVkFMSURfVE9LRU4nKTtcblxuY29uc3QgaGFuZGxlSldURXhwaXJlZEVycm9yID0gKCkgPT5cbiAgbmV3IEFwcEVycm9yKCdZb3VyIHRva2VuIGhhcyBleHBpcmVkISBQbGVhc2UgbG9nIGluIGFnYWluLicsIDQwMSwgJ1RPS0VOX0VYUElSRUQnKTtcblxuLy8gU2VuZCBlcnJvciByZXNwb25zZSBpbiBkZXZlbG9wbWVudFxuY29uc3Qgc2VuZEVycm9yRGV2ID0gKGVyciwgcmVxLCByZXMpID0+IHtcbiAgLy8gTG9nIGVycm9yIGRldGFpbHNcbiAgbG9nZ2VyLmVycm9yKCdFcnJvciBpbiBkZXZlbG9wbWVudDonLCB7XG4gICAgZXJyb3I6IGVyci5tZXNzYWdlLFxuICAgIHN0YWNrOiBlcnIuc3RhY2ssXG4gICAgdXJsOiByZXEub3JpZ2luYWxVcmwsXG4gICAgbWV0aG9kOiByZXEubWV0aG9kLFxuICAgIGlwOiByZXEuaXAsXG4gICAgdXNlckFnZW50OiByZXEuZ2V0KCdVc2VyLUFnZW50JylcbiAgfSk7XG5cbiAgcmV0dXJuIHJlcy5zdGF0dXMoZXJyLnN0YXR1c0NvZGUpLmpzb24oe1xuICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgIGVycm9yOiB7XG4gICAgICBjb2RlOiBlcnIuY29kZSxcbiAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxuICAgICAgc3RhY2s6IGVyci5zdGFjayxcbiAgICAgIGRldGFpbHM6IGVyclxuICAgIH1cbiAgfSk7XG59O1xuXG4vLyBTZW5kIGVycm9yIHJlc3BvbnNlIGluIHByb2R1Y3Rpb25cbmNvbnN0IHNlbmRFcnJvclByb2QgPSAoZXJyLCByZXEsIHJlcykgPT4ge1xuICAvLyBMb2cgZXJyb3IgZGV0YWlsc1xuICBsb2dnZXIuZXJyb3IoJ1Byb2R1Y3Rpb24gZXJyb3I6Jywge1xuICAgIGVycm9yOiBlcnIubWVzc2FnZSxcbiAgICBjb2RlOiBlcnIuY29kZSxcbiAgICB1cmw6IHJlcS5vcmlnaW5hbFVybCxcbiAgICBtZXRob2Q6IHJlcS5tZXRob2QsXG4gICAgaXA6IHJlcS5pcCxcbiAgICBzdGF0dXNDb2RlOiBlcnIuc3RhdHVzQ29kZVxuICB9KTtcblxuICAvLyBPcGVyYXRpb25hbCwgdHJ1c3RlZCBlcnJvcjogc2VuZCBtZXNzYWdlIHRvIGNsaWVudFxuICBpZiAoZXJyLmlzT3BlcmF0aW9uYWwpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyhlcnIuc3RhdHVzQ29kZSkuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiB7XG4gICAgICAgIGNvZGU6IGVyci5jb2RlLFxuICAgICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLy8gUHJvZ3JhbW1pbmcgb3Igb3RoZXIgdW5rbm93biBlcnJvcjogZG9uJ3QgbGVhayBlcnJvciBkZXRhaWxzXG4gIGxvZ2dlci5lcnJvcignVW5rbm93biBlcnJvcjonLCB7XG4gICAgZXJyb3I6IGVycixcbiAgICBzdGFjazogZXJyLnN0YWNrXG4gIH0pO1xuXG4gIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgc3VjY2VzczogZmFsc2UsXG4gICAgZXJyb3I6IHtcbiAgICAgIGNvZGU6ICdJTlRFUk5BTF9FUlJPUicsXG4gICAgICBtZXNzYWdlOiAnU29tZXRoaW5nIHdlbnQgd3JvbmchJ1xuICAgIH1cbiAgfSk7XG59O1xuXG4vLyBHbG9iYWwgZXJyb3IgaGFuZGxpbmcgbWlkZGxld2FyZVxuY29uc3QgZ2xvYmFsRXJyb3JIYW5kbGVyID0gKGVyciwgcmVxLCByZXMsIG5leHQpID0+IHtcbiAgZXJyLnN0YXR1c0NvZGUgPSBlcnIuc3RhdHVzQ29kZSB8fCA1MDA7XG4gIGVyci5zdGF0dXMgPSBlcnIuc3RhdHVzIHx8ICdlcnJvcic7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgc2VuZEVycm9yRGV2KGVyciwgcmVxLCByZXMpO1xuICB9IGVsc2Uge1xuICAgIGxldCBlcnJvciA9IHsgLi4uZXJyIH07XG4gICAgZXJyb3IubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuXG4gICAgLy8gSGFuZGxlIHNwZWNpZmljIGVycm9yIHR5cGVzXG4gICAgaWYgKGVycm9yLm5hbWUgPT09ICdDYXN0RXJyb3InKSBlcnJvciA9IGhhbmRsZUNhc3RFcnJvckRCKGVycm9yKTtcbiAgICBpZiAoZXJyb3IuY29kZSA9PT0gMTEwMDApIGVycm9yID0gaGFuZGxlRHVwbGljYXRlRmllbGRzREIoZXJyb3IpO1xuICAgIGlmIChlcnJvci5uYW1lID09PSAnVmFsaWRhdGlvbkVycm9yJykgZXJyb3IgPSBoYW5kbGVWYWxpZGF0aW9uRXJyb3JEQihlcnJvcik7XG4gICAgaWYgKGVycm9yLm5hbWUgPT09ICdKc29uV2ViVG9rZW5FcnJvcicpIGVycm9yID0gaGFuZGxlSldURXJyb3IoKTtcbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gJ1Rva2VuRXhwaXJlZEVycm9yJykgZXJyb3IgPSBoYW5kbGVKV1RFeHBpcmVkRXJyb3IoKTtcblxuICAgIHNlbmRFcnJvclByb2QoZXJyb3IsIHJlcSwgcmVzKTtcbiAgfVxufTtcblxuLy8gQXN5bmMgZXJyb3Igd3JhcHBlclxuY29uc3QgY2F0Y2hBc3luYyA9IChmbikgPT4ge1xuICByZXR1cm4gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgZm4ocmVxLCByZXMsIG5leHQpLmNhdGNoKG5leHQpO1xuICB9O1xufTtcblxuLy8gSGFuZGxlIHVuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbnNcbnByb2Nlc3Mub24oJ3VuaGFuZGxlZFJlamVjdGlvbicsIChlcnIsIHByb21pc2UpID0+IHtcbiAgbG9nZ2VyLmVycm9yKCdVbmhhbmRsZWQgUHJvbWlzZSBSZWplY3Rpb246Jywge1xuICAgIGVycm9yOiBlcnIubWVzc2FnZSxcbiAgICBzdGFjazogZXJyLnN0YWNrLFxuICAgIHByb21pc2U6IHByb21pc2VcbiAgfSk7XG4gIFxuICAvLyBDbG9zZSBzZXJ2ZXIgZ3JhY2VmdWxseVxuICBwcm9jZXNzLmV4aXQoMSk7XG59KTtcblxuLy8gSGFuZGxlIHVuY2F1Z2h0IGV4Y2VwdGlvbnNcbnByb2Nlc3Mub24oJ3VuY2F1Z2h0RXhjZXB0aW9uJywgKGVycikgPT4ge1xuICBsb2dnZXIuZXJyb3IoJ1VuY2F1Z2h0IEV4Y2VwdGlvbjonLCB7XG4gICAgZXJyb3I6IGVyci5tZXNzYWdlLFxuICAgIHN0YWNrOiBlcnIuc3RhY2tcbiAgfSk7XG4gIFxuICAvLyBDbG9zZSBzZXJ2ZXIgZ3JhY2VmdWxseVxuICBwcm9jZXNzLmV4aXQoMSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEFwcEVycm9yLFxuICBnbG9iYWxFcnJvckhhbmRsZXIsXG4gIGNhdGNoQXN5bmNcbn07Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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RUQ7QUFBQTtBQUFBbkMsY0FBQSxHQUFBRyxDQUFBO0FBQ0EsTUFBTW1ELFVBQVUsR0FBSUMsRUFBRSxJQUFLO0VBQUE7RUFBQXZELGNBQUEsR0FBQWEsQ0FBQTtFQUFBYixjQUFBLEdBQUFHLENBQUE7RUFDekIsT0FBTyxDQUFDK0IsR0FBRyxFQUFFQyxHQUFHLEVBQUVjLElBQUksS0FBSztJQUFBO0lBQUFqRCxjQUFBLEdBQUFhLENBQUE7SUFBQWIsY0FBQSxHQUFBRyxDQUFBO0lBQ3pCb0QsRUFBRSxDQUFDckIsR0FBRyxFQUFFQyxHQUFHLEVBQUVjLElBQUksQ0FBQyxDQUFDTyxLQUFLLENBQUNQLElBQUksQ0FBQztFQUNoQyxDQUFDO0FBQ0gsQ0FBQzs7QUFFRDtBQUFBO0FBQUFqRCxjQUFBLEdBQUFHLENBQUE7QUFDQStDLE9BQU8sQ0FBQ08sRUFBRSxDQUFDLG9CQUFvQixFQUFFLENBQUN2QyxHQUFHLEVBQUV3QyxPQUFPLEtBQUs7RUFBQTtFQUFBMUQsY0FBQSxHQUFBYSxDQUFBO0VBQUFiLGNBQUEsR0FBQUcsQ0FBQTtFQUNqREQsTUFBTSxDQUFDa0MsS0FBSyxDQUFDLDhCQUE4QixFQUFFO0lBQzNDQSxLQUFLLEVBQUVsQixHQUFHLENBQUNWLE9BQU87SUFDbEI2QixLQUFLLEVBQUVuQixHQUFHLENBQUNtQixLQUFLO0lBQ2hCcUIsT0FBTyxFQUFFQTtFQUNYLENBQUMsQ0FBQzs7RUFFRjtFQUFBO0VBQUExRCxjQUFBLEdBQUFHLENBQUE7RUFDQStDLE9BQU8sQ0FBQ1MsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUNqQixDQUFDLENBQUM7O0FBRUY7QUFBQTtBQUFBM0QsY0FBQSxHQUFBRyxDQUFBO0FBQ0ErQyxPQUFPLENBQUNPLEVBQUUsQ0FBQyxtQkFBbUIsRUFBR3ZDLEdBQUcsSUFBSztFQUFBO0VBQUFsQixjQUFBLEdBQUFhLENBQUE7RUFBQWIsY0FBQSxHQUFBRyxDQUFBO0VBQ3ZDRCxNQUFNLENBQUNrQyxLQUFLLENBQUMscUJBQXFCLEVBQUU7SUFDbENBLEtBQUssRUFBRWxCLEdBQUcsQ0FBQ1YsT0FBTztJQUNsQjZCLEtBQUssRUFBRW5CLEdBQUcsQ0FBQ21CO0VBQ2IsQ0FBQyxDQUFDOztFQUVGO0VBQUE7RUFBQXJDLGNBQUEsR0FBQUcsQ0FBQTtFQUNBK0MsT0FBTyxDQUFDUyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ2pCLENBQUMsQ0FBQztBQUFDO0FBQUEzRCxjQUFBLEdBQUFHLENBQUE7QUFFSHlELE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2Z4RCxRQUFRO0VBQ1IyQyxrQkFBa0I7RUFDbEJNO0FBQ0YsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==