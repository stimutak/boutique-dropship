{"version":3,"names":["describe","it","expect","beforeEach","require","formatError","createValidationError","ErrorCodes","result","toEqual","success","error","code","message","field","details","validationErrors","array","msg","param","location","VALIDATION_ERROR","toBe","NOT_FOUND","UNAUTHORIZED","FORBIDDEN","INTERNAL_ERROR","INVALID_CREDENTIALS","USER_EXISTS","TOKEN_INVALID","TOKEN_EXPIRED","PRODUCT_NOT_FOUND","INVALID_PRODUCT_ID","PRODUCTS_FETCH_ERROR","CART_ADD_ERROR","CART_UPDATE_ERROR","ITEM_NOT_FOUND","MAX_QUANTITY_EXCEEDED","ORDER_NOT_FOUND","ORDER_CREATE_ERROR","INVALID_ORDER_STATUS","PAYMENT_FAILED","PAYMENT_METHOD_INVALID","INSUFFICIENT_FUNDS","mockI18n","defaultMessage","translations","req","res","next","headers","status","jest","fn","mockReturnThis","json","errorResponse","validationError","toHaveBeenCalled","toHaveBeenCalledWith","toMatchObject","webhookError","send"],"sources":["errorHandler.test.js"],"sourcesContent":["const { describe, it, expect, beforeEach } = require('@jest/globals');\nconst { formatError, createValidationError, ErrorCodes } = require('../utils/errorHandler');\n\ndescribe('Error Handler Utilities', () => {\n  describe('formatError', () => {\n    it('should format error with code and message', () => {\n      const result = formatError('USER_NOT_FOUND', 'User not found');\n      \n      expect(result).toEqual({\n        success: false,\n        error: {\n          code: 'USER_NOT_FOUND',\n          message: 'User not found'\n        }\n      });\n    });\n\n    it('should include field when provided', () => {\n      const result = formatError('INVALID_EMAIL', 'Invalid email format', 'email');\n      \n      expect(result).toEqual({\n        success: false,\n        error: {\n          code: 'INVALID_EMAIL',\n          message: 'Invalid email format',\n          field: 'email'\n        }\n      });\n    });\n\n    it('should handle additional data', () => {\n      const result = formatError('VALIDATION_ERROR', 'Validation failed', null, {\n        details: [{ field: 'email', message: 'Required' }]\n      });\n      \n      expect(result).toEqual({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Validation failed',\n          details: [{ field: 'email', message: 'Required' }]\n        }\n      });\n    });\n  });\n\n  describe('createValidationError', () => {\n    it('should format express-validator errors', () => {\n      const validationErrors = {\n        array: () => [\n          { msg: 'Invalid email', param: 'email', location: 'body' },\n          { msg: 'Password too short', param: 'password', location: 'body' }\n        ]\n      };\n\n      const result = createValidationError(validationErrors);\n      \n      expect(result).toEqual({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Invalid input data',\n          details: [\n            { field: 'email', message: 'Invalid email', location: 'body' },\n            { field: 'password', message: 'Password too short', location: 'body' }\n          ]\n        }\n      });\n    });\n\n    it('should handle empty validation errors', () => {\n      const validationErrors = {\n        array: () => []\n      };\n\n      const result = createValidationError(validationErrors);\n      \n      expect(result).toEqual({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Invalid input data',\n          details: []\n        }\n      });\n    });\n  });\n\n  describe('ErrorCodes', () => {\n    it('should contain common error codes', () => {\n      expect(ErrorCodes.VALIDATION_ERROR).toBe('VALIDATION_ERROR');\n      expect(ErrorCodes.NOT_FOUND).toBe('NOT_FOUND');\n      expect(ErrorCodes.UNAUTHORIZED).toBe('UNAUTHORIZED');\n      expect(ErrorCodes.FORBIDDEN).toBe('FORBIDDEN');\n      expect(ErrorCodes.INTERNAL_ERROR).toBe('INTERNAL_ERROR');\n    });\n\n    it('should contain authentication error codes', () => {\n      expect(ErrorCodes.INVALID_CREDENTIALS).toBe('INVALID_CREDENTIALS');\n      expect(ErrorCodes.USER_EXISTS).toBe('USER_EXISTS');\n      expect(ErrorCodes.TOKEN_INVALID).toBe('TOKEN_INVALID');\n      expect(ErrorCodes.TOKEN_EXPIRED).toBe('TOKEN_EXPIRED');\n    });\n\n    it('should contain product error codes', () => {\n      expect(ErrorCodes.PRODUCT_NOT_FOUND).toBe('PRODUCT_NOT_FOUND');\n      expect(ErrorCodes.INVALID_PRODUCT_ID).toBe('INVALID_PRODUCT_ID');\n      expect(ErrorCodes.PRODUCTS_FETCH_ERROR).toBe('PRODUCTS_FETCH_ERROR');\n    });\n\n    it('should contain cart error codes', () => {\n      expect(ErrorCodes.CART_ADD_ERROR).toBe('CART_ADD_ERROR');\n      expect(ErrorCodes.CART_UPDATE_ERROR).toBe('CART_UPDATE_ERROR');\n      expect(ErrorCodes.ITEM_NOT_FOUND).toBe('ITEM_NOT_FOUND');\n      expect(ErrorCodes.MAX_QUANTITY_EXCEEDED).toBe('MAX_QUANTITY_EXCEEDED');\n    });\n\n    it('should contain order error codes', () => {\n      expect(ErrorCodes.ORDER_NOT_FOUND).toBe('ORDER_NOT_FOUND');\n      expect(ErrorCodes.ORDER_CREATE_ERROR).toBe('ORDER_CREATE_ERROR');\n      expect(ErrorCodes.INVALID_ORDER_STATUS).toBe('INVALID_ORDER_STATUS');\n    });\n\n    it('should contain payment error codes', () => {\n      expect(ErrorCodes.PAYMENT_FAILED).toBe('PAYMENT_FAILED');\n      expect(ErrorCodes.PAYMENT_METHOD_INVALID).toBe('PAYMENT_METHOD_INVALID');\n      expect(ErrorCodes.INSUFFICIENT_FUNDS).toBe('INSUFFICIENT_FUNDS');\n    });\n  });\n\n  describe('i18n support', () => {\n    it('should use i18n key when available', () => {\n      // Mock i18n function that matches the actual signature\n      const mockI18n = (code, defaultMessage) => {\n        const translations = {\n          'USER_NOT_FOUND': 'User not found',\n          'INVALID_EMAIL': 'Invalid email format'\n        };\n        return translations[code] || defaultMessage || code;\n      };\n\n      const result = formatError('USER_NOT_FOUND', 'User not found', null, null, mockI18n);\n      expect(result.error.message).toBe('User not found');\n    });\n\n    it('should fallback to provided message when i18n key not found', () => {\n      const mockI18n = (code, defaultMessage) => defaultMessage || code; // Return default message when not found\n      \n      const result = formatError('CUSTOM_ERROR', 'Custom error message', null, null, mockI18n);\n      expect(result.error.message).toBe('Custom error message');\n    });\n  });\n});\n\ndescribe('Error Response Middleware', () => {\n  let req, res, next;\n\n  beforeEach(() => {\n    req = {\n      headers: {\n        'x-locale': 'en'\n      }\n    };\n    res = {\n      status: jest.fn().mockReturnThis(),\n      json: jest.fn()\n    };\n    next = jest.fn();\n  });\n\n  it('should add error helper methods to response object', () => {\n    const { errorResponse } = require('../utils/errorHandler');\n    \n    errorResponse(req, res, next);\n    \n    expect(typeof res.error).toBe('function');\n    expect(typeof res.validationError).toBe('function');\n    expect(next).toHaveBeenCalled();\n  });\n\n  it('should send formatted error with status code', () => {\n    const { errorResponse } = require('../utils/errorHandler');\n    \n    errorResponse(req, res, next);\n    res.error(404, 'USER_NOT_FOUND', 'User not found');\n    \n    expect(res.status).toHaveBeenCalledWith(404);\n    expect(res.json).toHaveBeenCalledWith({\n      success: false,\n      error: {\n        code: 'USER_NOT_FOUND',\n        message: 'User not found'\n      }\n    });\n  });\n\n  it('should handle validation errors', () => {\n    const { errorResponse } = require('../utils/errorHandler');\n    \n    errorResponse(req, res, next);\n    \n    const validationErrors = {\n      array: () => [\n        { msg: 'Invalid email', param: 'email', location: 'body' }\n      ]\n    };\n    \n    res.validationError(validationErrors);\n    \n    expect(res.status).toHaveBeenCalledWith(400);\n    expect(res.json).toHaveBeenCalledWith({\n      success: false,\n      error: {\n        code: 'VALIDATION_ERROR',\n        message: 'Invalid input data',\n        details: [\n          { field: 'email', message: 'Invalid email', location: 'body' }\n        ]\n      }\n    });\n  });\n});\n\n// Test for specific route error patterns\ndescribe('Route Error Patterns', () => {\n  it('should handle auth route errors consistently', () => {\n    const error = formatError('INVALID_CREDENTIALS', 'Invalid email or password');\n    expect(error).toMatchObject({\n      success: false,\n      error: {\n        code: 'INVALID_CREDENTIALS',\n        message: 'Invalid email or password'\n      }\n    });\n  });\n\n  it('should handle product route errors consistently', () => {\n    const error = formatError('PRODUCT_NOT_FOUND', 'Product not found');\n    expect(error).toMatchObject({\n      success: false,\n      error: {\n        code: 'PRODUCT_NOT_FOUND',\n        message: 'Product not found'\n      }\n    });\n  });\n\n  it('should handle cart route errors consistently', () => {\n    const error = formatError('MAX_QUANTITY_EXCEEDED', 'Cannot exceed maximum quantity of 99');\n    expect(error).toMatchObject({\n      success: false,\n      error: {\n        code: 'MAX_QUANTITY_EXCEEDED',\n        message: 'Cannot exceed maximum quantity of 99'\n      }\n    });\n  });\n\n  it('should handle payment webhook errors with plain text', () => {\n    // Webhooks often need plain text responses\n    const { webhookError } = require('../utils/errorHandler');\n    const res = {\n      status: jest.fn().mockReturnThis(),\n      send: jest.fn()\n    };\n    \n    webhookError(res, 400, 'Payment ID is required');\n    \n    expect(res.status).toHaveBeenCalledWith(400);\n    expect(res.send).toHaveBeenCalledWith('Payment ID is required');\n  });\n});"],"mappings":"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","ignoreList":[]}