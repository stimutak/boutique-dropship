{"version":3,"names":["request","require","app","User","Product","mongoose","describe","testProduct","beforeAll","mongoUri","process","env","MONGODB_URI","connect","deleteMany","create","name","description","price","category","stock","image","isActive","afterAll","connection","close","test","response","get","expect","body","success","toBe","data","products","toBeInstanceOf","Array","length","toBeGreaterThan","toHaveProperty","set","headers","testUser","email","password","firstName","lastName","beforeEach","post","send","user","cookies","toBeDefined","tokenCookie","find","cookie","startsWith","toContain","loginResponse","profileResponse","options","endpoints","endpoint","res","status"],"sources":["docker-issues.test.js"],"sourcesContent":["const request = require('supertest');\nconst app = require('../server');\nconst User = require('../models/User');\nconst Product = require('../models/Product');\nconst mongoose = require('mongoose');\n\ndescribe('Docker Environment Issues - Bug Reproduction', () => {\n  let testProduct;\n  \n  beforeAll(async () => {\n    // Connect to test database\n    const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/holistic-store-test';\n    await mongoose.connect(mongoUri);\n    \n    // Clear test data\n    await User.deleteMany({});\n    await Product.deleteMany({});\n    \n    // Create test product\n    testProduct = await Product.create({\n      name: 'Test Product',\n      description: 'Test product for Docker testing',\n      price: 19.99,\n      category: 'test',\n      stock: 100,\n      image: '/images/test-product.jpg',\n      isActive: true\n    });\n  });\n\n  afterAll(async () => {\n    await mongoose.connection.close();\n  });\n\n  describe('Issue #1: Products not displaying on frontend', () => {\n    test('GET /api/products should return products list', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.products).toBeInstanceOf(Array);\n      expect(response.body.data.products.length).toBeGreaterThan(0);\n      expect(response.body.data.products[0]).toHaveProperty('name');\n      expect(response.body.data.products[0]).toHaveProperty('price');\n    });\n\n    test('Frontend API calls should work with proxy configuration', async () => {\n      // This test simulates the frontend making an API call\n      // In Docker, the frontend nginx needs to proxy /api calls to backend\n      const response = await request(app)\n        .get('/api/products')\n        .set('Origin', 'http://localhost:3001')\n        .set('Referer', 'http://localhost:3001/products')\n        .expect(200);\n\n      // Check CORS headers are set correctly\n      expect(response.headers['access-control-allow-origin']).toBe('http://localhost:3001');\n      expect(response.headers['access-control-allow-credentials']).toBe('true');\n    });\n  });\n\n  describe('Issue #2: User login not working', () => {\n    const testUser = {\n      email: 'docker-test@example.com',\n      password: 'Password123!',\n      firstName: 'Docker',\n      lastName: 'Test'\n    };\n\n    beforeEach(async () => {\n      await User.deleteMany({ email: testUser.email });\n    });\n\n    test('POST /api/auth/register should create user and set httpOnly cookie', async () => {\n      const response = await request(app)\n        .post('/api/auth/register')\n        .send(testUser)\n        .expect(201);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.user).toHaveProperty('email', testUser.email);\n      \n      // Check for httpOnly cookie\n      const cookies = response.headers['set-cookie'];\n      expect(cookies).toBeDefined();\n      const tokenCookie = cookies.find(cookie => cookie.startsWith('token='));\n      expect(tokenCookie).toBeDefined();\n      expect(tokenCookie).toContain('HttpOnly');\n      expect(tokenCookie).toContain('Path=/');\n    });\n\n    test('POST /api/auth/login should authenticate user and set httpOnly cookie', async () => {\n      // First register the user\n      await User.create({\n        email: testUser.email,\n        password: testUser.password,\n        firstName: testUser.firstName,\n        lastName: testUser.lastName\n      });\n\n      const response = await request(app)\n        .post('/api/auth/login')\n        .send({\n          email: testUser.email,\n          password: testUser.password\n        })\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.user).toHaveProperty('email', testUser.email);\n      \n      // Check for httpOnly cookie\n      const cookies = response.headers['set-cookie'];\n      expect(cookies).toBeDefined();\n      const tokenCookie = cookies.find(cookie => cookie.startsWith('token='));\n      expect(tokenCookie).toBeDefined();\n      expect(tokenCookie).toContain('HttpOnly');\n    });\n\n    test('Protected routes should work with httpOnly cookie authentication', async () => {\n      // Register and login to get cookie\n      const loginResponse = await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n\n      const cookies = loginResponse.headers['set-cookie'];\n      \n      // Try to access protected route with cookie\n      const profileResponse = await request(app)\n        .get('/api/auth/profile')\n        .set('Cookie', cookies)\n        .expect(200);\n\n      expect(profileResponse.body.success).toBe(true);\n      expect(profileResponse.body.data.user.email).toBe(testUser.email);\n    });\n  });\n\n  describe('Issue #3: Frontend-Backend communication in Docker', () => {\n    test('CORS should allow frontend origin', async () => {\n      const response = await request(app)\n        .options('/api/products')\n        .set('Origin', 'http://localhost:3001')\n        .set('Access-Control-Request-Method', 'GET')\n        .expect(204);\n\n      expect(response.headers['access-control-allow-origin']).toBe('http://localhost:3001');\n      expect(response.headers['access-control-allow-credentials']).toBe('true');\n    });\n\n    test('API should handle requests without VITE_API_URL', async () => {\n      // When frontend uses relative URLs, they should work\n      const response = await request(app)\n        .get('/api/products')\n        .set('Host', 'localhost:5001')\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n    });\n\n    test('CSRF token endpoint should work', async () => {\n      const response = await request(app)\n        .get('/api/csrf-token')\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body).toHaveProperty('csrfToken');\n    });\n  });\n\n  describe('Docker nginx proxy configuration issues', () => {\n    test('API endpoints should be accessible through correct paths', async () => {\n      const endpoints = [\n        '/api/products',\n        '/api/csrf-token',\n        '/health'\n      ];\n\n      for (const endpoint of endpoints) {\n        const response = await request(app)\n          .get(endpoint)\n          .expect(200);\n\n        expect(response.body).toBeDefined();\n      }\n    });\n\n    test('Static image paths should be configured correctly', async () => {\n      // In Docker, /images should be served by backend\n      const response = await request(app)\n        .get('/images/test.jpg')\n        .expect((res) => {\n          // Should either return 200 (if exists) or 404 (if not exists)\n          // but not 500 or other errors\n          expect([200, 404]).toContain(res.status);\n        });\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}