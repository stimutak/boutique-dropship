{"version":3,"names":["mongoose","require","bcrypt","userSchema","Schema","email","type","String","required","unique","lowercase","trim","password","minlength","firstName","lastName","phone","addresses","enum","street","city","state","zipCode","country","default","isDefault","Boolean","isActive","isAdmin","lastLogin","Date","passwordResetToken","passwordResetExpiry","preferences","newsletter","notifications","emailPreferences","orderConfirmations","paymentReceipts","orderUpdates","promotionalEmails","welcomeEmails","timestamps","index","pre","next","isModified","hash","methods","comparePassword","candidatePassword","compare","getDefaultShippingAddress","find","addr","getDefaultBillingAddress","addAddress","addressData","forEach","push","save","updateAddress","addressId","updateData","address","id","_id","toString","Object","assign","removeAddress","pull","updateEmailPreferences","wantsEmail","emailType","toPublicJSON","createdAt","updatedAt","module","exports","model"],"sources":["User.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6\n  },\n  firstName: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  lastName: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  phone: {\n    type: String,\n    trim: true\n  },\n  addresses: [{\n    type: {\n      type: String,\n      enum: ['shipping', 'billing'],\n      required: true\n    },\n    firstName: { type: String, required: true },\n    lastName: { type: String, required: true },\n    street: { type: String, required: true },\n    city: { type: String, required: true },\n    state: { type: String, required: true },\n    zipCode: { type: String, required: true },\n    country: { type: String, required: true, default: 'US' },\n    phone: String,\n    isDefault: { type: Boolean, default: false }\n  }],\n  isActive: {\n    type: Boolean,\n    default: true\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false\n  },\n  lastLogin: Date,\n  passwordResetToken: String,\n  passwordResetExpiry: Date,\n  preferences: {\n    newsletter: { type: Boolean, default: false },\n    notifications: { type: Boolean, default: true },\n    emailPreferences: {\n      orderConfirmations: { type: Boolean, default: true },\n      paymentReceipts: { type: Boolean, default: true },\n      orderUpdates: { type: Boolean, default: true },\n      promotionalEmails: { type: Boolean, default: false },\n      welcomeEmails: { type: Boolean, default: true }\n    }\n  }\n}, {\n  timestamps: true\n});\n\n// Indexes for performance\nuserSchema.index({ email: 1 });\nuserSchema.index({ isActive: 1 });\nuserSchema.index({ lastLogin: -1 });\n\n// Pre-save middleware\nuserSchema.pre('save', async function(next) {\n  if (!this.isModified('password')) return next();\n  this.password = await bcrypt.hash(this.password, 12);\n  next();\n});\n\n// Authentication method\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n  return bcrypt.compare(candidatePassword, this.password);\n};\n\n// Method to get default shipping address\nuserSchema.methods.getDefaultShippingAddress = function() {\n  return this.addresses.find(addr => addr.type === 'shipping' && addr.isDefault) ||\n         this.addresses.find(addr => addr.type === 'shipping');\n};\n\n// Method to get default billing address\nuserSchema.methods.getDefaultBillingAddress = function() {\n  return this.addresses.find(addr => addr.type === 'billing' && addr.isDefault) ||\n         this.addresses.find(addr => addr.type === 'billing') ||\n         this.getDefaultShippingAddress(); // Fallback to shipping if no billing\n};\n\n// Method to add or update address\nuserSchema.methods.addAddress = function(addressData) {\n  // If this is set as default, unset other defaults of the same type\n  if (addressData.isDefault) {\n    this.addresses.forEach(addr => {\n      if (addr.type === addressData.type) {\n        addr.isDefault = false;\n      }\n    });\n  }\n  \n  this.addresses.push(addressData);\n  return this.save();\n};\n\n// Method to update address\nuserSchema.methods.updateAddress = function(addressId, updateData) {\n  const address = this.addresses.id(addressId);\n  if (!address) return null;\n  \n  // If setting as default, unset other defaults of the same type\n  if (updateData.isDefault) {\n    this.addresses.forEach(addr => {\n      if (addr.type === address.type && addr._id.toString() !== addressId) {\n        addr.isDefault = false;\n      }\n    });\n  }\n  \n  Object.assign(address, updateData);\n  return this.save();\n};\n\n// Method to remove address\nuserSchema.methods.removeAddress = function(addressId) {\n  this.addresses.pull(addressId);\n  return this.save();\n};\n\n// Method to update email preferences\nuserSchema.methods.updateEmailPreferences = function(preferences) {\n  Object.assign(this.preferences.emailPreferences, preferences);\n  return this.save();\n};\n\n// Method to check if user wants specific email type\nuserSchema.methods.wantsEmail = function(emailType) {\n  if (!this.preferences.notifications) return false;\n  return this.preferences.emailPreferences[emailType] !== false;\n};\n\n// Method to get public user data (excludes sensitive info)\nuserSchema.methods.toPublicJSON = function() {\n  return {\n    _id: this._id,\n    email: this.email,\n    firstName: this.firstName,\n    lastName: this.lastName,\n    phone: this.phone,\n    addresses: this.addresses,\n    preferences: this.preferences,\n    createdAt: this.createdAt,\n    updatedAt: this.updatedAt\n  };\n};\n\nmodule.exports = mongoose.model('User', userSchema);"],"mappings":"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","ignoreList":[]}