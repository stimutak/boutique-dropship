{"version":3,"names":["express","require","router","Router","body","validationResult","Order","Product","authenticateToken","requireAuth","validateGuestCheckout","isEmail","normalizeEmail","withMessage","trim","isLength","min","max","optional","isMobilePhone","isArray","isMongoId","isInt","post","req","res","errors","isEmpty","status","json","success","error","code","message","details","array","guestInfo","shippingAddress","billingAddress","items","requestItems","notes","referralSource","orderItems","subtotal","item","product","findById","productId","isActive","itemTotal","price","quantity","push","_id","wholesaler","name","email","productCode","notified","tax","Math","round","shipping","total","orderData","payment","method","order","create","populate","sendOrderConfirmation","emailData","orderNumber","customerName","firstName","lastName","map","productName","emailResult","console","emailError","createdAt","useDefaultAddresses","finalShippingAddress","finalBillingAddress","defaultShipping","user","getDefaultShippingAddress","defaultBilling","getDefaultBillingAddress","toObject","type","isDefault","customer","wantsEmail","session","cart","get","params","id","isAdmin","toString","data","toPublicJSON","page","parseInt","query","limit","skip","orders","find","sort","totalOrders","countDocuments","totalPages","ceil","publicOrders","pagination","currentPage","hasNextPage","hasPrevPage","save","put","trackingNumber","validStatuses","includes","updateData","findByIdAndUpdate","new","sendOrderStatusUpdate","customerEmail","shouldSendEmail","preferences","emailPreferences","orderUpdates","statusData","updatedAt","module","exports"],"sources":["orders.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst { body, validationResult } = require('express-validator');\nconst Order = require('../models/Order');\nconst Product = require('../models/Product');\nconst { authenticateToken, requireAuth } = require('../middleware/auth');\n\n// Validation middleware for guest checkout\nconst validateGuestCheckout = [\n  body('guestInfo.email')\n    .isEmail()\n    .normalizeEmail()\n    .withMessage('Valid email is required'),\n  body('guestInfo.firstName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('First name is required and must be less than 50 characters'),\n  body('guestInfo.lastName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Last name is required and must be less than 50 characters'),\n  body('guestInfo.phone')\n    .optional()\n    .isMobilePhone()\n    .withMessage('Valid phone number is required'),\n  body('shippingAddress.firstName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Shipping first name is required'),\n  body('shippingAddress.lastName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Shipping last name is required'),\n  body('shippingAddress.street')\n    .trim()\n    .isLength({ min: 1, max: 100 })\n    .withMessage('Shipping street address is required'),\n  body('shippingAddress.city')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Shipping city is required'),\n  body('shippingAddress.state')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Shipping state is required'),\n  body('shippingAddress.zipCode')\n    .trim()\n    .isLength({ min: 5, max: 10 })\n    .withMessage('Valid shipping zip code is required'),\n  body('shippingAddress.country')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Valid country code is required'),\n  body('billingAddress.firstName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Billing first name is required'),\n  body('billingAddress.lastName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Billing last name is required'),\n  body('billingAddress.street')\n    .trim()\n    .isLength({ min: 1, max: 100 })\n    .withMessage('Billing street address is required'),\n  body('billingAddress.city')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Billing city is required'),\n  body('billingAddress.state')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Billing state is required'),\n  body('billingAddress.zipCode')\n    .trim()\n    .isLength({ min: 5, max: 10 })\n    .withMessage('Valid billing zip code is required'),\n  body('billingAddress.country')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Valid country code is required'),\n  body('items')\n    .isArray({ min: 1 })\n    .withMessage('At least one item is required'),\n  body('items.*.productId')\n    .isMongoId()\n    .withMessage('Valid product ID is required'),\n  body('items.*.quantity')\n    .isInt({ min: 1, max: 99 })\n    .withMessage('Quantity must be between 1 and 99'),\n  body('referralSource')\n    .optional()\n    .trim()\n    .isLength({ max: 100 })\n    .withMessage('Referral source must be less than 100 characters')\n];\n\n// Create order (guest checkout)\nrouter.post('/', validateGuestCheckout, async (req, res) => {\n  try {\n    // Check validation errors\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Invalid input data',\n          details: errors.array()\n        }\n      });\n    }\n\n    const {\n      guestInfo,\n      shippingAddress,\n      billingAddress,\n      items: requestItems,\n      notes,\n      referralSource\n    } = req.body;\n\n    // Validate and process cart items\n    const orderItems = [];\n    let subtotal = 0;\n\n    for (const item of requestItems) {\n      const product = await Product.findById(item.productId);\n      \n      if (!product || !product.isActive) {\n        return res.status(400).json({\n          success: false,\n          error: {\n            code: 'INVALID_PRODUCT',\n            message: `Product ${item.productId} not found or unavailable`\n          }\n        });\n      }\n\n      const itemTotal = product.price * item.quantity;\n      subtotal += itemTotal;\n\n      orderItems.push({\n        product: product._id,\n        quantity: item.quantity,\n        price: product.price,\n        wholesaler: {\n          name: product.wholesaler.name,\n          email: product.wholesaler.email,\n          productCode: product.wholesaler.productCode,\n          notified: false\n        }\n      });\n    }\n\n    // Calculate totals (simplified - you may want to add tax calculation)\n    const tax = Math.round(subtotal * 0.08 * 100) / 100; // 8% tax rate\n    const shipping = subtotal > 50 ? 0 : 5.99; // Free shipping over $50\n    const total = Math.round((subtotal + tax + shipping) * 100) / 100;\n\n    // Create order\n    const orderData = {\n      guestInfo,\n      items: orderItems,\n      shippingAddress,\n      billingAddress,\n      subtotal: Math.round(subtotal * 100) / 100,\n      tax,\n      shipping,\n      total,\n      payment: {\n        method: 'other', // Will be updated when payment is processed\n        status: 'pending'\n      },\n      status: 'pending',\n      notes,\n      referralSource\n    };\n\n    // Note: Orders are created as guest orders by default\n    // They can be associated with users later via the /associate endpoint\n\n    const order = await Order.create(orderData);\n    \n    // Populate product details for email\n    await order.populate('items.product', 'name slug images');\n\n    // Send order confirmation email for guest checkout\n    try {\n      const { sendOrderConfirmation } = require('../utils/emailService');\n      \n      const emailData = {\n        orderNumber: order.orderNumber,\n        customerName: `${guestInfo.firstName} ${guestInfo.lastName}`,\n        items: order.items.map(item => ({\n          productName: item.product.name,\n          quantity: item.quantity,\n          price: item.price\n        })),\n        total: order.total,\n        shippingAddress: order.shippingAddress\n      };\n\n      const emailResult = await sendOrderConfirmation(guestInfo.email, emailData);\n      if (!emailResult.success) {\n        console.error('Failed to send order confirmation email:', emailResult.error);\n      }\n    } catch (emailError) {\n      console.error('Error sending order confirmation email:', emailError);\n    }\n\n    // Note: Cart will be cleared after successful payment, not here\n    // This allows users to retry payment if it fails\n\n    res.status(201).json({\n      success: true,\n      message: 'Order created successfully',\n      order: {\n        _id: order._id,\n        orderNumber: order.orderNumber,\n        total: order.total,\n        status: order.status,\n        createdAt: order.createdAt\n      }\n    });\n\n  } catch (error) {\n    console.error('Error creating order:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_CREATION_ERROR',\n        message: 'Failed to create order'\n      }\n    });\n  }\n});\n\n// Create order for registered user\nrouter.post('/registered', requireAuth, async (req, res) => {\n  try {\n    const {\n      shippingAddress,\n      billingAddress,\n      items: requestItems,\n      notes,\n      referralSource,\n      useDefaultAddresses = false\n    } = req.body;\n\n    // Use default addresses if requested and available\n    let finalShippingAddress = shippingAddress;\n    let finalBillingAddress = billingAddress;\n\n    if (useDefaultAddresses) {\n      const defaultShipping = req.user.getDefaultShippingAddress();\n      const defaultBilling = req.user.getDefaultBillingAddress();\n      \n      if (defaultShipping) {\n        finalShippingAddress = defaultShipping.toObject();\n        delete finalShippingAddress._id;\n        delete finalShippingAddress.type;\n        delete finalShippingAddress.isDefault;\n      }\n      \n      if (defaultBilling) {\n        finalBillingAddress = defaultBilling.toObject();\n        delete finalBillingAddress._id;\n        delete finalBillingAddress.type;\n        delete finalBillingAddress.isDefault;\n      }\n    }\n\n    // Validate required addresses\n    if (!finalShippingAddress || !finalBillingAddress) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_ADDRESSES',\n          message: 'Shipping and billing addresses are required'\n        }\n      });\n    }\n\n    // Validate and process cart items (same logic as guest checkout)\n    const orderItems = [];\n    let subtotal = 0;\n\n    for (const item of requestItems) {\n      const product = await Product.findById(item.productId);\n      \n      if (!product || !product.isActive) {\n        return res.status(400).json({\n          success: false,\n          error: {\n            code: 'INVALID_PRODUCT',\n            message: `Product ${item.productId} not found or unavailable`\n          }\n        });\n      }\n\n      const itemTotal = product.price * item.quantity;\n      subtotal += itemTotal;\n\n      orderItems.push({\n        product: product._id,\n        quantity: item.quantity,\n        price: product.price,\n        wholesaler: {\n          name: product.wholesaler.name,\n          email: product.wholesaler.email,\n          productCode: product.wholesaler.productCode,\n          notified: false\n        }\n      });\n    }\n\n    // Calculate totals\n    const tax = Math.round(subtotal * 0.08 * 100) / 100;\n    const shipping = subtotal > 50 ? 0 : 5.99;\n    const total = Math.round((subtotal + tax + shipping) * 100) / 100;\n\n    // Create order for registered user\n    const orderData = {\n      customer: req.user._id,\n      items: orderItems,\n      shippingAddress: finalShippingAddress,\n      billingAddress: finalBillingAddress,\n      subtotal: Math.round(subtotal * 100) / 100,\n      tax,\n      shipping,\n      total,\n      payment: {\n        method: 'other',\n        status: 'pending'\n      },\n      status: 'pending',\n      notes,\n      referralSource\n    };\n\n    const order = await Order.create(orderData);\n    \n    // Populate product details for email\n    await order.populate('items.product', 'name slug images');\n\n    // Send order confirmation email for registered user\n    try {\n      if (req.user.wantsEmail('orderConfirmations')) {\n        const { sendOrderConfirmation } = require('../utils/emailService');\n        \n        const emailData = {\n          orderNumber: order.orderNumber,\n          customerName: `${req.user.firstName} ${req.user.lastName}`,\n          items: order.items.map(item => ({\n            productName: item.product.name,\n            quantity: item.quantity,\n            price: item.price\n          })),\n          total: order.total,\n          shippingAddress: order.shippingAddress\n        };\n\n        const emailResult = await sendOrderConfirmation(req.user.email, emailData);\n        if (!emailResult.success) {\n          console.error('Failed to send order confirmation email:', emailResult.error);\n        }\n      }\n    } catch (emailError) {\n      console.error('Error sending order confirmation email:', emailError);\n    }\n\n    // Clear cart session\n    if (req.session && req.session.cart) {\n      req.session.cart = [];\n    }\n\n    res.status(201).json({\n      success: true,\n      message: 'Order created successfully',\n      order: {\n        _id: order._id,\n        orderNumber: order.orderNumber,\n        total: order.total,\n        status: order.status,\n        createdAt: order.createdAt\n      }\n    });\n\n  } catch (error) {\n    console.error('Error creating registered user order:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_CREATION_ERROR',\n        message: 'Failed to create order'\n      }\n    });\n  }\n});\n\n// Get order by ID (requires authentication and ownership check)\nrouter.get('/:id', requireAuth, async (req, res) => {\n  try {\n    const order = await Order.findById(req.params.id)\n      .populate('items.product', '-wholesaler')\n      .populate('customer', 'firstName lastName email');\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'ORDER_NOT_FOUND',\n          message: 'Order not found'\n        }\n      });\n    }\n\n    // Check if user owns this order (unless admin)\n    if (!req.user.isAdmin && order.customer && order.customer._id.toString() !== req.user._id.toString()) {\n      return res.status(403).json({\n        success: false,\n        error: {\n          code: 'ACCESS_DENIED',\n          message: 'You can only access your own orders'\n        }\n      });\n    }\n\n    // Return public order data (excludes sensitive wholesaler info)\n    res.json({\n      success: true,\n      data: {\n        order: order.toPublicJSON()\n      }\n    });\n\n  } catch (error) {\n    console.error('Error fetching order:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_FETCH_ERROR',\n        message: 'Failed to fetch order'\n      }\n    });\n  }\n});\n\n// Get order history for registered user\nrouter.get('/', requireAuth, async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const skip = (page - 1) * limit;\n\n    \n    const orders = await Order.find({ customer: req.user._id })\n      .populate('items.product', 'name slug images price')\n      .sort({ createdAt: -1 })\n      .skip(skip)\n      .limit(limit);\n\n    const totalOrders = await Order.countDocuments({ customer: req.user._id });\n    const totalPages = Math.ceil(totalOrders / limit);\n    \n    \n\n    // Return public order data\n    const publicOrders = orders.map(order => order.toPublicJSON());\n\n    res.json({\n      success: true,\n      data: {\n        orders: publicOrders,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalOrders,\n          hasNextPage: page < totalPages,\n          hasPrevPage: page > 1\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error fetching order history:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_HISTORY_ERROR',\n        message: 'Failed to fetch order history'\n      }\n    });\n  }\n});\n\n// Associate order with authenticated user\nrouter.post('/:id/associate', requireAuth, async (req, res) => {\n  try {\n    const { id } = req.params;\n    \n    // Find the order\n    const order = await Order.findById(id);\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'ORDER_NOT_FOUND',\n          message: 'Order not found'\n        }\n      });\n    }\n\n    // Check if order is already associated with a user\n    if (order.customer) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'ORDER_ALREADY_ASSOCIATED',\n          message: 'Order is already associated with a user'\n        }\n      });\n    }\n\n    // Associate order with the authenticated user\n    order.customer = req.user._id;\n    await order.save();\n\n    res.json({\n      success: true,\n      message: 'Order successfully associated with your account'\n    });\n\n  } catch (error) {\n    console.error('Error associating order:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_ASSOCIATION_ERROR',\n        message: 'Failed to associate order with account'\n      }\n    });\n  }\n});\n\n// Update order status (admin only - placeholder for now)\nrouter.put('/:id/status', async (req, res) => {\n  try {\n    const { status, trackingNumber } = req.body;\n    \n    const validStatuses = ['pending', 'processing', 'shipped', 'delivered', 'cancelled'];\n    if (!validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_STATUS',\n          message: 'Invalid order status'\n        }\n      });\n    }\n\n    const updateData = { status };\n    if (trackingNumber) {\n      updateData.trackingNumber = trackingNumber;\n    }\n\n    const order = await Order.findByIdAndUpdate(\n      req.params.id,\n      updateData,\n      { new: true }\n    ).populate('customer', 'firstName lastName email preferences');\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'ORDER_NOT_FOUND',\n          message: 'Order not found'\n        }\n      });\n    }\n\n    // Send status update email\n    try {\n      const { sendOrderStatusUpdate } = require('../utils/emailService');\n      \n      let customerEmail, customerName, shouldSendEmail = true;\n      \n      if (order.customer) {\n        // Registered user\n        customerEmail = order.customer.email;\n        customerName = `${order.customer.firstName} ${order.customer.lastName}`;\n        shouldSendEmail = order.customer.preferences?.emailPreferences?.orderUpdates !== false;\n      } else {\n        // Guest user\n        customerEmail = order.guestInfo.email;\n        customerName = `${order.guestInfo.firstName} ${order.guestInfo.lastName}`;\n      }\n\n      if (shouldSendEmail && ['processing', 'shipped', 'delivered'].includes(status)) {\n        const statusData = {\n          orderNumber: order.orderNumber,\n          customerName,\n          status,\n          trackingNumber\n        };\n\n        const emailResult = await sendOrderStatusUpdate(customerEmail, statusData);\n        if (!emailResult.success) {\n          console.error('Failed to send order status update email:', emailResult.error);\n        }\n      }\n    } catch (emailError) {\n      console.error('Error sending order status update email:', emailError);\n    }\n\n    res.json({\n      success: true,\n      message: 'Order status updated',\n      order: {\n        _id: order._id,\n        orderNumber: order.orderNumber,\n        status: order.status,\n        trackingNumber: order.trackingNumber,\n        updatedAt: order.updatedAt\n      }\n    });\n\n  } catch (error) {\n    console.error('Error updating order status:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_UPDATE_ERROR',\n        message: 'Failed to update order status'\n      }\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}