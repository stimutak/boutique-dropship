{"version":3,"names":["request","require","express","mongoose","jwt","Product","User","productRoutes","createTestApp","app","use","json","describe","testProducts","adminUser","adminToken","beforeAll","process","env","JWT_SECRET","connect","MONGODB_TEST_URI","useNewUrlParser","useUnifiedTopology","beforeEach","deleteMany","create","email","password","firstName","lastName","isAdmin","sign","userId","_id","expiresIn","insertMany","name","slug","description","shortDescription","price","compareAtPrice","category","isActive","isFeatured","tags","images","url","alt","isPrimary","properties","chakra","element","zodiac","healing","seo","title","keywords","crossSiteIntegration","enabled","referenceKey","wholesaler","productCode","cost","afterAll","connection","close","it","response","get","expect","body","success","toBe","products","toHaveLength","pagination","currentPage","totalProducts","limit","forEach","product","toBeUndefined","query","every","p","filters","search","length","toBeGreaterThan","includes","minPrice","maxPrice","featured","sort","prices","map","toEqual","a","b","names","page","totalPages","hasNextPage","hasPrevPage","priceRange","min","q","results","meta","resultCount","suggest","suggestions","toBeDefined","suggestionsEnabled","error","code","toBeLessThanOrEqual","categories","crystalsCategory","find","cat","count","max","avg","counts","chakras","toContain","elements","healingProperties","appliedTo","roseQuartz","recommendations","basedOn","productId","toString","productName","fakeId","Types","ObjectId","related","relatedCount","newProduct","post","set","send","message","savedProduct","findOne","toBeTruthy","toMatch","invalidProduct","details","updateData","put","delete","updatedProduct","findById"],"sources":["products.test.js"],"sourcesContent":["const request = require('supertest');\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst jwt = require('jsonwebtoken');\nconst Product = require('../../models/Product');\nconst User = require('../../models/User');\nconst productRoutes = require('../../routes/products');\n\n// Create test app\nconst createTestApp = () => {\n  const app = express();\n  app.use(express.json());\n  app.use('/api/products', productRoutes);\n  return app;\n};\n\ndescribe('Product Routes', () => {\n  let app;\n  let testProducts;\n  let adminUser;\n  let adminToken;\n  \n  beforeAll(async () => {\n    // Set JWT secret for testing\n    process.env.JWT_SECRET = 'test-secret';\n    \n    await mongoose.connect(process.env.MONGODB_TEST_URI || 'mongodb://localhost:27017/holistic-store-test', {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    });\n    \n    app = createTestApp();\n  });\n  \n  beforeEach(async () => {\n    // Clear database\n    await Product.deleteMany({});\n    await User.deleteMany({});\n    \n    // Create admin user\n    adminUser = await User.create({\n      email: 'admin@example.com',\n      password: 'password123',\n      firstName: 'Admin',\n      lastName: 'User',\n      isAdmin: true\n    });\n    \n    adminToken = jwt.sign({ userId: adminUser._id }, process.env.JWT_SECRET, { expiresIn: '7d' });\n    \n    // Create test products\n    testProducts = await Product.insertMany([\n      {\n        name: 'Rose Quartz Crystal',\n        slug: 'rose-quartz-crystal',\n        description: 'Beautiful rose quartz crystal for heart chakra healing and love energy',\n        shortDescription: 'Heart chakra healing crystal for love and compassion',\n        price: 29.99,\n        compareAtPrice: 39.99,\n        category: 'crystals',\n        isActive: true,\n        isFeatured: true,\n        tags: ['rose quartz', 'heart chakra', 'love', 'healing'],\n        images: [{\n          url: 'https://example.com/rose-quartz.jpg',\n          alt: 'Rose Quartz Crystal',\n          isPrimary: true\n        }],\n        properties: {\n          chakra: ['heart'],\n          element: ['earth', 'water'],\n          zodiac: ['taurus', 'libra'],\n          healing: ['love', 'compassion', 'emotional-healing']\n        },\n        seo: {\n          title: 'Rose Quartz Crystal - Heart Chakra Healing Stone for Love',\n          description: 'Discover our premium Rose Quartz crystal for heart chakra healing.',\n          keywords: ['rose quartz', 'heart chakra', 'love crystal', 'healing stone']\n        },\n        crossSiteIntegration: {\n          enabled: true,\n          referenceKey: 'rose-quartz-heart-chakra'\n        },\n        wholesaler: {\n          name: 'Crystal Wholesale Co',\n          email: 'orders@crystalwholesale.com',\n          productCode: 'RQ-001',\n          cost: 15.00\n        }\n      },\n      {\n        name: 'Amethyst Crystal',\n        slug: 'amethyst-crystal',\n        description: 'Crown chakra crystal for spiritual growth and meditation',\n        shortDescription: 'Crown chakra crystal for spiritual development',\n        price: 24.99,\n        category: 'crystals',\n        isActive: true,\n        isFeatured: false,\n        tags: ['amethyst', 'crown chakra', 'meditation', 'spiritual'],\n        properties: {\n          chakra: ['crown', 'third-eye'],\n          element: ['air'],\n          zodiac: ['pisces', 'aquarius'],\n          healing: ['spiritual-growth', 'meditation', 'clarity']\n        },\n        wholesaler: {\n          name: 'Crystal Wholesale Co',\n          email: 'orders@crystalwholesale.com',\n          productCode: 'AM-001',\n          cost: 12.00\n        }\n      },\n      {\n        name: 'Lavender Essential Oil',\n        slug: 'lavender-essential-oil',\n        description: 'Pure lavender oil for relaxation and aromatherapy',\n        shortDescription: 'Relaxing lavender oil for sleep and calm',\n        price: 19.99,\n        category: 'oils',\n        isActive: true,\n        isFeatured: true,\n        tags: ['lavender', 'essential oil', 'relaxation', 'sleep'],\n        properties: {\n          chakra: ['heart', 'crown'],\n          element: ['air'],\n          healing: ['relaxation', 'sleep', 'stress-relief']\n        },\n        wholesaler: {\n          name: 'Essential Oils Direct',\n          email: 'fulfillment@oilsdirect.com',\n          productCode: 'LAV-15ML',\n          cost: 10.00\n        }\n      },\n      {\n        name: 'Inactive Product',\n        slug: 'inactive-product',\n        description: 'This product is inactive',\n        shortDescription: 'Inactive test product',\n        price: 9.99,\n        category: 'other',\n        isActive: false,\n        properties: {},\n        wholesaler: {\n          name: 'Test Wholesaler',\n          email: 'test@wholesaler.com',\n          productCode: 'INACTIVE-001',\n          cost: 5.00\n        }\n      }\n    ]);\n  });\n  \n  afterAll(async () => {\n    await mongoose.connection.close();\n  });\n  \n  describe('GET /api/products', () => {\n    it('should return all active products with default pagination', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.products).toHaveLength(3); // Only active products\n      expect(response.body.pagination.currentPage).toBe(1);\n      expect(response.body.pagination.totalProducts).toBe(3);\n      expect(response.body.pagination.limit).toBe(20);\n      \n      // Ensure wholesaler info is not exposed\n      response.body.products.forEach(product => {\n        expect(product.wholesaler).toBeUndefined();\n      });\n    });\n    \n    it('should filter products by category', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ category: 'crystals' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.products).toHaveLength(2);\n      expect(response.body.products.every(p => p.category === 'crystals')).toBe(true);\n      expect(response.body.filters.category).toBe('crystals');\n    });\n    \n    it('should search products by text', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ search: 'heart chakra' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.products.length).toBeGreaterThan(0);\n      expect(response.body.filters.search).toBe('heart chakra');\n    });\n    \n    it('should filter by chakra properties', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ chakra: 'heart' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.products.length).toBeGreaterThan(0);\n      expect(response.body.products.every(p => p.properties.chakra.includes('heart'))).toBe(true);\n    });\n    \n    it('should filter by multiple chakras', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ chakra: ['heart', 'crown'] })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.products.length).toBeGreaterThan(0);\n    });\n    \n    it('should filter by element properties', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ element: 'air' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.products.every(p => p.properties.element.includes('air'))).toBe(true);\n    });\n    \n    it('should filter by healing properties', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ healing: 'relaxation' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.products.every(p => p.properties.healing.includes('relaxation'))).toBe(true);\n    });\n    \n    it('should filter by price range', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ minPrice: 20, maxPrice: 30 })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.products.every(p => p.price >= 20 && p.price <= 30)).toBe(true);\n    });\n    \n    it('should filter featured products', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ featured: 'true' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.products.every(p => p.isFeatured === true)).toBe(true);\n    });\n    \n    it('should sort products by price low to high', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ sort: 'price-low' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      const prices = response.body.products.map(p => p.price);\n      expect(prices).toEqual([...prices].sort((a, b) => a - b));\n    });\n    \n    it('should sort products by price high to low', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ sort: 'price-high' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      const prices = response.body.products.map(p => p.price);\n      expect(prices).toEqual([...prices].sort((a, b) => b - a));\n    });\n    \n    it('should sort products by name', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ sort: 'name' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      const names = response.body.products.map(p => p.name);\n      expect(names).toEqual([...names].sort());\n    });\n    \n    it('should handle pagination correctly', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({ page: 1, limit: 2 })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.products).toHaveLength(2);\n      expect(response.body.pagination.currentPage).toBe(1);\n      expect(response.body.pagination.totalPages).toBe(2);\n      expect(response.body.pagination.hasNextPage).toBe(true);\n      expect(response.body.pagination.hasPrevPage).toBe(false);\n    });\n    \n    it('should combine multiple filters', async () => {\n      const response = await request(app)\n        .get('/api/products')\n        .query({\n          category: 'crystals',\n          chakra: 'heart',\n          minPrice: 25,\n          sort: 'price-high'\n        })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.filters.category).toBe('crystals');\n      expect(response.body.filters.chakra).toBe('heart');\n      expect(response.body.filters.priceRange.min).toBe('25');\n    });\n  });\n  \n  describe('GET /api/products/search', () => {\n    it('should perform text search', async () => {\n      const response = await request(app)\n        .get('/api/products/search')\n        .query({ q: 'crystal' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.query).toBe('crystal');\n      expect(response.body.results.length).toBeGreaterThan(0);\n      expect(response.body.meta.resultCount).toBeGreaterThan(0);\n    });\n    \n    it('should provide search suggestions', async () => {\n      const response = await request(app)\n        .get('/api/products/search')\n        .query({ q: 'rose', suggest: 'true' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.suggestions).toBeDefined();\n      expect(response.body.meta.suggestionsEnabled).toBe(true);\n    });\n    \n    it('should require search query', async () => {\n      const response = await request(app)\n        .get('/api/products/search')\n        .expect(400);\n      \n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('MISSING_QUERY');\n    });\n    \n    it('should limit search results', async () => {\n      const response = await request(app)\n        .get('/api/products/search')\n        .query({ q: 'healing' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.results.length).toBeLessThanOrEqual(20);\n    });\n  });\n  \n  describe('GET /api/products/categories', () => {\n    it('should return categories with counts and price ranges', async () => {\n      const response = await request(app)\n        .get('/api/products/categories')\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.categories).toHaveLength(2); // crystals and oils\n      \n      const crystalsCategory = response.body.categories.find(cat => cat.name === 'crystals');\n      expect(crystalsCategory).toBeDefined();\n      expect(crystalsCategory.count).toBe(2);\n      expect(crystalsCategory.priceRange.min).toBeDefined();\n      expect(crystalsCategory.priceRange.max).toBeDefined();\n      expect(crystalsCategory.priceRange.avg).toBeDefined();\n    });\n    \n    it('should sort categories by count', async () => {\n      const response = await request(app)\n        .get('/api/products/categories')\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      const counts = response.body.categories.map(cat => cat.count);\n      expect(counts).toEqual([...counts].sort((a, b) => b - a));\n    });\n  });\n  \n  describe('GET /api/products/filters', () => {\n    it('should return available filter options', async () => {\n      const response = await request(app)\n        .get('/api/products/filters')\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.filters.chakras).toContain('heart');\n      expect(response.body.filters.chakras).toContain('crown');\n      expect(response.body.filters.elements).toContain('air');\n      expect(response.body.filters.elements).toContain('earth');\n      expect(response.body.filters.healingProperties).toContain('love');\n      expect(response.body.filters.healingProperties).toContain('relaxation');\n      expect(response.body.filters.priceRange.min).toBeDefined();\n      expect(response.body.filters.priceRange.max).toBeDefined();\n    });\n    \n    it('should filter options by category', async () => {\n      const response = await request(app)\n        .get('/api/products/filters')\n        .query({ category: 'crystals' })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.appliedTo).toBe('category: crystals');\n    });\n    \n    it('should sort filter options alphabetically', async () => {\n      const response = await request(app)\n        .get('/api/products/filters')\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.filters.chakras).toEqual([...response.body.filters.chakras].sort());\n      expect(response.body.filters.elements).toEqual([...response.body.filters.elements].sort());\n    });\n  });\n  \n  describe('GET /api/products/recommendations/:productId', () => {\n    it('should return product recommendations', async () => {\n      const roseQuartz = testProducts.find(p => p.slug === 'rose-quartz-crystal');\n      \n      const response = await request(app)\n        .get(`/api/products/recommendations/${roseQuartz._id}`)\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.recommendations).toBeDefined();\n      expect(response.body.basedOn.productId).toBe(roseQuartz._id.toString());\n      expect(response.body.basedOn.productName).toBe('Rose Quartz Crystal');\n      expect(response.body.meta.count).toBeDefined();\n    });\n    \n    it('should limit recommendations', async () => {\n      const roseQuartz = testProducts.find(p => p.slug === 'rose-quartz-crystal');\n      \n      const response = await request(app)\n        .get(`/api/products/recommendations/${roseQuartz._id}`)\n        .query({ limit: 2 })\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.recommendations.length).toBeLessThanOrEqual(2);\n      expect(response.body.meta.limit).toBe(2);\n    });\n    \n    it('should return 404 for non-existent product', async () => {\n      const fakeId = new mongoose.Types.ObjectId();\n      \n      const response = await request(app)\n        .get(`/api/products/recommendations/${fakeId}`)\n        .expect(404);\n      \n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('PRODUCT_NOT_FOUND');\n    });\n    \n    it('should exclude the base product from recommendations', async () => {\n      const roseQuartz = testProducts.find(p => p.slug === 'rose-quartz-crystal');\n      \n      const response = await request(app)\n        .get(`/api/products/recommendations/${roseQuartz._id}`)\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.recommendations.every(p => p._id !== roseQuartz._id.toString())).toBe(true);\n    });\n  });\n  \n  describe('GET /api/products/:slug', () => {\n    it('should return product by slug with related products', async () => {\n      const response = await request(app)\n        .get('/api/products/rose-quartz-crystal')\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.product.name).toBe('Rose Quartz Crystal');\n      expect(response.body.product.slug).toBe('rose-quartz-crystal');\n      expect(response.body.product.price).toBe(29.99);\n      expect(response.body.related).toBeDefined();\n      expect(response.body.meta.slug).toBe('rose-quartz-crystal');\n      expect(response.body.meta.category).toBe('crystals');\n      \n      // Ensure wholesaler info is not exposed\n      expect(response.body.product.wholesaler).toBeUndefined();\n    });\n    \n    it('should return related products', async () => {\n      const response = await request(app)\n        .get('/api/products/rose-quartz-crystal')\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.related).toBeDefined();\n      expect(response.body.meta.relatedCount).toBeDefined();\n      \n      // Related products should not include the main product\n      expect(response.body.related.every(p => p.slug !== 'rose-quartz-crystal')).toBe(true);\n    });\n    \n    it('should return 404 for non-existent product', async () => {\n      const response = await request(app)\n        .get('/api/products/non-existent-product')\n        .expect(404);\n      \n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('PRODUCT_NOT_FOUND');\n    });\n    \n    it('should return 404 for inactive product', async () => {\n      const response = await request(app)\n        .get('/api/products/inactive-product')\n        .expect(404);\n      \n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('PRODUCT_NOT_FOUND');\n    });\n  });\n  \n  describe('POST /api/products (Admin Only)', () => {\n    it('should create new product with valid data', async () => {\n      const newProduct = {\n        name: 'Green Aventurine',\n        description: 'Green aventurine crystal for prosperity and luck',\n        shortDescription: 'Prosperity crystal for good fortune',\n        price: 22.99,\n        compareAtPrice: 29.99,\n        category: 'crystals',\n        properties: {\n          chakra: ['heart'],\n          element: ['earth'],\n          healing: ['prosperity', 'luck']\n        },\n        wholesaler: {\n          name: 'Crystal Wholesale Co',\n          email: 'orders@crystalwholesale.com',\n          productCode: 'GA-001',\n          cost: 12.00\n        }\n      };\n      \n      const response = await request(app)\n        .post('/api/products')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send(newProduct)\n        .expect(201);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.message).toBe('Product created successfully');\n      expect(response.body.product.name).toBe('Green Aventurine');\n      expect(response.body.product.slug).toBe('green-aventurine');\n      \n      // Verify product was saved to database\n      const savedProduct = await Product.findOne({ slug: 'green-aventurine' });\n      expect(savedProduct).toBeTruthy();\n      expect(savedProduct.wholesaler.name).toBe('Crystal Wholesale Co');\n    });\n    \n    it('should generate slug automatically', async () => {\n      const newProduct = {\n        name: 'Black Tourmaline Crystal',\n        description: 'Protection crystal for negative energy',\n        price: 18.99,\n        category: 'crystals',\n        properties: { chakra: ['root'] },\n        wholesaler: {\n          name: 'Crystal Wholesale Co',\n          email: 'orders@crystalwholesale.com',\n          productCode: 'BT-001',\n          cost: 10.00\n        }\n      };\n      \n      const response = await request(app)\n        .post('/api/products')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send(newProduct)\n        .expect(201);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.product.slug).toBe('black-tourmaline-crystal');\n    });\n    \n    it('should handle duplicate slugs', async () => {\n      const newProduct = {\n        name: 'Rose Quartz Crystal', // Same name as existing product\n        description: 'Another rose quartz crystal',\n        price: 25.99,\n        category: 'crystals',\n        properties: { chakra: ['heart'] },\n        wholesaler: {\n          name: 'Crystal Wholesale Co',\n          email: 'orders@crystalwholesale.com',\n          productCode: 'RQ-002',\n          cost: 13.00\n        }\n      };\n      \n      const response = await request(app)\n        .post('/api/products')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send(newProduct)\n        .expect(201);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.product.slug).toMatch(/^rose-quartz-crystal-\\d+$/);\n    });\n    \n    it('should validate required fields', async () => {\n      const invalidProduct = {\n        name: '',\n        price: -10,\n        category: 'invalid-category'\n      };\n      \n      const response = await request(app)\n        .post('/api/products')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send(invalidProduct)\n        .expect(400);\n      \n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('VALIDATION_ERROR');\n      expect(response.body.error.details).toBeDefined();\n    });\n    \n    it('should require admin authentication', async () => {\n      const newProduct = {\n        name: 'Test Product',\n        description: 'Test description',\n        price: 19.99,\n        category: 'crystals',\n        wholesaler: {\n          name: 'Test Wholesaler',\n          email: 'test@wholesaler.com',\n          productCode: 'TEST-001',\n          cost: 10.00\n        }\n      };\n      \n      const response = await request(app)\n        .post('/api/products')\n        .send(newProduct)\n        .expect(401);\n      \n      expect(response.body.success).toBe(false);\n    });\n  });\n  \n  describe('PUT /api/products/:id (Admin Only)', () => {\n    it('should update existing product', async () => {\n      const roseQuartz = testProducts.find(p => p.slug === 'rose-quartz-crystal');\n      const updateData = {\n        price: 34.99,\n        shortDescription: 'Updated description for heart chakra crystal'\n      };\n      \n      const response = await request(app)\n        .put(`/api/products/${roseQuartz._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send(updateData)\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.message).toBe('Product updated successfully');\n      expect(response.body.product.price).toBe(34.99);\n      expect(response.body.product.shortDescription).toBe('Updated description for heart chakra crystal');\n    });\n    \n    it('should return 404 for non-existent product', async () => {\n      const fakeId = new mongoose.Types.ObjectId();\n      \n      const response = await request(app)\n        .put(`/api/products/${fakeId}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({ price: 25.99 })\n        .expect(404);\n      \n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('PRODUCT_NOT_FOUND');\n    });\n    \n    it('should require admin authentication', async () => {\n      const roseQuartz = testProducts.find(p => p.slug === 'rose-quartz-crystal');\n      \n      const response = await request(app)\n        .put(`/api/products/${roseQuartz._id}`)\n        .send({ price: 25.99 })\n        .expect(401);\n      \n      expect(response.body.success).toBe(false);\n    });\n  });\n  \n  describe('DELETE /api/products/:id (Admin Only)', () => {\n    it('should deactivate product', async () => {\n      const roseQuartz = testProducts.find(p => p.slug === 'rose-quartz-crystal');\n      \n      const response = await request(app)\n        .delete(`/api/products/${roseQuartz._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .expect(200);\n      \n      expect(response.body.success).toBe(true);\n      expect(response.body.message).toBe('Product deactivated successfully');\n      expect(response.body.product.isActive).toBe(false);\n      \n      // Verify product is deactivated in database\n      const updatedProduct = await Product.findById(roseQuartz._id);\n      expect(updatedProduct.isActive).toBe(false);\n    });\n    \n    it('should return 404 for non-existent product', async () => {\n      const fakeId = new mongoose.Types.ObjectId();\n      \n      const response = await request(app)\n        .delete(`/api/products/${fakeId}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .expect(404);\n      \n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('PRODUCT_NOT_FOUND');\n    });\n    \n    it('should require admin authentication', async () => {\n      const roseQuartz = testProducts.find(p => p.slug === 'rose-quartz-crystal');\n      \n      const response = await request(app)\n        .delete(`/api/products/${roseQuartz._id}`)\n        .expect(401);\n      \n      expect(response.body.success).toBe(false);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}