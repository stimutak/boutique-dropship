{"version":3,"names":["request","require","mongoose","jwt","app","User","Product","Order","testUser","email","password","firstName","lastName","phone","testProduct","name","description","price","category","images","isActive","wholesaler","productCode","describe","product","validToken","invalidToken","sessionCookie","beforeAll","connect","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","deleteMany","create","sign","userId","afterAll","connection","close","beforeEach","registerRes","post","send","body","data","token","test","set","productId","_id","quantity","orderData","items","shippingAddress","street","city","state","zipCode","country","billingAddress","response","expect","status","not","toBe","error","message","toContain","success","loginRes","user","toBeDefined","profileRes","get","cartRes","badLoginRes","toBeUndefined","updateRes","put","guestOrderData","guestInfo","order","updateData","addressData","type","isDefault","addresses","toHaveLength","addRes","toString","guestRes","sessionId","headers","guestCartItems"],"sources":["issues-reproduction.test.js"],"sourcesContent":["const request = require('supertest');\nconst mongoose = require('mongoose');\nconst jwt = require('jsonwebtoken');\nconst app = require('../server');\nconst User = require('../models/User');\nconst Product = require('../models/Product');\nconst Order = require('../models/Order');\n\n// Test user data\nconst testUser = {\n  email: 'testuser@example.com',\n  password: 'TestPassword123!',\n  firstName: 'Test',\n  lastName: 'User',\n  phone: '1234567890'\n};\n\nconst testProduct = {\n  name: 'Test Product',\n  description: 'Test product description',\n  price: 29.99,\n  category: 'test',\n  images: ['test.jpg'],\n  isActive: true,\n  wholesaler: {\n    name: 'Test Wholesaler',\n    email: 'wholesaler@example.com',\n    productCode: 'TEST001'\n  }\n};\n\ndescribe('GitHub Issues Reproduction Tests', () => {\n  let product;\n  let validToken;\n  let invalidToken;\n  let sessionCookie;\n\n  beforeAll(async () => {\n    // Connect to test database\n    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/holistic-store-test', {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    });\n\n    // Clean up database\n    await User.deleteMany({});\n    await Product.deleteMany({});\n    await Order.deleteMany({});\n\n    // Create test product\n    product = await Product.create(testProduct);\n\n    // Generate invalid token\n    invalidToken = jwt.sign({ userId: '123456789012345678901234' }, 'wrongsecret');\n  });\n\n  afterAll(async () => {\n    await mongoose.connection.close();\n  });\n\n  beforeEach(async () => {\n    // Clean up users before each test\n    await User.deleteMany({});\n    await Order.deleteMany({});\n  });\n\n  // Issue #13: \"placing an order as logged in says you must be logged in to checkout\"\n  describe('Issue #13: Order placement as logged-in user', () => {\n    beforeEach(async () => {\n      // Create and login user\n      const registerRes = await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n      \n      validToken = registerRes.body.data.token;\n    });\n\n    test('FAILING: Should allow logged-in user to place order without authentication error', async () => {\n      // Add item to cart\n      await request(app)\n        .post('/api/cart/add')\n        .set('Authorization', `Bearer ${validToken}`)\n        .send({\n          productId: product._id,\n          quantity: 1\n        });\n\n      // Place order\n      const orderData = {\n        items: [{\n          productId: product._id,\n          quantity: 1,\n          price: product.price\n        }],\n        shippingAddress: {\n          firstName: 'Test',\n          lastName: 'User',\n          street: '123 Test St',\n          city: 'Test City',\n          state: 'TS',\n          zipCode: '12345',\n          country: 'US'\n        },\n        billingAddress: {\n          firstName: 'Test',\n          lastName: 'User',\n          street: '123 Test St',\n          city: 'Test City',\n          state: 'TS',\n          zipCode: '12345',\n          country: 'US'\n        }\n      };\n\n      const response = await request(app)\n        .post('/api/orders/registered')\n        .set('Authorization', `Bearer ${validToken}`)\n        .send(orderData);\n\n      expect(response.status).not.toBe(401);\n      expect(response.body.error?.message).not.toContain('must be logged in');\n      expect(response.status).toBe(201);\n      expect(response.body.success).toBe(true);\n    });\n  });\n\n  // Issue #12: \"logging in says cannot sync with ? and then acts as if logged in but without name\"\n  describe('Issue #12: Login sync error', () => {\n    test('FAILING: Should properly sync user data after login', async () => {\n      // Register user\n      await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n\n      // Login\n      const loginRes = await request(app)\n        .post('/api/auth/login')\n        .send({\n          email: testUser.email,\n          password: testUser.password\n        });\n\n      expect(loginRes.status).toBe(200);\n      expect(loginRes.body.success).toBe(true);\n      expect(loginRes.body.data.user).toBeDefined();\n      expect(loginRes.body.data.user.firstName).toBe(testUser.firstName);\n      expect(loginRes.body.data.user.lastName).toBe(testUser.lastName);\n      \n      // Verify token works\n      const profileRes = await request(app)\n        .get('/api/auth/profile')\n        .set('Authorization', `Bearer ${loginRes.body.data.token}`);\n\n      expect(profileRes.status).toBe(200);\n      expect(profileRes.body.data.user.firstName).toBe(testUser.firstName);\n    });\n  });\n\n  // Issue #11: \"registering presents itself as logged in but unable to do anything\"\n  describe('Issue #11: Registration login state', () => {\n    test('FAILING: Should be fully logged in after registration', async () => {\n      const registerRes = await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n\n      expect(registerRes.status).toBe(201);\n      expect(registerRes.body.data.token).toBeDefined();\n      expect(registerRes.body.data.user).toBeDefined();\n\n      const token = registerRes.body.data.token;\n\n      // Should be able to access protected routes\n      const profileRes = await request(app)\n        .get('/api/auth/profile')\n        .set('Authorization', `Bearer ${token}`);\n\n      expect(profileRes.status).toBe(200);\n      expect(profileRes.body.success).toBe(true);\n\n      // Should be able to add to cart\n      const cartRes = await request(app)\n        .post('/api/cart/add')\n        .set('Authorization', `Bearer ${token}`)\n        .send({\n          productId: product._id,\n          quantity: 1\n        });\n\n      expect(cartRes.status).toBe(200);\n      expect(cartRes.body.success).toBe(true);\n    });\n  });\n\n  // Issue #10: \"bad login presents as logged in without being able to do anything\"\n  describe('Issue #10: Bad login state', () => {\n    test('FAILING: Should not appear logged in after failed login', async () => {\n      // Register user first\n      await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n\n      // Try bad login\n      const badLoginRes = await request(app)\n        .post('/api/auth/login')\n        .send({\n          email: testUser.email,\n          password: 'wrongpassword'\n        });\n\n      expect(badLoginRes.status).toBe(401);\n      expect(badLoginRes.body.success).toBe(false);\n      expect(badLoginRes.body.data?.token).toBeUndefined();\n      expect(badLoginRes.body.data?.user).toBeUndefined();\n    });\n  });\n\n  // Issue #9: \"trying to update profile presents login screen even when logged in\"\n  describe('Issue #9: Profile update authentication', () => {\n    beforeEach(async () => {\n      const registerRes = await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n      \n      validToken = registerRes.body.data.token;\n    });\n\n    test('FAILING: Should allow profile update without re-authentication', async () => {\n      const updateRes = await request(app)\n        .put('/api/auth/profile')\n        .set('Authorization', `Bearer ${validToken}`)\n        .send({\n          firstName: 'Updated',\n          lastName: 'Name'\n        });\n\n      expect(updateRes.status).toBe(200);\n      expect(updateRes.body.success).toBe(true);\n      expect(updateRes.body.data.user.firstName).toBe('Updated');\n      \n      // Should still be authenticated after update\n      const profileRes = await request(app)\n        .get('/api/auth/profile')\n        .set('Authorization', `Bearer ${validToken}`);\n\n      expect(profileRes.status).toBe(200);\n      expect(profileRes.body.data.user.firstName).toBe('Updated');\n    });\n  });\n\n  // Issue #8 & #7: Guest checkout issues\n  describe('Issues #8 & #7: Guest checkout', () => {\n    test('FAILING: Should allow guest checkout', async () => {\n      const guestOrderData = {\n        guestInfo: {\n          email: 'guest@example.com',\n          firstName: 'Guest',\n          lastName: 'User',\n          phone: '9876543210'\n        },\n        items: [{\n          productId: product._id,\n          quantity: 1,\n          price: product.price\n        }],\n        shippingAddress: {\n          firstName: 'Guest',\n          lastName: 'User',\n          street: '456 Guest Ave',\n          city: 'Guest City',\n          state: 'GS',\n          zipCode: '54321',\n          country: 'US'\n        },\n        billingAddress: {\n          firstName: 'Guest',\n          lastName: 'User',\n          street: '456 Guest Ave',\n          city: 'Guest City',\n          state: 'GS',\n          zipCode: '54321',\n          country: 'US'\n        }\n      };\n\n      const response = await request(app)\n        .post('/api/orders')\n        .send(guestOrderData);\n\n      expect(response.status).toBe(201);\n      expect(response.body.success).toBe(true);\n      expect(response.body.order).toBeDefined();\n      expect(response.body.order._id).toBeDefined();\n    });\n  });\n\n  // Issue #6 & #4: Profile and address management\n  describe('Issues #6 & #4: Profile and address management', () => {\n    beforeEach(async () => {\n      const registerRes = await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n      \n      validToken = registerRes.body.data.token;\n    });\n\n    test('FAILING: Should update profile without issues', async () => {\n      const updateData = {\n        firstName: 'UpdatedFirst',\n        lastName: 'UpdatedLast',\n        phone: '5555555555'\n      };\n\n      const response = await request(app)\n        .put('/api/auth/profile')\n        .set('Authorization', `Bearer ${validToken}`)\n        .send(updateData);\n\n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.user.firstName).toBe('UpdatedFirst');\n    });\n\n    test('FAILING: Should add address to profile', async () => {\n      const addressData = {\n        type: 'shipping',\n        firstName: 'Test',\n        lastName: 'User',\n        street: '789 Address St',\n        city: 'Address City',\n        state: 'AS',\n        zipCode: '11111',\n        country: 'US',\n        isDefault: true\n      };\n\n      const response = await request(app)\n        .post('/api/auth/addresses')\n        .set('Authorization', `Bearer ${validToken}`)\n        .send(addressData);\n\n      expect(response.status).toBe(201);\n      expect(response.body.success).toBe(true);\n      expect(response.body.user.addresses).toHaveLength(1);\n      expect(response.body.user.addresses[0].street).toBe('789 Address St');\n    });\n  });\n\n  // Issues #5, #3: Cart persistence\n  describe('Issues #5 & #3: Cart persistence', () => {\n    let userId;\n\n    beforeEach(async () => {\n      const registerRes = await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n      \n      validToken = registerRes.body.data.token;\n      userId = registerRes.body.data.user._id;\n    });\n\n    test('FAILING: Should persist cart for registered users', async () => {\n      // Add item to cart\n      const addRes = await request(app)\n        .post('/api/cart/add')\n        .set('Authorization', `Bearer ${validToken}`)\n        .send({\n          productId: product._id,\n          quantity: 2\n        });\n\n      expect(addRes.status).toBe(200);\n\n      // Simulate new session - get cart\n      const cartRes = await request(app)\n        .get('/api/cart')\n        .set('Authorization', `Bearer ${validToken}`);\n\n      expect(cartRes.status).toBe(200);\n      expect(cartRes.body.data.items).toHaveLength(1);\n      expect(cartRes.body.data.items[0].quantity).toBe(2);\n      expect(cartRes.body.data.items[0].product._id).toBe(product._id.toString());\n    });\n\n    test('FAILING: Guest cart should merge on login', async () => {\n      // Add items as guest\n      const guestRes = await request(app)\n        .post('/api/cart/add')\n        .send({\n          productId: product._id,\n          quantity: 1\n        });\n\n      const sessionId = guestRes.headers['x-session-id'];\n      expect(sessionId).toBeDefined();\n\n      // Login with existing user\n      const loginRes = await request(app)\n        .post('/api/auth/login')\n        .set('x-session-id', sessionId)\n        .send({\n          email: testUser.email,\n          password: testUser.password,\n          guestCartItems: [{\n            productId: product._id,\n            quantity: 1\n          }]\n        });\n\n      expect(loginRes.status).toBe(200);\n\n      // Check cart after login\n      const cartRes = await request(app)\n        .get('/api/cart')\n        .set('Authorization', `Bearer ${loginRes.body.data.token}`);\n\n      expect(cartRes.body.data.items).toHaveLength(1);\n      expect(cartRes.body.data.items[0].quantity).toBe(1);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}