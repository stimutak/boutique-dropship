{"version":3,"names":["request","require","express","User","jwt","authRoutes","createTestApp","app","use","json","describe","testUser","authToken","beforeEach","deleteMany","email","password","firstName","lastName","preferences","emailPreferences","orderConfirmations","paymentReceipts","orderUpdates","promotionalEmails","welcomeEmails","save","sign","userId","_id","process","env","JWT_SECRET","expiresIn","afterEach","it","response","get","set","expect","body","toEqual","success","toBe","error","code","newPreferences","put","send","message","invalidPreferences","invalidKey","anotherInvalidKey","partialPreferences","status"],"sources":["emailPreferences.test.js"],"sourcesContent":["const request = require(\"supertest\");\nconst express = require(\"express\");\nconst User = require(\"../../models/User\");\nconst jwt = require(\"jsonwebtoken\");\nconst authRoutes = require(\"../../routes/auth\");\n\n// Create test app\nconst createTestApp = () => {\n  const app = express();\n  app.use(express.json());\n  app.use(\"/api/auth\", authRoutes);\n  return app;\n};\n\ndescribe(\"Email Preferences Endpoints\", () => {\n  let app;\n  let testUser;\n  let authToken;\n\n  beforeEach(async () => {\n    app = createTestApp();\n    await User.deleteMany({});\n\n    testUser = new User({\n      email: \"test@example.com\",\n      password: \"password123\",\n      firstName: \"Test\",\n      lastName: \"User\",\n      preferences: {\n        emailPreferences: {\n          orderConfirmations: true,\n          paymentReceipts: true,\n          orderUpdates: false,\n          promotionalEmails: false,\n          welcomeEmails: true,\n        },\n      },\n    });\n    await testUser.save();\n\n    authToken = jwt.sign(\n      { userId: testUser._id },\n      process.env.JWT_SECRET || \"test-secret\",\n      { expiresIn: \"24h\" }\n    );\n  });\n\n  afterEach(async () => {\n    await User.deleteMany({});\n  });\n\n  describe(\"GET /api/auth/email-preferences\", () => {\n    it(\"should return user email preferences when authenticated\", async () => {\n      const response = await request(app)\n        .get(\"/api/auth/email-preferences\")\n        .set(\"Authorization\", `Bearer ${authToken}`)\n        .expect(200);\n\n      expect(response.body).toEqual({\n        success: true,\n        preferences: {\n          orderConfirmations: true,\n          paymentReceipts: true,\n          orderUpdates: false,\n          promotionalEmails: false,\n          welcomeEmails: true,\n        },\n      });\n    });\n\n    it(\"should return 401 when not authenticated\", async () => {\n      const response = await request(app)\n        .get(\"/api/auth/email-preferences\")\n        .expect(401);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe(\"NO_TOKEN\");\n    });\n  });\n\n  describe(\"PUT /api/auth/email-preferences\", () => {\n    it(\"should update email preferences successfully\", async () => {\n      const newPreferences = {\n        orderConfirmations: false,\n        paymentReceipts: true,\n        orderUpdates: true,\n        promotionalEmails: true,\n        welcomeEmails: false,\n      };\n\n      const response = await request(app)\n        .put(\"/api/auth/email-preferences\")\n        .set(\"Authorization\", `Bearer ${authToken}`)\n        .send({ emailPreferences: newPreferences })\n        .expect(200);\n\n      expect(response.body).toEqual({\n        success: true,\n        message: \"Email preferences updated successfully\",\n        preferences: newPreferences,\n      });\n    });\n\n    it(\"should return 400 when emailPreferences is missing\", async () => {\n      const response = await request(app)\n        .put(\"/api/auth/email-preferences\")\n        .set(\"Authorization\", `Bearer ${authToken}`)\n        .send({})\n        .expect(400);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: \"INVALID_PREFERENCES\",\n          message: \"Valid email preferences object is required\",\n        },\n      });\n    });\n\n    it(\"should return 401 when not authenticated\", async () => {\n      const response = await request(app)\n        .put(\"/api/auth/email-preferences\")\n        .send({ emailPreferences: { orderConfirmations: false } })\n        .expect(401);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe(\"NO_TOKEN\");\n    });\n  });\n\n  describe(\"Additional Edge Cases\", () => {\n    it(\"should return 400 with invalid preference keys\", async () => {\n      const invalidPreferences = {\n        orderConfirmations: true,\n        invalidKey: true,\n        anotherInvalidKey: false,\n      };\n\n      const response = await request(app)\n        .put(\"/api/auth/email-preferences\")\n        .set(\"Authorization\", `Bearer ${authToken}`)\n        .send({ emailPreferences: invalidPreferences })\n        .expect(400);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: \"INVALID_PREFERENCE_KEYS\",\n          message: \"Invalid preference keys: invalidKey, anotherInvalidKey\",\n        },\n      });\n    });\n\n    it(\"should return 400 when emailPreferences is not an object\", async () => {\n      const response = await request(app)\n        .put(\"/api/auth/email-preferences\")\n        .set(\"Authorization\", `Bearer ${authToken}`)\n        .send({ emailPreferences: \"invalid\" })\n        .expect(400);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: \"INVALID_PREFERENCES\",\n          message: \"Valid email preferences object is required\",\n        },\n      });\n    });\n\n    it(\"should update partial preferences\", async () => {\n      const partialPreferences = {\n        promotionalEmails: true,\n        orderUpdates: true,\n      };\n\n      const response = await request(app)\n        .put(\"/api/auth/email-preferences\")\n        .set(\"Authorization\", `Bearer ${authToken}`)\n        .send({ emailPreferences: partialPreferences })\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.preferences.promotionalEmails).toBe(true);\n      expect(response.body.preferences.orderUpdates).toBe(true);\n      // Other preferences should remain unchanged\n      expect(response.body.preferences.orderConfirmations).toBe(true);\n      expect(response.body.preferences.paymentReceipts).toBe(true);\n      expect(response.body.preferences.welcomeEmails).toBe(true);\n    });\n\n    it(\"should handle empty preferences object\", async () => {\n      const response = await request(app)\n        .put(\"/api/auth/email-preferences\")\n        .set(\"Authorization\", `Bearer ${authToken}`)\n        .send({ emailPreferences: {} });\n\n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.message).toBe(\n        \"Email preferences updated successfully\"\n      );\n      // Original preferences should remain unchanged\n      expect(response.body.preferences.orderConfirmations).toBe(true);\n    });\n\n    it(\"should return 401 with invalid token\", async () => {\n      const response = await request(app)\n        .get(\"/api/auth/email-preferences\")\n        .set(\"Authorization\", \"Bearer invalid-token\")\n        .expect(401);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe(\"INVALID_TOKEN\");\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}