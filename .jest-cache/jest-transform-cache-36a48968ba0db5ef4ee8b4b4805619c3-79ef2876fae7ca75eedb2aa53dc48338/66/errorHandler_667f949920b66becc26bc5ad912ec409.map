{"version":3,"names":["logger","require","getErrorMessage","AppError","Error","constructor","message","statusCode","code","isOperational","status","startsWith","defaultMessage","captureStackTrace","handleCastErrorDB","err","path","value","handleDuplicateFieldsDB","errmsg","match","handleValidationErrorDB","errors","Object","values","map","el","join","handleJWTError","handleJWTExpiredError","sendErrorDev","req","res","error","stack","url","originalUrl","method","ip","userAgent","get","locale","headers","translatedMessage","json","success","originalMessage","details","sendErrorProd","internalErrorMessage","globalErrorHandler","next","process","env","NODE_ENV","name","catchAsync","fn","catch","on","promise","exit","module","exports"],"sources":["errorHandler.js"],"sourcesContent":["const { logger } = require('../utils/logger');\nconst { getErrorMessage } = require('../utils/i18n');\n\n// Custom error class for application errors\nclass AppError extends Error {\n  constructor(message, statusCode, code = null, isOperational = true) {\n    super(message);\n    this.statusCode = statusCode;\n    this.code = code;\n    this.isOperational = isOperational;\n    this.status = `${statusCode}`.startsWith('4') ? 'fail' : 'error';\n    this.defaultMessage = message; // Store original message\n\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n// Error handling for different error types\nconst handleCastErrorDB = (err) => {\n  const message = `Invalid ${err.path}: ${err.value}`;\n  return new AppError(message, 400, 'INVALID_ID');\n};\n\nconst handleDuplicateFieldsDB = (err) => {\n  const value = err.errmsg.match(/([\"'])(\\\\?.)*?\\1/)[0];\n  const message = `Duplicate field value: ${value}. Please use another value!`;\n  return new AppError(message, 400, 'DUPLICATE_FIELD');\n};\n\nconst handleValidationErrorDB = (err) => {\n  const errors = Object.values(err.errors).map(el => el.message);\n  const message = `Invalid input data. ${errors.join('. ')}`;\n  return new AppError(message, 400, 'VALIDATION_ERROR');\n};\n\nconst handleJWTError = () =>\n  new AppError('Invalid token. Please log in again!', 401, 'INVALID_TOKEN');\n\nconst handleJWTExpiredError = () =>\n  new AppError('Your token has expired! Please log in again.', 401, 'TOKEN_EXPIRED');\n\n// Send error response in development\nconst sendErrorDev = (err, req, res) => {\n  // Log error details\n  logger.error('Error in development:', {\n    error: err.message,\n    stack: err.stack,\n    url: req.originalUrl,\n    method: req.method,\n    ip: req.ip,\n    userAgent: req.get('User-Agent')\n  });\n\n  // Get locale from request\n  const locale = req.locale || req.headers['x-locale'] || 'en';\n  \n  // Get translated message if code is provided\n  let translatedMessage = err.message;\n  if (err.code) {\n    translatedMessage = getErrorMessage(err.code, locale, err.defaultMessage || err.message);\n  }\n\n  return res.status(err.statusCode).json({\n    success: false,\n    error: {\n      code: err.code,\n      message: translatedMessage,\n      originalMessage: err.message, // Show original message in dev\n      locale: locale, // Show which locale was used\n      stack: err.stack,\n      details: err\n    }\n  });\n};\n\n// Send error response in production\nconst sendErrorProd = (err, req, res) => {\n  // Log error details\n  logger.error('Production error:', {\n    error: err.message,\n    code: err.code,\n    url: req.originalUrl,\n    method: req.method,\n    ip: req.ip,\n    statusCode: err.statusCode\n  });\n\n  // Get locale from request\n  const locale = req.locale || req.headers['x-locale'] || 'en';\n\n  // Operational, trusted error: send message to client\n  if (err.isOperational) {\n    // Try to get translated message if code is provided\n    let message = err.message;\n    if (err.code) {\n      message = getErrorMessage(err.code, locale, err.defaultMessage || err.message);\n    }\n\n    return res.status(err.statusCode).json({\n      success: false,\n      error: {\n        code: err.code,\n        message: message\n      }\n    });\n  }\n\n  // Programming or other unknown error: don't leak error details\n  logger.error('Unknown error:', {\n    error: err,\n    stack: err.stack\n  });\n\n  // Get translated message for internal error\n  const internalErrorMessage = getErrorMessage('INTERNAL_ERROR', locale, 'Something went wrong!');\n\n  return res.status(500).json({\n    success: false,\n    error: {\n      code: 'INTERNAL_ERROR',\n      message: internalErrorMessage\n    }\n  });\n};\n\n// Global error handling middleware\nconst globalErrorHandler = (err, req, res, next) => {\n  err.statusCode = err.statusCode || 500;\n  err.status = err.status || 'error';\n\n  if (process.env.NODE_ENV === 'development') {\n    sendErrorDev(err, req, res);\n  } else {\n    let error = { ...err };\n    error.message = err.message;\n\n    // Handle specific error types\n    if (error.name === 'CastError') error = handleCastErrorDB(error);\n    if (error.code === 11000) error = handleDuplicateFieldsDB(error);\n    if (error.name === 'ValidationError') error = handleValidationErrorDB(error);\n    if (error.name === 'JsonWebTokenError') error = handleJWTError();\n    if (error.name === 'TokenExpiredError') error = handleJWTExpiredError();\n\n    sendErrorProd(error, req, res);\n  }\n};\n\n// Async error wrapper\nconst catchAsync = (fn) => {\n  return (req, res, next) => {\n    fn(req, res, next).catch(next);\n  };\n};\n\n// Handle unhandled promise rejections\nprocess.on('unhandledRejection', (err, promise) => {\n  logger.error('Unhandled Promise Rejection:', {\n    error: err.message,\n    stack: err.stack,\n    promise: promise\n  });\n  \n  // Close server gracefully\n  process.exit(1);\n});\n\n// Handle uncaught exceptions\nprocess.on('uncaughtException', (err) => {\n  logger.error('Uncaught Exception:', {\n    error: err.message,\n    stack: err.stack\n  });\n  \n  // Close server gracefully\n  process.exit(1);\n});\n\nmodule.exports = {\n  AppError,\n  globalErrorHandler,\n  catchAsync\n};"],"mappings":"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","ignoreList":[]}