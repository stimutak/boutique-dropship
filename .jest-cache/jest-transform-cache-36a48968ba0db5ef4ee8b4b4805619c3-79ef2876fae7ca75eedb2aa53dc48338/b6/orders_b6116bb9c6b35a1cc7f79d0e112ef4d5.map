{"version":3,"names":["express","require","router","Router","body","validationResult","Order","Product","User","authenticateToken","requireAuth","validateCSRFToken","getCurrencyForLocale","getExchangeRates","getUserCurrency","req","query","currency","headers","locale","validateGuestCheckout","isEmail","normalizeEmail","withMessage","trim","isLength","min","max","optional","isString","isArray","isMongoId","isInt","post","res","errors","isEmpty","status","json","success","error","code","message","details","array","guestInfo","shippingAddress","billingAddress","items","requestItems","notes","referralSource","orderItems","subtotal","productIds","map","item","productId","products","find","_id","$in","productMap","Map","p","toString","product","get","isActive","userCurrency","priceInCurrency","prices","price","itemTotal","quantity","push","wholesaler","name","email","productCode","notified","exchangeRates","exchangeRate","subtotalInCurrency","tax","Math","round","shipping","total","orderData","payment","method","user","customer","firstName","lastName","phone","order","create","populate","sendOrderConfirmation","emailData","orderNumber","customerName","productName","emailResult","console","emailError","createdAt","notificationAttempts","data","useDefaultAddresses","finalShippingAddress","finalBillingAddress","defaultShipping","getDefaultShippingAddress","defaultBilling","getDefaultBillingAddress","toObject","type","isDefault","itemsToProcess","length","findById","cart","wantsEmail","updatedAt","Date","save","session","params","id","isAdmin","toPublicJSON","page","parseInt","limit","skip","orders","sort","totalOrders","countDocuments","totalPages","ceil","publicOrders","pagination","currentPage","hasNextPage","hasPrevPage","put","trackingNumber","validStatuses","includes","updateData","findByIdAndUpdate","new","sendOrderStatusUpdate","customerEmail","shouldSendEmail","preferences","emailPreferences","orderUpdates","statusData","module","exports"],"sources":["orders.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst { body, validationResult } = require('express-validator');\nconst Order = require('../models/Order');\nconst Product = require('../models/Product');\nconst User = require('../models/User');\nconst { authenticateToken, requireAuth } = require('../middleware/auth');\nconst { validateCSRFToken } = require('../middleware/sessionCSRF');\nconst { getCurrencyForLocale, getExchangeRates } = require('../utils/currency');\n\n// Helper function to get user's currency from request\nfunction getUserCurrency(req) {\n  // Check for explicit currency in query or header\n  if (req.query.currency) return req.query.currency;\n  if (req.headers['x-currency']) return req.headers['x-currency'];\n  \n  // Get from locale header (set by frontend based on i18n)\n  const locale = req.headers['x-locale'] || 'en';\n  return getCurrencyForLocale(locale);\n}\n\n// Validation middleware for guest checkout\nconst validateGuestCheckout = [\n  body('guestInfo.email')\n    .isEmail()\n    .normalizeEmail()\n    .withMessage('Valid email is required'),\n  body('guestInfo.firstName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('First name is required and must be less than 50 characters'),\n  body('guestInfo.lastName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Last name is required and must be less than 50 characters'),\n  body('guestInfo.phone')\n    .optional()\n    .isString()\n    .isLength({ min: 7, max: 30 })\n    .withMessage('Phone number must be between 7 and 30 characters'),\n  body('shippingAddress.firstName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Shipping first name is required'),\n  body('shippingAddress.lastName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Shipping last name is required'),\n  body('shippingAddress.street')\n    .trim()\n    .isLength({ min: 1, max: 100 })\n    .withMessage('Shipping street address is required'),\n  body('shippingAddress.city')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Shipping city is required'),\n  body('shippingAddress.state')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Shipping state is required'),\n  body('shippingAddress.zipCode')\n    .trim()\n    .isLength({ min: 5, max: 10 })\n    .withMessage('Valid shipping zip code is required'),\n  body('shippingAddress.country')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Valid country code is required'),\n  body('billingAddress.firstName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Billing first name is required'),\n  body('billingAddress.lastName')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Billing last name is required'),\n  body('billingAddress.street')\n    .trim()\n    .isLength({ min: 1, max: 100 })\n    .withMessage('Billing street address is required'),\n  body('billingAddress.city')\n    .trim()\n    .isLength({ min: 1, max: 50 })\n    .withMessage('Billing city is required'),\n  body('billingAddress.state')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Billing state is required'),\n  body('billingAddress.zipCode')\n    .trim()\n    .isLength({ min: 5, max: 10 })\n    .withMessage('Valid billing zip code is required'),\n  body('billingAddress.country')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Valid country code is required'),\n  body('items')\n    .isArray({ min: 1 })\n    .withMessage('At least one item is required'),\n  body('items.*.productId')\n    .isMongoId()\n    .withMessage('Valid product ID is required'),\n  body('items.*.quantity')\n    .isInt({ min: 1, max: 99 })\n    .withMessage('Quantity must be between 1 and 99'),\n  body('referralSource')\n    .optional()\n    .trim()\n    .isLength({ max: 100 })\n    .withMessage('Referral source must be less than 100 characters')\n];\n\n// Create order (both guest and authenticated)\nrouter.post('/', authenticateToken, validateGuestCheckout, validateCSRFToken, async (req, res) => {\n  try {\n    // Check validation errors\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Invalid input data',\n          details: errors.array()\n        }\n      });\n    }\n\n    const {\n      guestInfo,\n      shippingAddress,\n      billingAddress,\n      items: requestItems,\n      notes,\n      referralSource\n    } = req.body;\n\n    // Validate and process cart items - FIXED N+1 QUERY\n    const orderItems = [];\n    let subtotal = 0;\n\n    // Batch fetch all products at once to avoid N+1 queries\n    const productIds = requestItems.map(item => item.productId);\n    const products = await Product.find({ _id: { $in: productIds } });\n    const productMap = new Map(products.map(p => [p._id.toString(), p]));\n\n    for (const item of requestItems) {\n      const product = productMap.get(item.productId);\n      \n      if (!product || !product.isActive) {\n        return res.status(400).json({\n          success: false,\n          error: {\n            code: 'INVALID_PRODUCT',\n            message: `Product ${item.productId} not found or unavailable`\n          }\n        });\n      }\n\n      // Get the price in user's currency if available, otherwise use USD price\n      const userCurrency = getUserCurrency(req);\n      const priceInCurrency = product.prices && product.prices[userCurrency] \n        ? product.prices[userCurrency] \n        : product.price;\n      \n      const itemTotal = priceInCurrency * item.quantity;\n      subtotal += itemTotal;\n\n      orderItems.push({\n        product: product._id,\n        quantity: item.quantity,\n        price: priceInCurrency,\n        wholesaler: {\n          name: product.wholesaler.name,\n          email: product.wholesaler.email,\n          productCode: product.wholesaler.productCode,\n          notified: false\n        }\n      });\n    }\n\n    // Get user's currency\n    const userCurrency = getUserCurrency(req);\n    const exchangeRates = getExchangeRates();\n    const exchangeRate = exchangeRates[userCurrency] || 1;\n    \n    // Subtotal is already in user's currency\n    const subtotalInCurrency = subtotal;\n    const tax = Math.round(subtotalInCurrency * 0.08 * 100) / 100; // 8% tax rate\n    const shipping = subtotalInCurrency > 50 ? 0 : 5.99; // Free shipping threshold in user currency\n    const total = Math.round((subtotalInCurrency + tax + shipping) * 100) / 100;\n\n    // Create order\n    const orderData = {\n      items: orderItems,\n      shippingAddress,\n      billingAddress,\n      subtotal: Math.round(subtotalInCurrency * 100) / 100,\n      tax,\n      shipping,\n      total,\n      payment: {\n        method: 'other', // Will be updated when payment is processed\n        status: 'pending'\n      },\n      status: 'pending',\n      notes,\n      referralSource,\n      currency: userCurrency,\n      exchangeRate: exchangeRate\n    };\n\n    // Add customer ID if user is authenticated\n    if (req.user) {\n      orderData.customer = req.user._id;\n      // For registered users, populate guest info from their profile\n      orderData.guestInfo = {\n        firstName: req.user.firstName,\n        lastName: req.user.lastName,\n        email: req.user.email,\n        phone: req.user.phone || guestInfo?.phone\n      };\n    } else {\n      // For guest checkout, use provided guest info\n      orderData.guestInfo = guestInfo;\n    }\n\n    const order = await Order.create(orderData);\n    \n    // Populate product details for email\n    await order.populate('items.product', 'name slug images');\n\n    // Send order confirmation email\n    try {\n      const { sendOrderConfirmation } = require('../utils/emailService');\n      \n      const emailData = {\n        orderNumber: order.orderNumber,\n        customerName: `${order.guestInfo.firstName} ${order.guestInfo.lastName}`,\n        items: order.items.map(item => ({\n          productName: item.product.name,\n          quantity: item.quantity,\n          price: item.price\n        })),\n        total: order.total,\n        shippingAddress: order.shippingAddress,\n        currency: order.currency\n      };\n\n      const emailResult = await sendOrderConfirmation(order.guestInfo.email, emailData);\n      if (!emailResult.success) {\n        console.error('Failed to send order confirmation email:', emailResult.error);\n      }\n    } catch (emailError) {\n      console.error('Error sending order confirmation email:', emailError);\n    }\n\n    // Note: Cart will be cleared after successful payment, not here\n    // This allows users to retry payment if it fails\n\n    res.status(201).json({\n      success: true,\n      message: 'Order created successfully',\n      order: {\n        _id: order._id,\n        orderNumber: order.orderNumber,\n        total: order.total,\n        status: order.status,\n        currency: order.currency,\n        exchangeRate: order.exchangeRate,\n        createdAt: order.createdAt\n      }\n    });\n\n  } catch (error) {\n    console.error('Error creating order:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_CREATION_ERROR',\n        message: 'Failed to create order'\n      }\n    });\n  }\n});\n\n// Create order (guest checkout) - explicit guest route\nrouter.post('/guest', validateGuestCheckout, async (req, res) => {\n  try {\n    // Check validation errors\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Invalid input data',\n          details: errors.array()\n        }\n      });\n    }\n\n    const {\n      guestInfo,\n      shippingAddress,\n      billingAddress,\n      items: requestItems,\n      notes,\n      referralSource\n    } = req.body;\n\n    // Validate and process cart items - FIXED N+1 QUERY\n    const orderItems = [];\n    let subtotal = 0;\n\n    // Batch fetch all products at once to avoid N+1 queries\n    const productIds = requestItems.map(item => item.productId);\n    const products = await Product.find({ _id: { $in: productIds } });\n    const productMap = new Map(products.map(p => [p._id.toString(), p]));\n\n    for (const item of requestItems) {\n      const product = productMap.get(item.productId);\n      \n      if (!product || !product.isActive) {\n        return res.status(400).json({\n          success: false,\n          error: {\n            code: 'INVALID_PRODUCT',\n            message: `Product ${item.productId} not found or unavailable`\n          }\n        });\n      }\n\n      // Get the price in user's currency if available, otherwise use USD price\n      const userCurrency = getUserCurrency(req);\n      const priceInCurrency = product.prices && product.prices[userCurrency] \n        ? product.prices[userCurrency] \n        : product.price;\n      \n      const itemTotal = priceInCurrency * item.quantity;\n      subtotal += itemTotal;\n\n      orderItems.push({\n        product: product._id,\n        quantity: item.quantity,\n        price: priceInCurrency,\n        wholesaler: {\n          name: product.wholesaler.name,\n          email: product.wholesaler.email,\n          productCode: product.wholesaler.productCode,\n          notified: false,\n          notificationAttempts: 0\n        }\n      });\n    }\n\n    // Get user's currency\n    const userCurrency = getUserCurrency(req);\n    const exchangeRates = getExchangeRates();\n    const exchangeRate = exchangeRates[userCurrency] || 1;\n    \n    // Subtotal is already in user's currency\n    const subtotalInCurrency = subtotal;\n    const tax = Math.round(subtotalInCurrency * 0.08 * 100) / 100; // 8% tax rate\n    const shipping = subtotalInCurrency > 50 ? 0 : 5.99; // Free shipping threshold in user currency\n    const total = Math.round((subtotalInCurrency + tax + shipping) * 100) / 100;\n\n    // Create order\n    const orderData = {\n      guestInfo,\n      items: orderItems,\n      shippingAddress,\n      billingAddress: billingAddress || shippingAddress,\n      subtotal: Math.round(subtotalInCurrency * 100) / 100,\n      tax,\n      shipping,\n      total,\n      payment: {\n        method: 'card',\n        status: 'pending'\n      },\n      status: 'pending',\n      notes,\n      referralSource,\n      currency: userCurrency,\n      exchangeRate: exchangeRate\n    };\n\n    const order = await Order.create(orderData);\n\n    res.status(201).json({\n      success: true,\n      message: 'Guest order created successfully',\n      data: {\n        order: {\n          _id: order._id,\n          orderNumber: order.orderNumber,\n          guestInfo: order.guestInfo,\n          items: order.items,\n          shippingAddress: order.shippingAddress,\n          billingAddress: order.billingAddress,\n          subtotal: order.subtotal,\n          tax: order.tax,\n          shipping: order.shipping,\n          total: order.total,\n          status: order.status,\n          currency: order.currency,\n          exchangeRate: order.exchangeRate,\n          createdAt: order.createdAt\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error creating guest order:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_CREATION_ERROR',\n        message: 'Failed to create guest order'\n      }\n    });\n  }\n});\n\n// Create order for registered user\nrouter.post('/registered', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    // Ensure user is authenticated\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'AUTHENTICATION_REQUIRED',\n          message: 'You must be logged in to place an order'\n        }\n      });\n    }\n\n    const {\n      shippingAddress,\n      billingAddress,\n      items: requestItems,\n      notes,\n      referralSource,\n      useDefaultAddresses = false\n    } = req.body;\n\n    // Use default addresses if requested and available\n    let finalShippingAddress = shippingAddress;\n    let finalBillingAddress = billingAddress;\n\n    if (useDefaultAddresses) {\n      const defaultShipping = req.user.getDefaultShippingAddress();\n      const defaultBilling = req.user.getDefaultBillingAddress();\n      \n      if (defaultShipping) {\n        finalShippingAddress = defaultShipping.toObject();\n        delete finalShippingAddress._id;\n        delete finalShippingAddress.type;\n        delete finalShippingAddress.isDefault;\n      }\n      \n      if (defaultBilling) {\n        finalBillingAddress = defaultBilling.toObject();\n        delete finalBillingAddress._id;\n        delete finalBillingAddress.type;\n        delete finalBillingAddress.isDefault;\n      }\n    }\n\n    // Validate required addresses\n    if (!finalShippingAddress || !finalBillingAddress) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_ADDRESSES',\n          message: 'Shipping and billing addresses are required'\n        }\n      });\n    }\n\n    // Get items from user's cart if not provided\n    let itemsToProcess = requestItems;\n    if (!itemsToProcess || itemsToProcess.length === 0) {\n      // Fetch from user's cart\n      const user = await User.findById(req.user._id);\n      if (!user.cart || !user.cart.items || user.cart.items.length === 0) {\n        return res.status(400).json({\n          success: false,\n          error: {\n            code: 'EMPTY_CART',\n            message: 'Your cart is empty'\n          }\n        });\n      }\n      itemsToProcess = user.cart.items.map(item => ({\n        productId: item.product,\n        quantity: item.quantity\n      }));\n    }\n\n    // Validate and process cart items - FIXED N+1 QUERY\n    const orderItems = [];\n    let subtotal = 0;\n\n    // Batch fetch all products at once to avoid N+1 queries\n    const productIds = itemsToProcess.map(item => item.productId);\n    const products = await Product.find({ _id: { $in: productIds } });\n    const productMap = new Map(products.map(p => [p._id.toString(), p]));\n\n    for (const item of itemsToProcess) {\n      const product = productMap.get(item.productId.toString());\n      \n      if (!product || !product.isActive) {\n        return res.status(400).json({\n          success: false,\n          error: {\n            code: 'INVALID_PRODUCT',\n            message: `Product ${item.productId} not found or unavailable`\n          }\n        });\n      }\n\n      // Get the price in user's currency if available, otherwise use USD price\n      const userCurrency = getUserCurrency(req);\n      const priceInCurrency = product.prices && product.prices[userCurrency] \n        ? product.prices[userCurrency] \n        : product.price;\n      \n      const itemTotal = priceInCurrency * item.quantity;\n      subtotal += itemTotal;\n\n      orderItems.push({\n        product: product._id,\n        quantity: item.quantity,\n        price: priceInCurrency,\n        wholesaler: {\n          name: product.wholesaler.name,\n          email: product.wholesaler.email,\n          productCode: product.wholesaler.productCode,\n          notified: false\n        }\n      });\n    }\n\n    // Get user's currency\n    const userCurrency = getUserCurrency(req);\n    const exchangeRates = getExchangeRates();\n    const exchangeRate = exchangeRates[userCurrency] || 1;\n    \n    // Subtotal is already in user's currency\n    const subtotalInCurrency = subtotal;\n    const tax = Math.round(subtotalInCurrency * 0.08 * 100) / 100; // 8% tax rate\n    const shipping = subtotalInCurrency > 50 ? 0 : 5.99; // Free shipping threshold in user currency\n    const total = Math.round((subtotalInCurrency + tax + shipping) * 100) / 100;\n\n    // Create order for registered user\n    const orderData = {\n      customer: req.user._id,\n      items: orderItems,\n      shippingAddress: finalShippingAddress,\n      billingAddress: finalBillingAddress,\n      subtotal: Math.round(subtotalInCurrency * 100) / 100,\n      tax,\n      shipping,\n      total,\n      payment: {\n        method: 'other',\n        status: 'pending'\n      },\n      status: 'pending',\n      notes,\n      referralSource,\n      currency: userCurrency,\n      exchangeRate: exchangeRate\n    };\n\n    const order = await Order.create(orderData);\n    \n    // Populate product details for email\n    await order.populate('items.product', 'name slug images');\n\n    // Send order confirmation email for registered user\n    try {\n      if (req.user.wantsEmail('orderConfirmations')) {\n        const { sendOrderConfirmation } = require('../utils/emailService');\n        \n        const emailData = {\n          orderNumber: order.orderNumber,\n          customerName: `${req.user.firstName} ${req.user.lastName}`,\n          items: order.items.map(item => ({\n            productName: item.product.name,\n            quantity: item.quantity,\n            price: item.price\n          })),\n          total: order.total,\n          shippingAddress: order.shippingAddress,\n          currency: order.currency\n        };\n\n        const emailResult = await sendOrderConfirmation(req.user.email, emailData);\n        if (!emailResult.success) {\n          console.error('Failed to send order confirmation email:', emailResult.error);\n        }\n      }\n    } catch (emailError) {\n      console.error('Error sending order confirmation email:', emailError);\n    }\n\n    // Clear user's cart\n    const user = await User.findById(req.user._id);\n    user.cart = { items: [], updatedAt: new Date() };\n    await user.save();\n    \n    // Clear cart session\n    if (req.session && req.session.cart) {\n      req.session.cart = [];\n    }\n\n    res.status(201).json({\n      success: true,\n      message: 'Order created successfully',\n      order: {\n        _id: order._id,\n        orderNumber: order.orderNumber,\n        total: order.total,\n        status: order.status,\n        currency: order.currency,\n        exchangeRate: order.exchangeRate,\n        createdAt: order.createdAt\n      }\n    });\n\n  } catch (error) {\n    console.error('Error creating registered user order:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_CREATION_ERROR',\n        message: 'Failed to create order'\n      }\n    });\n  }\n});\n\n// Get order by ID (supports both authenticated and guest orders)\nrouter.get('/:id', authenticateToken, async (req, res) => {\n  try {\n    const order = await Order.findById(req.params.id)\n      .populate('items.product', '-wholesaler')\n      .populate('customer', 'firstName lastName email');\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'ORDER_NOT_FOUND',\n          message: 'Order not found'\n        }\n      });\n    }\n\n    // For guest orders, allow access without authentication\n    // For authenticated users, check ownership (unless admin)\n    if (req.user) {\n      if (!req.user.isAdmin && order.customer && order.customer._id.toString() !== req.user._id.toString()) {\n        return res.status(403).json({\n          success: false,\n          error: {\n            code: 'ACCESS_DENIED',\n            message: 'You can only access your own orders'\n          }\n        });\n      }\n    }\n    // Guest orders (no customer field) are accessible without auth\n\n    // Return public order data (excludes sensitive wholesaler info)\n    res.json({\n      success: true,\n      data: {\n        order: order.toPublicJSON()\n      }\n    });\n\n  } catch (error) {\n    console.error('Error fetching order:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_FETCH_ERROR',\n        message: 'Failed to fetch order'\n      }\n    });\n  }\n});\n\n// Get order history for registered user\nrouter.get('/', authenticateToken, async (req, res) => {\n  try {\n    // Ensure user is authenticated\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'AUTHENTICATION_REQUIRED',\n          message: 'You must be logged in to view orders'\n        }\n      });\n    }\n\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 10;\n    const skip = (page - 1) * limit;\n\n    \n    const orders = await Order.find({ customer: req.user._id })\n      .populate('items.product', 'name slug images price')\n      .sort({ createdAt: -1 })\n      .skip(skip)\n      .limit(limit);\n\n    const totalOrders = await Order.countDocuments({ customer: req.user._id });\n    const totalPages = Math.ceil(totalOrders / limit);\n    \n    \n\n    // Return public order data\n    const publicOrders = orders.map(order => order.toPublicJSON());\n\n    res.json({\n      success: true,\n      data: {\n        orders: publicOrders,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalOrders,\n          hasNextPage: page < totalPages,\n          hasPrevPage: page > 1\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error fetching order history:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_HISTORY_ERROR',\n        message: 'Failed to fetch order history'\n      }\n    });\n  }\n});\n\n// Associate order with authenticated user\nrouter.post('/:id/associate', requireAuth, async (req, res) => {\n  try {\n    const { id } = req.params;\n    \n    // Find the order\n    const order = await Order.findById(id);\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'ORDER_NOT_FOUND',\n          message: 'Order not found'\n        }\n      });\n    }\n\n    // Check if order is already associated with a user\n    if (order.customer) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'ORDER_ALREADY_ASSOCIATED',\n          message: 'Order is already associated with a user'\n        }\n      });\n    }\n\n    // Associate order with the authenticated user\n    order.customer = req.user._id;\n    await order.save();\n\n    res.json({\n      success: true,\n      message: 'Order successfully associated with your account'\n    });\n\n  } catch (error) {\n    console.error('Error associating order:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_ASSOCIATION_ERROR',\n        message: 'Failed to associate order with account'\n      }\n    });\n  }\n});\n\n// Update order status (admin only - placeholder for now)\nrouter.put('/:id/status', async (req, res) => {\n  try {\n    const { status, trackingNumber } = req.body;\n    \n    const validStatuses = ['pending', 'processing', 'shipped', 'delivered', 'cancelled'];\n    if (!validStatuses.includes(status)) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_STATUS',\n          message: 'Invalid order status'\n        }\n      });\n    }\n\n    const updateData = { status };\n    if (trackingNumber) {\n      updateData.trackingNumber = trackingNumber;\n    }\n\n    const order = await Order.findByIdAndUpdate(\n      req.params.id,\n      updateData,\n      { new: true }\n    ).populate('customer', 'firstName lastName email preferences');\n\n    if (!order) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'ORDER_NOT_FOUND',\n          message: 'Order not found'\n        }\n      });\n    }\n\n    // Send status update email\n    try {\n      const { sendOrderStatusUpdate } = require('../utils/emailService');\n      \n      let customerEmail, customerName, shouldSendEmail = true;\n      \n      if (order.customer) {\n        // Registered user\n        customerEmail = order.customer.email;\n        customerName = `${order.customer.firstName} ${order.customer.lastName}`;\n        shouldSendEmail = order.customer.preferences?.emailPreferences?.orderUpdates !== false;\n      } else {\n        // Guest user\n        customerEmail = order.guestInfo.email;\n        customerName = `${order.guestInfo.firstName} ${order.guestInfo.lastName}`;\n      }\n\n      if (shouldSendEmail && ['processing', 'shipped', 'delivered'].includes(status)) {\n        const statusData = {\n          orderNumber: order.orderNumber,\n          customerName,\n          status,\n          trackingNumber\n        };\n\n        const emailResult = await sendOrderStatusUpdate(customerEmail, statusData);\n        if (!emailResult.success) {\n          console.error('Failed to send order status update email:', emailResult.error);\n        }\n      }\n    } catch (emailError) {\n      console.error('Error sending order status update email:', emailError);\n    }\n\n    res.json({\n      success: true,\n      message: 'Order status updated',\n      order: {\n        _id: order._id,\n        orderNumber: order.orderNumber,\n        status: order.status,\n        trackingNumber: order.trackingNumber,\n        updatedAt: order.updatedAt\n      }\n    });\n\n  } catch (error) {\n    console.error('Error updating order status:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ORDER_UPDATE_ERROR',\n        message: 'Failed to update order status'\n      }\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAM;EAAEC,IAAI;EAAEC;AAAiB,CAAC,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AAC/D,MAAMK,KAAK,GAAGL,OAAO,CAAC,iBAAiB,CAAC;AACxC,MAAMM,OAAO,GAAGN,OAAO,CAAC,mBAAmB,CAAC;AAC5C,MAAMO,IAAI,GAAGP,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAM;EAAEQ,iBAAiB;EAAEC;AAAY,CAAC,GAAGT,OAAO,CAAC,oBAAoB,CAAC;AACxE,MAAM;EAAEU;AAAkB,CAAC,GAAGV,OAAO,CAAC,2BAA2B,CAAC;AAClE,MAAM;EAAEW,oBAAoB;EAAEC;AAAiB,CAAC,GAAGZ,OAAO,CAAC,mBAAmB,CAAC;;AAE/E;AACA,SAASa,eAAeA,CAACC,GAAG,EAAE;EAC5B;EACA,IAAIA,GAAG,CAACC,KAAK,CAACC,QAAQ,EAAE,OAAOF,GAAG,CAACC,KAAK,CAACC,QAAQ;EACjD,IAAIF,GAAG,CAACG,OAAO,CAAC,YAAY,CAAC,EAAE,OAAOH,GAAG,CAACG,OAAO,CAAC,YAAY,CAAC;;EAE/D;EACA,MAAMC,MAAM,GAAGJ,GAAG,CAACG,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI;EAC9C,OAAON,oBAAoB,CAACO,MAAM,CAAC;AACrC;;AAEA;AACA,MAAMC,qBAAqB,GAAG,CAC5BhB,IAAI,CAAC,iBAAiB,CAAC,CACpBiB,OAAO,CAAC,CAAC,CACTC,cAAc,CAAC,CAAC,CAChBC,WAAW,CAAC,yBAAyB,CAAC,EACzCnB,IAAI,CAAC,qBAAqB,CAAC,CACxBoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,4DAA4D,CAAC,EAC5EnB,IAAI,CAAC,oBAAoB,CAAC,CACvBoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,2DAA2D,CAAC,EAC3EnB,IAAI,CAAC,iBAAiB,CAAC,CACpBwB,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,CACVJ,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,kDAAkD,CAAC,EAClEnB,IAAI,CAAC,2BAA2B,CAAC,CAC9BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,iCAAiC,CAAC,EACjDnB,IAAI,CAAC,0BAA0B,CAAC,CAC7BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,gCAAgC,CAAC,EAChDnB,IAAI,CAAC,wBAAwB,CAAC,CAC3BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAI,CAAC,CAAC,CAC9BJ,WAAW,CAAC,qCAAqC,CAAC,EACrDnB,IAAI,CAAC,sBAAsB,CAAC,CACzBoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,2BAA2B,CAAC,EAC3CnB,IAAI,CAAC,uBAAuB,CAAC,CAC1BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,4BAA4B,CAAC,EAC5CnB,IAAI,CAAC,yBAAyB,CAAC,CAC5BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,qCAAqC,CAAC,EACrDnB,IAAI,CAAC,yBAAyB,CAAC,CAC5BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,gCAAgC,CAAC,EAChDnB,IAAI,CAAC,0BAA0B,CAAC,CAC7BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,gCAAgC,CAAC,EAChDnB,IAAI,CAAC,yBAAyB,CAAC,CAC5BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,+BAA+B,CAAC,EAC/CnB,IAAI,CAAC,uBAAuB,CAAC,CAC1BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAI,CAAC,CAAC,CAC9BJ,WAAW,CAAC,oCAAoC,CAAC,EACpDnB,IAAI,CAAC,qBAAqB,CAAC,CACxBoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,0BAA0B,CAAC,EAC1CnB,IAAI,CAAC,sBAAsB,CAAC,CACzBoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,2BAA2B,CAAC,EAC3CnB,IAAI,CAAC,wBAAwB,CAAC,CAC3BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,oCAAoC,CAAC,EACpDnB,IAAI,CAAC,wBAAwB,CAAC,CAC3BoB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,gCAAgC,CAAC,EAChDnB,IAAI,CAAC,OAAO,CAAC,CACV0B,OAAO,CAAC;EAAEJ,GAAG,EAAE;AAAE,CAAC,CAAC,CACnBH,WAAW,CAAC,+BAA+B,CAAC,EAC/CnB,IAAI,CAAC,mBAAmB,CAAC,CACtB2B,SAAS,CAAC,CAAC,CACXR,WAAW,CAAC,8BAA8B,CAAC,EAC9CnB,IAAI,CAAC,kBAAkB,CAAC,CACrB4B,KAAK,CAAC;EAAEN,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC1BJ,WAAW,CAAC,mCAAmC,CAAC,EACnDnB,IAAI,CAAC,gBAAgB,CAAC,CACnBwB,QAAQ,CAAC,CAAC,CACVJ,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC;EAAEE,GAAG,EAAE;AAAI,CAAC,CAAC,CACtBJ,WAAW,CAAC,kDAAkD,CAAC,CACnE;;AAED;AACArB,MAAM,CAAC+B,IAAI,CAAC,GAAG,EAAExB,iBAAiB,EAAEW,qBAAqB,EAAET,iBAAiB,EAAE,OAAOI,GAAG,EAAEmB,GAAG,KAAK;EAChG,IAAI;IACF;IACA,MAAMC,MAAM,GAAG9B,gBAAgB,CAACU,GAAG,CAAC;IACpC,IAAI,CAACoB,MAAM,CAACC,OAAO,CAAC,CAAC,EAAE;MACrB,OAAOF,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;UACLC,IAAI,EAAE,kBAAkB;UACxBC,OAAO,EAAE,oBAAoB;UAC7BC,OAAO,EAAER,MAAM,CAACS,KAAK,CAAC;QACxB;MACF,CAAC,CAAC;IACJ;IAEA,MAAM;MACJC,SAAS;MACTC,eAAe;MACfC,cAAc;MACdC,KAAK,EAAEC,YAAY;MACnBC,KAAK;MACLC;IACF,CAAC,GAAGpC,GAAG,CAACX,IAAI;;IAEZ;IACA,MAAMgD,UAAU,GAAG,EAAE;IACrB,IAAIC,QAAQ,GAAG,CAAC;;IAEhB;IACA,MAAMC,UAAU,GAAGL,YAAY,CAACM,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;IAC3D,MAAMC,QAAQ,GAAG,MAAMnD,OAAO,CAACoD,IAAI,CAAC;MAAEC,GAAG,EAAE;QAAEC,GAAG,EAAEP;MAAW;IAAE,CAAC,CAAC;IACjE,MAAMQ,UAAU,GAAG,IAAIC,GAAG,CAACL,QAAQ,CAACH,GAAG,CAACS,CAAC,IAAI,CAACA,CAAC,CAACJ,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAED,CAAC,CAAC,CAAC,CAAC;IAEpE,KAAK,MAAMR,IAAI,IAAIP,YAAY,EAAE;MAC/B,MAAMiB,OAAO,GAAGJ,UAAU,CAACK,GAAG,CAACX,IAAI,CAACC,SAAS,CAAC;MAE9C,IAAI,CAACS,OAAO,IAAI,CAACA,OAAO,CAACE,QAAQ,EAAE;QACjC,OAAOlC,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAC1BC,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;YACLC,IAAI,EAAE,iBAAiB;YACvBC,OAAO,EAAE,WAAWc,IAAI,CAACC,SAAS;UACpC;QACF,CAAC,CAAC;MACJ;;MAEA;MACA,MAAMY,YAAY,GAAGvD,eAAe,CAACC,GAAG,CAAC;MACzC,MAAMuD,eAAe,GAAGJ,OAAO,CAACK,MAAM,IAAIL,OAAO,CAACK,MAAM,CAACF,YAAY,CAAC,GAClEH,OAAO,CAACK,MAAM,CAACF,YAAY,CAAC,GAC5BH,OAAO,CAACM,KAAK;MAEjB,MAAMC,SAAS,GAAGH,eAAe,GAAGd,IAAI,CAACkB,QAAQ;MACjDrB,QAAQ,IAAIoB,SAAS;MAErBrB,UAAU,CAACuB,IAAI,CAAC;QACdT,OAAO,EAAEA,OAAO,CAACN,GAAG;QACpBc,QAAQ,EAAElB,IAAI,CAACkB,QAAQ;QACvBF,KAAK,EAAEF,eAAe;QACtBM,UAAU,EAAE;UACVC,IAAI,EAAEX,OAAO,CAACU,UAAU,CAACC,IAAI;UAC7BC,KAAK,EAAEZ,OAAO,CAACU,UAAU,CAACE,KAAK;UAC/BC,WAAW,EAAEb,OAAO,CAACU,UAAU,CAACG,WAAW;UAC3CC,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,MAAMX,YAAY,GAAGvD,eAAe,CAACC,GAAG,CAAC;IACzC,MAAMkE,aAAa,GAAGpE,gBAAgB,CAAC,CAAC;IACxC,MAAMqE,YAAY,GAAGD,aAAa,CAACZ,YAAY,CAAC,IAAI,CAAC;;IAErD;IACA,MAAMc,kBAAkB,GAAG9B,QAAQ;IACnC,MAAM+B,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,kBAAkB,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IAC/D,MAAMI,QAAQ,GAAGJ,kBAAkB,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IACrD,MAAMK,KAAK,GAAGH,IAAI,CAACC,KAAK,CAAC,CAACH,kBAAkB,GAAGC,GAAG,GAAGG,QAAQ,IAAI,GAAG,CAAC,GAAG,GAAG;;IAE3E;IACA,MAAME,SAAS,GAAG;MAChBzC,KAAK,EAAEI,UAAU;MACjBN,eAAe;MACfC,cAAc;MACdM,QAAQ,EAAEgC,IAAI,CAACC,KAAK,CAACH,kBAAkB,GAAG,GAAG,CAAC,GAAG,GAAG;MACpDC,GAAG;MACHG,QAAQ;MACRC,KAAK;MACLE,OAAO,EAAE;QACPC,MAAM,EAAE,OAAO;QAAE;QACjBtD,MAAM,EAAE;MACV,CAAC;MACDA,MAAM,EAAE,SAAS;MACjBa,KAAK;MACLC,cAAc;MACdlC,QAAQ,EAAEoD,YAAY;MACtBa,YAAY,EAAEA;IAChB,CAAC;;IAED;IACA,IAAInE,GAAG,CAAC6E,IAAI,EAAE;MACZH,SAAS,CAACI,QAAQ,GAAG9E,GAAG,CAAC6E,IAAI,CAAChC,GAAG;MACjC;MACA6B,SAAS,CAAC5C,SAAS,GAAG;QACpBiD,SAAS,EAAE/E,GAAG,CAAC6E,IAAI,CAACE,SAAS;QAC7BC,QAAQ,EAAEhF,GAAG,CAAC6E,IAAI,CAACG,QAAQ;QAC3BjB,KAAK,EAAE/D,GAAG,CAAC6E,IAAI,CAACd,KAAK;QACrBkB,KAAK,EAAEjF,GAAG,CAAC6E,IAAI,CAACI,KAAK,IAAInD,SAAS,EAAEmD;MACtC,CAAC;IACH,CAAC,MAAM;MACL;MACAP,SAAS,CAAC5C,SAAS,GAAGA,SAAS;IACjC;IAEA,MAAMoD,KAAK,GAAG,MAAM3F,KAAK,CAAC4F,MAAM,CAACT,SAAS,CAAC;;IAE3C;IACA,MAAMQ,KAAK,CAACE,QAAQ,CAAC,eAAe,EAAE,kBAAkB,CAAC;;IAEzD;IACA,IAAI;MACF,MAAM;QAAEC;MAAsB,CAAC,GAAGnG,OAAO,CAAC,uBAAuB,CAAC;MAElE,MAAMoG,SAAS,GAAG;QAChBC,WAAW,EAAEL,KAAK,CAACK,WAAW;QAC9BC,YAAY,EAAE,GAAGN,KAAK,CAACpD,SAAS,CAACiD,SAAS,IAAIG,KAAK,CAACpD,SAAS,CAACkD,QAAQ,EAAE;QACxE/C,KAAK,EAAEiD,KAAK,CAACjD,KAAK,CAACO,GAAG,CAACC,IAAI,KAAK;UAC9BgD,WAAW,EAAEhD,IAAI,CAACU,OAAO,CAACW,IAAI;UAC9BH,QAAQ,EAAElB,IAAI,CAACkB,QAAQ;UACvBF,KAAK,EAAEhB,IAAI,CAACgB;QACd,CAAC,CAAC,CAAC;QACHgB,KAAK,EAAES,KAAK,CAACT,KAAK;QAClB1C,eAAe,EAAEmD,KAAK,CAACnD,eAAe;QACtC7B,QAAQ,EAAEgF,KAAK,CAAChF;MAClB,CAAC;MAED,MAAMwF,WAAW,GAAG,MAAML,qBAAqB,CAACH,KAAK,CAACpD,SAAS,CAACiC,KAAK,EAAEuB,SAAS,CAAC;MACjF,IAAI,CAACI,WAAW,CAAClE,OAAO,EAAE;QACxBmE,OAAO,CAAClE,KAAK,CAAC,0CAA0C,EAAEiE,WAAW,CAACjE,KAAK,CAAC;MAC9E;IACF,CAAC,CAAC,OAAOmE,UAAU,EAAE;MACnBD,OAAO,CAAClE,KAAK,CAAC,yCAAyC,EAAEmE,UAAU,CAAC;IACtE;;IAEA;IACA;;IAEAzE,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,IAAI;MACbG,OAAO,EAAE,4BAA4B;MACrCuD,KAAK,EAAE;QACLrC,GAAG,EAAEqC,KAAK,CAACrC,GAAG;QACd0C,WAAW,EAAEL,KAAK,CAACK,WAAW;QAC9Bd,KAAK,EAAES,KAAK,CAACT,KAAK;QAClBnD,MAAM,EAAE4D,KAAK,CAAC5D,MAAM;QACpBpB,QAAQ,EAAEgF,KAAK,CAAChF,QAAQ;QACxBiE,YAAY,EAAEe,KAAK,CAACf,YAAY;QAChC0B,SAAS,EAAEX,KAAK,CAACW;MACnB;IACF,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAOpE,KAAK,EAAE;IACdkE,OAAO,CAAClE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7CN,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;QACLC,IAAI,EAAE,sBAAsB;QAC5BC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACAxC,MAAM,CAAC+B,IAAI,CAAC,QAAQ,EAAEb,qBAAqB,EAAE,OAAOL,GAAG,EAAEmB,GAAG,KAAK;EAC/D,IAAI;IACF;IACA,MAAMC,MAAM,GAAG9B,gBAAgB,CAACU,GAAG,CAAC;IACpC,IAAI,CAACoB,MAAM,CAACC,OAAO,CAAC,CAAC,EAAE;MACrB,OAAOF,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;UACLC,IAAI,EAAE,kBAAkB;UACxBC,OAAO,EAAE,oBAAoB;UAC7BC,OAAO,EAAER,MAAM,CAACS,KAAK,CAAC;QACxB;MACF,CAAC,CAAC;IACJ;IAEA,MAAM;MACJC,SAAS;MACTC,eAAe;MACfC,cAAc;MACdC,KAAK,EAAEC,YAAY;MACnBC,KAAK;MACLC;IACF,CAAC,GAAGpC,GAAG,CAACX,IAAI;;IAEZ;IACA,MAAMgD,UAAU,GAAG,EAAE;IACrB,IAAIC,QAAQ,GAAG,CAAC;;IAEhB;IACA,MAAMC,UAAU,GAAGL,YAAY,CAACM,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;IAC3D,MAAMC,QAAQ,GAAG,MAAMnD,OAAO,CAACoD,IAAI,CAAC;MAAEC,GAAG,EAAE;QAAEC,GAAG,EAAEP;MAAW;IAAE,CAAC,CAAC;IACjE,MAAMQ,UAAU,GAAG,IAAIC,GAAG,CAACL,QAAQ,CAACH,GAAG,CAACS,CAAC,IAAI,CAACA,CAAC,CAACJ,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAED,CAAC,CAAC,CAAC,CAAC;IAEpE,KAAK,MAAMR,IAAI,IAAIP,YAAY,EAAE;MAC/B,MAAMiB,OAAO,GAAGJ,UAAU,CAACK,GAAG,CAACX,IAAI,CAACC,SAAS,CAAC;MAE9C,IAAI,CAACS,OAAO,IAAI,CAACA,OAAO,CAACE,QAAQ,EAAE;QACjC,OAAOlC,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAC1BC,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;YACLC,IAAI,EAAE,iBAAiB;YACvBC,OAAO,EAAE,WAAWc,IAAI,CAACC,SAAS;UACpC;QACF,CAAC,CAAC;MACJ;;MAEA;MACA,MAAMY,YAAY,GAAGvD,eAAe,CAACC,GAAG,CAAC;MACzC,MAAMuD,eAAe,GAAGJ,OAAO,CAACK,MAAM,IAAIL,OAAO,CAACK,MAAM,CAACF,YAAY,CAAC,GAClEH,OAAO,CAACK,MAAM,CAACF,YAAY,CAAC,GAC5BH,OAAO,CAACM,KAAK;MAEjB,MAAMC,SAAS,GAAGH,eAAe,GAAGd,IAAI,CAACkB,QAAQ;MACjDrB,QAAQ,IAAIoB,SAAS;MAErBrB,UAAU,CAACuB,IAAI,CAAC;QACdT,OAAO,EAAEA,OAAO,CAACN,GAAG;QACpBc,QAAQ,EAAElB,IAAI,CAACkB,QAAQ;QACvBF,KAAK,EAAEF,eAAe;QACtBM,UAAU,EAAE;UACVC,IAAI,EAAEX,OAAO,CAACU,UAAU,CAACC,IAAI;UAC7BC,KAAK,EAAEZ,OAAO,CAACU,UAAU,CAACE,KAAK;UAC/BC,WAAW,EAAEb,OAAO,CAACU,UAAU,CAACG,WAAW;UAC3CC,QAAQ,EAAE,KAAK;UACf6B,oBAAoB,EAAE;QACxB;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,MAAMxC,YAAY,GAAGvD,eAAe,CAACC,GAAG,CAAC;IACzC,MAAMkE,aAAa,GAAGpE,gBAAgB,CAAC,CAAC;IACxC,MAAMqE,YAAY,GAAGD,aAAa,CAACZ,YAAY,CAAC,IAAI,CAAC;;IAErD;IACA,MAAMc,kBAAkB,GAAG9B,QAAQ;IACnC,MAAM+B,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,kBAAkB,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IAC/D,MAAMI,QAAQ,GAAGJ,kBAAkB,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IACrD,MAAMK,KAAK,GAAGH,IAAI,CAACC,KAAK,CAAC,CAACH,kBAAkB,GAAGC,GAAG,GAAGG,QAAQ,IAAI,GAAG,CAAC,GAAG,GAAG;;IAE3E;IACA,MAAME,SAAS,GAAG;MAChB5C,SAAS;MACTG,KAAK,EAAEI,UAAU;MACjBN,eAAe;MACfC,cAAc,EAAEA,cAAc,IAAID,eAAe;MACjDO,QAAQ,EAAEgC,IAAI,CAACC,KAAK,CAACH,kBAAkB,GAAG,GAAG,CAAC,GAAG,GAAG;MACpDC,GAAG;MACHG,QAAQ;MACRC,KAAK;MACLE,OAAO,EAAE;QACPC,MAAM,EAAE,MAAM;QACdtD,MAAM,EAAE;MACV,CAAC;MACDA,MAAM,EAAE,SAAS;MACjBa,KAAK;MACLC,cAAc;MACdlC,QAAQ,EAAEoD,YAAY;MACtBa,YAAY,EAAEA;IAChB,CAAC;IAED,MAAMe,KAAK,GAAG,MAAM3F,KAAK,CAAC4F,MAAM,CAACT,SAAS,CAAC;IAE3CvD,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,IAAI;MACbG,OAAO,EAAE,kCAAkC;MAC3CoE,IAAI,EAAE;QACJb,KAAK,EAAE;UACLrC,GAAG,EAAEqC,KAAK,CAACrC,GAAG;UACd0C,WAAW,EAAEL,KAAK,CAACK,WAAW;UAC9BzD,SAAS,EAAEoD,KAAK,CAACpD,SAAS;UAC1BG,KAAK,EAAEiD,KAAK,CAACjD,KAAK;UAClBF,eAAe,EAAEmD,KAAK,CAACnD,eAAe;UACtCC,cAAc,EAAEkD,KAAK,CAAClD,cAAc;UACpCM,QAAQ,EAAE4C,KAAK,CAAC5C,QAAQ;UACxB+B,GAAG,EAAEa,KAAK,CAACb,GAAG;UACdG,QAAQ,EAAEU,KAAK,CAACV,QAAQ;UACxBC,KAAK,EAAES,KAAK,CAACT,KAAK;UAClBnD,MAAM,EAAE4D,KAAK,CAAC5D,MAAM;UACpBpB,QAAQ,EAAEgF,KAAK,CAAChF,QAAQ;UACxBiE,YAAY,EAAEe,KAAK,CAACf,YAAY;UAChC0B,SAAS,EAAEX,KAAK,CAACW;QACnB;MACF;IACF,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAOpE,KAAK,EAAE;IACdkE,OAAO,CAAClE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnDN,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;QACLC,IAAI,EAAE,sBAAsB;QAC5BC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACAxC,MAAM,CAAC+B,IAAI,CAAC,aAAa,EAAExB,iBAAiB,EAAEE,iBAAiB,EAAE,OAAOI,GAAG,EAAEmB,GAAG,KAAK;EACnF,IAAI;IACF;IACA,IAAI,CAACnB,GAAG,CAAC6E,IAAI,EAAE;MACb,OAAO1D,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;UACLC,IAAI,EAAE,yBAAyB;UAC/BC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ;IAEA,MAAM;MACJI,eAAe;MACfC,cAAc;MACdC,KAAK,EAAEC,YAAY;MACnBC,KAAK;MACLC,cAAc;MACd4D,mBAAmB,GAAG;IACxB,CAAC,GAAGhG,GAAG,CAACX,IAAI;;IAEZ;IACA,IAAI4G,oBAAoB,GAAGlE,eAAe;IAC1C,IAAImE,mBAAmB,GAAGlE,cAAc;IAExC,IAAIgE,mBAAmB,EAAE;MACvB,MAAMG,eAAe,GAAGnG,GAAG,CAAC6E,IAAI,CAACuB,yBAAyB,CAAC,CAAC;MAC5D,MAAMC,cAAc,GAAGrG,GAAG,CAAC6E,IAAI,CAACyB,wBAAwB,CAAC,CAAC;MAE1D,IAAIH,eAAe,EAAE;QACnBF,oBAAoB,GAAGE,eAAe,CAACI,QAAQ,CAAC,CAAC;QACjD,OAAON,oBAAoB,CAACpD,GAAG;QAC/B,OAAOoD,oBAAoB,CAACO,IAAI;QAChC,OAAOP,oBAAoB,CAACQ,SAAS;MACvC;MAEA,IAAIJ,cAAc,EAAE;QAClBH,mBAAmB,GAAGG,cAAc,CAACE,QAAQ,CAAC,CAAC;QAC/C,OAAOL,mBAAmB,CAACrD,GAAG;QAC9B,OAAOqD,mBAAmB,CAACM,IAAI;QAC/B,OAAON,mBAAmB,CAACO,SAAS;MACtC;IACF;;IAEA;IACA,IAAI,CAACR,oBAAoB,IAAI,CAACC,mBAAmB,EAAE;MACjD,OAAO/E,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;UACLC,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,IAAI+E,cAAc,GAAGxE,YAAY;IACjC,IAAI,CAACwE,cAAc,IAAIA,cAAc,CAACC,MAAM,KAAK,CAAC,EAAE;MAClD;MACA,MAAM9B,IAAI,GAAG,MAAMpF,IAAI,CAACmH,QAAQ,CAAC5G,GAAG,CAAC6E,IAAI,CAAChC,GAAG,CAAC;MAC9C,IAAI,CAACgC,IAAI,CAACgC,IAAI,IAAI,CAAChC,IAAI,CAACgC,IAAI,CAAC5E,KAAK,IAAI4C,IAAI,CAACgC,IAAI,CAAC5E,KAAK,CAAC0E,MAAM,KAAK,CAAC,EAAE;QAClE,OAAOxF,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAC1BC,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;YACLC,IAAI,EAAE,YAAY;YAClBC,OAAO,EAAE;UACX;QACF,CAAC,CAAC;MACJ;MACA+E,cAAc,GAAG7B,IAAI,CAACgC,IAAI,CAAC5E,KAAK,CAACO,GAAG,CAACC,IAAI,KAAK;QAC5CC,SAAS,EAAED,IAAI,CAACU,OAAO;QACvBQ,QAAQ,EAAElB,IAAI,CAACkB;MACjB,CAAC,CAAC,CAAC;IACL;;IAEA;IACA,MAAMtB,UAAU,GAAG,EAAE;IACrB,IAAIC,QAAQ,GAAG,CAAC;;IAEhB;IACA,MAAMC,UAAU,GAAGmE,cAAc,CAAClE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;IAC7D,MAAMC,QAAQ,GAAG,MAAMnD,OAAO,CAACoD,IAAI,CAAC;MAAEC,GAAG,EAAE;QAAEC,GAAG,EAAEP;MAAW;IAAE,CAAC,CAAC;IACjE,MAAMQ,UAAU,GAAG,IAAIC,GAAG,CAACL,QAAQ,CAACH,GAAG,CAACS,CAAC,IAAI,CAACA,CAAC,CAACJ,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAED,CAAC,CAAC,CAAC,CAAC;IAEpE,KAAK,MAAMR,IAAI,IAAIiE,cAAc,EAAE;MACjC,MAAMvD,OAAO,GAAGJ,UAAU,CAACK,GAAG,CAACX,IAAI,CAACC,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAAC;MAEzD,IAAI,CAACC,OAAO,IAAI,CAACA,OAAO,CAACE,QAAQ,EAAE;QACjC,OAAOlC,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAC1BC,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;YACLC,IAAI,EAAE,iBAAiB;YACvBC,OAAO,EAAE,WAAWc,IAAI,CAACC,SAAS;UACpC;QACF,CAAC,CAAC;MACJ;;MAEA;MACA,MAAMY,YAAY,GAAGvD,eAAe,CAACC,GAAG,CAAC;MACzC,MAAMuD,eAAe,GAAGJ,OAAO,CAACK,MAAM,IAAIL,OAAO,CAACK,MAAM,CAACF,YAAY,CAAC,GAClEH,OAAO,CAACK,MAAM,CAACF,YAAY,CAAC,GAC5BH,OAAO,CAACM,KAAK;MAEjB,MAAMC,SAAS,GAAGH,eAAe,GAAGd,IAAI,CAACkB,QAAQ;MACjDrB,QAAQ,IAAIoB,SAAS;MAErBrB,UAAU,CAACuB,IAAI,CAAC;QACdT,OAAO,EAAEA,OAAO,CAACN,GAAG;QACpBc,QAAQ,EAAElB,IAAI,CAACkB,QAAQ;QACvBF,KAAK,EAAEF,eAAe;QACtBM,UAAU,EAAE;UACVC,IAAI,EAAEX,OAAO,CAACU,UAAU,CAACC,IAAI;UAC7BC,KAAK,EAAEZ,OAAO,CAACU,UAAU,CAACE,KAAK;UAC/BC,WAAW,EAAEb,OAAO,CAACU,UAAU,CAACG,WAAW;UAC3CC,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,MAAMX,YAAY,GAAGvD,eAAe,CAACC,GAAG,CAAC;IACzC,MAAMkE,aAAa,GAAGpE,gBAAgB,CAAC,CAAC;IACxC,MAAMqE,YAAY,GAAGD,aAAa,CAACZ,YAAY,CAAC,IAAI,CAAC;;IAErD;IACA,MAAMc,kBAAkB,GAAG9B,QAAQ;IACnC,MAAM+B,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,kBAAkB,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IAC/D,MAAMI,QAAQ,GAAGJ,kBAAkB,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IACrD,MAAMK,KAAK,GAAGH,IAAI,CAACC,KAAK,CAAC,CAACH,kBAAkB,GAAGC,GAAG,GAAGG,QAAQ,IAAI,GAAG,CAAC,GAAG,GAAG;;IAE3E;IACA,MAAME,SAAS,GAAG;MAChBI,QAAQ,EAAE9E,GAAG,CAAC6E,IAAI,CAAChC,GAAG;MACtBZ,KAAK,EAAEI,UAAU;MACjBN,eAAe,EAAEkE,oBAAoB;MACrCjE,cAAc,EAAEkE,mBAAmB;MACnC5D,QAAQ,EAAEgC,IAAI,CAACC,KAAK,CAACH,kBAAkB,GAAG,GAAG,CAAC,GAAG,GAAG;MACpDC,GAAG;MACHG,QAAQ;MACRC,KAAK;MACLE,OAAO,EAAE;QACPC,MAAM,EAAE,OAAO;QACftD,MAAM,EAAE;MACV,CAAC;MACDA,MAAM,EAAE,SAAS;MACjBa,KAAK;MACLC,cAAc;MACdlC,QAAQ,EAAEoD,YAAY;MACtBa,YAAY,EAAEA;IAChB,CAAC;IAED,MAAMe,KAAK,GAAG,MAAM3F,KAAK,CAAC4F,MAAM,CAACT,SAAS,CAAC;;IAE3C;IACA,MAAMQ,KAAK,CAACE,QAAQ,CAAC,eAAe,EAAE,kBAAkB,CAAC;;IAEzD;IACA,IAAI;MACF,IAAIpF,GAAG,CAAC6E,IAAI,CAACiC,UAAU,CAAC,oBAAoB,CAAC,EAAE;QAC7C,MAAM;UAAEzB;QAAsB,CAAC,GAAGnG,OAAO,CAAC,uBAAuB,CAAC;QAElE,MAAMoG,SAAS,GAAG;UAChBC,WAAW,EAAEL,KAAK,CAACK,WAAW;UAC9BC,YAAY,EAAE,GAAGxF,GAAG,CAAC6E,IAAI,CAACE,SAAS,IAAI/E,GAAG,CAAC6E,IAAI,CAACG,QAAQ,EAAE;UAC1D/C,KAAK,EAAEiD,KAAK,CAACjD,KAAK,CAACO,GAAG,CAACC,IAAI,KAAK;YAC9BgD,WAAW,EAAEhD,IAAI,CAACU,OAAO,CAACW,IAAI;YAC9BH,QAAQ,EAAElB,IAAI,CAACkB,QAAQ;YACvBF,KAAK,EAAEhB,IAAI,CAACgB;UACd,CAAC,CAAC,CAAC;UACHgB,KAAK,EAAES,KAAK,CAACT,KAAK;UAClB1C,eAAe,EAAEmD,KAAK,CAACnD,eAAe;UACtC7B,QAAQ,EAAEgF,KAAK,CAAChF;QAClB,CAAC;QAED,MAAMwF,WAAW,GAAG,MAAML,qBAAqB,CAACrF,GAAG,CAAC6E,IAAI,CAACd,KAAK,EAAEuB,SAAS,CAAC;QAC1E,IAAI,CAACI,WAAW,CAAClE,OAAO,EAAE;UACxBmE,OAAO,CAAClE,KAAK,CAAC,0CAA0C,EAAEiE,WAAW,CAACjE,KAAK,CAAC;QAC9E;MACF;IACF,CAAC,CAAC,OAAOmE,UAAU,EAAE;MACnBD,OAAO,CAAClE,KAAK,CAAC,yCAAyC,EAAEmE,UAAU,CAAC;IACtE;;IAEA;IACA,MAAMf,IAAI,GAAG,MAAMpF,IAAI,CAACmH,QAAQ,CAAC5G,GAAG,CAAC6E,IAAI,CAAChC,GAAG,CAAC;IAC9CgC,IAAI,CAACgC,IAAI,GAAG;MAAE5E,KAAK,EAAE,EAAE;MAAE8E,SAAS,EAAE,IAAIC,IAAI,CAAC;IAAE,CAAC;IAChD,MAAMnC,IAAI,CAACoC,IAAI,CAAC,CAAC;;IAEjB;IACA,IAAIjH,GAAG,CAACkH,OAAO,IAAIlH,GAAG,CAACkH,OAAO,CAACL,IAAI,EAAE;MACnC7G,GAAG,CAACkH,OAAO,CAACL,IAAI,GAAG,EAAE;IACvB;IAEA1F,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,IAAI;MACbG,OAAO,EAAE,4BAA4B;MACrCuD,KAAK,EAAE;QACLrC,GAAG,EAAEqC,KAAK,CAACrC,GAAG;QACd0C,WAAW,EAAEL,KAAK,CAACK,WAAW;QAC9Bd,KAAK,EAAES,KAAK,CAACT,KAAK;QAClBnD,MAAM,EAAE4D,KAAK,CAAC5D,MAAM;QACpBpB,QAAQ,EAAEgF,KAAK,CAAChF,QAAQ;QACxBiE,YAAY,EAAEe,KAAK,CAACf,YAAY;QAChC0B,SAAS,EAAEX,KAAK,CAACW;MACnB;IACF,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAOpE,KAAK,EAAE;IACdkE,OAAO,CAAClE,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7DN,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;QACLC,IAAI,EAAE,sBAAsB;QAC5BC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACAxC,MAAM,CAACiE,GAAG,CAAC,MAAM,EAAE1D,iBAAiB,EAAE,OAAOM,GAAG,EAAEmB,GAAG,KAAK;EACxD,IAAI;IACF,MAAM+D,KAAK,GAAG,MAAM3F,KAAK,CAACqH,QAAQ,CAAC5G,GAAG,CAACmH,MAAM,CAACC,EAAE,CAAC,CAC9ChC,QAAQ,CAAC,eAAe,EAAE,aAAa,CAAC,CACxCA,QAAQ,CAAC,UAAU,EAAE,0BAA0B,CAAC;IAEnD,IAAI,CAACF,KAAK,EAAE;MACV,OAAO/D,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;UACLC,IAAI,EAAE,iBAAiB;UACvBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ;;IAEA;IACA;IACA,IAAI3B,GAAG,CAAC6E,IAAI,EAAE;MACZ,IAAI,CAAC7E,GAAG,CAAC6E,IAAI,CAACwC,OAAO,IAAInC,KAAK,CAACJ,QAAQ,IAAII,KAAK,CAACJ,QAAQ,CAACjC,GAAG,CAACK,QAAQ,CAAC,CAAC,KAAKlD,GAAG,CAAC6E,IAAI,CAAChC,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAE;QACpG,OAAO/B,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAC1BC,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;YACLC,IAAI,EAAE,eAAe;YACrBC,OAAO,EAAE;UACX;QACF,CAAC,CAAC;MACJ;IACF;IACA;;IAEA;IACAR,GAAG,CAACI,IAAI,CAAC;MACPC,OAAO,EAAE,IAAI;MACbuE,IAAI,EAAE;QACJb,KAAK,EAAEA,KAAK,CAACoC,YAAY,CAAC;MAC5B;IACF,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAO7F,KAAK,EAAE;IACdkE,OAAO,CAAClE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7CN,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;QACLC,IAAI,EAAE,mBAAmB;QACzBC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACAxC,MAAM,CAACiE,GAAG,CAAC,GAAG,EAAE1D,iBAAiB,EAAE,OAAOM,GAAG,EAAEmB,GAAG,KAAK;EACrD,IAAI;IACF;IACA,IAAI,CAACnB,GAAG,CAAC6E,IAAI,EAAE;MACb,OAAO1D,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;UACLC,IAAI,EAAE,yBAAyB;UAC/BC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ;IAEA,MAAM4F,IAAI,GAAGC,QAAQ,CAACxH,GAAG,CAACC,KAAK,CAACsH,IAAI,CAAC,IAAI,CAAC;IAC1C,MAAME,KAAK,GAAGD,QAAQ,CAACxH,GAAG,CAACC,KAAK,CAACwH,KAAK,CAAC,IAAI,EAAE;IAC7C,MAAMC,IAAI,GAAG,CAACH,IAAI,GAAG,CAAC,IAAIE,KAAK;IAG/B,MAAME,MAAM,GAAG,MAAMpI,KAAK,CAACqD,IAAI,CAAC;MAAEkC,QAAQ,EAAE9E,GAAG,CAAC6E,IAAI,CAAChC;IAAI,CAAC,CAAC,CACxDuC,QAAQ,CAAC,eAAe,EAAE,wBAAwB,CAAC,CACnDwC,IAAI,CAAC;MAAE/B,SAAS,EAAE,CAAC;IAAE,CAAC,CAAC,CACvB6B,IAAI,CAACA,IAAI,CAAC,CACVD,KAAK,CAACA,KAAK,CAAC;IAEf,MAAMI,WAAW,GAAG,MAAMtI,KAAK,CAACuI,cAAc,CAAC;MAAEhD,QAAQ,EAAE9E,GAAG,CAAC6E,IAAI,CAAChC;IAAI,CAAC,CAAC;IAC1E,MAAMkF,UAAU,GAAGzD,IAAI,CAAC0D,IAAI,CAACH,WAAW,GAAGJ,KAAK,CAAC;;IAIjD;IACA,MAAMQ,YAAY,GAAGN,MAAM,CAACnF,GAAG,CAAC0C,KAAK,IAAIA,KAAK,CAACoC,YAAY,CAAC,CAAC,CAAC;IAE9DnG,GAAG,CAACI,IAAI,CAAC;MACPC,OAAO,EAAE,IAAI;MACbuE,IAAI,EAAE;QACJ4B,MAAM,EAAEM,YAAY;QACpBC,UAAU,EAAE;UACVC,WAAW,EAAEZ,IAAI;UACjBQ,UAAU;UACVF,WAAW;UACXO,WAAW,EAAEb,IAAI,GAAGQ,UAAU;UAC9BM,WAAW,EAAEd,IAAI,GAAG;QACtB;MACF;IACF,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAO9F,KAAK,EAAE;IACdkE,OAAO,CAAClE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrDN,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;QACLC,IAAI,EAAE,qBAAqB;QAC3BC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACAxC,MAAM,CAAC+B,IAAI,CAAC,gBAAgB,EAAEvB,WAAW,EAAE,OAAOK,GAAG,EAAEmB,GAAG,KAAK;EAC7D,IAAI;IACF,MAAM;MAAEiG;IAAG,CAAC,GAAGpH,GAAG,CAACmH,MAAM;;IAEzB;IACA,MAAMjC,KAAK,GAAG,MAAM3F,KAAK,CAACqH,QAAQ,CAACQ,EAAE,CAAC;IACtC,IAAI,CAAClC,KAAK,EAAE;MACV,OAAO/D,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;UACLC,IAAI,EAAE,iBAAiB;UACvBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIuD,KAAK,CAACJ,QAAQ,EAAE;MAClB,OAAO3D,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;UACLC,IAAI,EAAE,0BAA0B;UAChCC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ;;IAEA;IACAuD,KAAK,CAACJ,QAAQ,GAAG9E,GAAG,CAAC6E,IAAI,CAAChC,GAAG;IAC7B,MAAMqC,KAAK,CAAC+B,IAAI,CAAC,CAAC;IAElB9F,GAAG,CAACI,IAAI,CAAC;MACPC,OAAO,EAAE,IAAI;MACbG,OAAO,EAAE;IACX,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdkE,OAAO,CAAClE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChDN,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;QACLC,IAAI,EAAE,yBAAyB;QAC/BC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACAxC,MAAM,CAACmJ,GAAG,CAAC,aAAa,EAAE,OAAOtI,GAAG,EAAEmB,GAAG,KAAK;EAC5C,IAAI;IACF,MAAM;MAAEG,MAAM;MAAEiH;IAAe,CAAC,GAAGvI,GAAG,CAACX,IAAI;IAE3C,MAAMmJ,aAAa,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,CAAC;IACpF,IAAI,CAACA,aAAa,CAACC,QAAQ,CAACnH,MAAM,CAAC,EAAE;MACnC,OAAOH,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;UACLC,IAAI,EAAE,gBAAgB;UACtBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ;IAEA,MAAM+G,UAAU,GAAG;MAAEpH;IAAO,CAAC;IAC7B,IAAIiH,cAAc,EAAE;MAClBG,UAAU,CAACH,cAAc,GAAGA,cAAc;IAC5C;IAEA,MAAMrD,KAAK,GAAG,MAAM3F,KAAK,CAACoJ,iBAAiB,CACzC3I,GAAG,CAACmH,MAAM,CAACC,EAAE,EACbsB,UAAU,EACV;MAAEE,GAAG,EAAE;IAAK,CACd,CAAC,CAACxD,QAAQ,CAAC,UAAU,EAAE,sCAAsC,CAAC;IAE9D,IAAI,CAACF,KAAK,EAAE;MACV,OAAO/D,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;UACLC,IAAI,EAAE,iBAAiB;UACvBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,IAAI;MACF,MAAM;QAAEkH;MAAsB,CAAC,GAAG3J,OAAO,CAAC,uBAAuB,CAAC;MAElE,IAAI4J,aAAa;QAAEtD,YAAY;QAAEuD,eAAe,GAAG,IAAI;MAEvD,IAAI7D,KAAK,CAACJ,QAAQ,EAAE;QAClB;QACAgE,aAAa,GAAG5D,KAAK,CAACJ,QAAQ,CAACf,KAAK;QACpCyB,YAAY,GAAG,GAAGN,KAAK,CAACJ,QAAQ,CAACC,SAAS,IAAIG,KAAK,CAACJ,QAAQ,CAACE,QAAQ,EAAE;QACvE+D,eAAe,GAAG7D,KAAK,CAACJ,QAAQ,CAACkE,WAAW,EAAEC,gBAAgB,EAAEC,YAAY,KAAK,KAAK;MACxF,CAAC,MAAM;QACL;QACAJ,aAAa,GAAG5D,KAAK,CAACpD,SAAS,CAACiC,KAAK;QACrCyB,YAAY,GAAG,GAAGN,KAAK,CAACpD,SAAS,CAACiD,SAAS,IAAIG,KAAK,CAACpD,SAAS,CAACkD,QAAQ,EAAE;MAC3E;MAEA,IAAI+D,eAAe,IAAI,CAAC,YAAY,EAAE,SAAS,EAAE,WAAW,CAAC,CAACN,QAAQ,CAACnH,MAAM,CAAC,EAAE;QAC9E,MAAM6H,UAAU,GAAG;UACjB5D,WAAW,EAAEL,KAAK,CAACK,WAAW;UAC9BC,YAAY;UACZlE,MAAM;UACNiH;QACF,CAAC;QAED,MAAM7C,WAAW,GAAG,MAAMmD,qBAAqB,CAACC,aAAa,EAAEK,UAAU,CAAC;QAC1E,IAAI,CAACzD,WAAW,CAAClE,OAAO,EAAE;UACxBmE,OAAO,CAAClE,KAAK,CAAC,2CAA2C,EAAEiE,WAAW,CAACjE,KAAK,CAAC;QAC/E;MACF;IACF,CAAC,CAAC,OAAOmE,UAAU,EAAE;MACnBD,OAAO,CAAClE,KAAK,CAAC,0CAA0C,EAAEmE,UAAU,CAAC;IACvE;IAEAzE,GAAG,CAACI,IAAI,CAAC;MACPC,OAAO,EAAE,IAAI;MACbG,OAAO,EAAE,sBAAsB;MAC/BuD,KAAK,EAAE;QACLrC,GAAG,EAAEqC,KAAK,CAACrC,GAAG;QACd0C,WAAW,EAAEL,KAAK,CAACK,WAAW;QAC9BjE,MAAM,EAAE4D,KAAK,CAAC5D,MAAM;QACpBiH,cAAc,EAAErD,KAAK,CAACqD,cAAc;QACpCxB,SAAS,EAAE7B,KAAK,CAAC6B;MACnB;IACF,CAAC,CAAC;EAEJ,CAAC,CAAC,OAAOtF,KAAK,EAAE;IACdkE,OAAO,CAAClE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpDN,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;QACLC,IAAI,EAAE,oBAAoB;QAC1BC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFyH,MAAM,CAACC,OAAO,GAAGlK,MAAM","ignoreList":[]}