{"version":3,"names":["validator","require","describe","it","testEmails","console","log","forEach","email","normalized","normalizeEmail","defaultNormalized","noDotRemoval","gmail_remove_dots","minimal","all_lowercase","gmail_remove_subaddress","gmail_convert_googlemaildotcom","outlookdotcom_remove_subaddress","yahoo_remove_subaddress","icloud_remove_subaddress"],"sources":["email-normalization.test.js"],"sourcesContent":["const validator = require('validator');\n\ndescribe('Email Normalization Issue', () => {\n  it('should demonstrate how normalizeEmail modifies emails', () => {\n    const testEmails = [\n      'gloed@mac.com',\n      'oed@mac.com',\n      'john.doe@gmail.com',\n      'jane.smith@outlook.com',\n      'test.user@yandex.com'\n    ];\n\n    console.log('\\nEmail normalization test results:');\n    console.log('=================================');\n    \n    testEmails.forEach(email => {\n      const normalized = validator.normalizeEmail(email);\n      console.log(`Original: ${email}`);\n      console.log(`Normalized: ${normalized}`);\n      console.log(`Changed: ${email !== normalized ? 'YES' : 'NO'}`);\n      console.log('---');\n    });\n  });\n\n  it('should test different normalizeEmail options', () => {\n    const email = 'john.doe@gmail.com';\n    \n    console.log('\\nTesting normalizeEmail with different options:');\n    console.log('=============================================');\n    \n    // Default behavior\n    const defaultNormalized = validator.normalizeEmail(email);\n    console.log(`Default: ${email} -> ${defaultNormalized}`);\n    \n    // With gmail_remove_dots: false\n    const noDotRemoval = validator.normalizeEmail(email, { gmail_remove_dots: false });\n    console.log(`No dot removal: ${email} -> ${noDotRemoval}`);\n    \n    // With all transformations disabled\n    const minimal = validator.normalizeEmail(email, {\n      all_lowercase: false,\n      gmail_remove_dots: false,\n      gmail_remove_subaddress: false,\n      gmail_convert_googlemaildotcom: false,\n      outlookdotcom_remove_subaddress: false,\n      yahoo_remove_subaddress: false,\n      icloud_remove_subaddress: false\n    });\n    console.log(`Minimal normalization: ${email} -> ${minimal}`);\n  });\n});"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AAEtCC,QAAQ,CAAC,2BAA2B,EAAE,MAAM;EAC1CC,EAAE,CAAC,uDAAuD,EAAE,MAAM;IAChE,MAAMC,UAAU,GAAG,CACjB,eAAe,EACf,aAAa,EACb,oBAAoB,EACpB,wBAAwB,EACxB,sBAAsB,CACvB;IAEDC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClDD,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAEhDF,UAAU,CAACG,OAAO,CAACC,KAAK,IAAI;MAC1B,MAAMC,UAAU,GAAGT,SAAS,CAACU,cAAc,CAACF,KAAK,CAAC;MAClDH,OAAO,CAACC,GAAG,CAAC,aAAaE,KAAK,EAAE,CAAC;MACjCH,OAAO,CAACC,GAAG,CAAC,eAAeG,UAAU,EAAE,CAAC;MACxCJ,OAAO,CAACC,GAAG,CAAC,YAAYE,KAAK,KAAKC,UAAU,GAAG,KAAK,GAAG,IAAI,EAAE,CAAC;MAC9DJ,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFH,EAAE,CAAC,8CAA8C,EAAE,MAAM;IACvD,MAAMK,KAAK,GAAG,oBAAoB;IAElCH,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;IAC/DD,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;;IAE5D;IACA,MAAMK,iBAAiB,GAAGX,SAAS,CAACU,cAAc,CAACF,KAAK,CAAC;IACzDH,OAAO,CAACC,GAAG,CAAC,YAAYE,KAAK,OAAOG,iBAAiB,EAAE,CAAC;;IAExD;IACA,MAAMC,YAAY,GAAGZ,SAAS,CAACU,cAAc,CAACF,KAAK,EAAE;MAAEK,iBAAiB,EAAE;IAAM,CAAC,CAAC;IAClFR,OAAO,CAACC,GAAG,CAAC,mBAAmBE,KAAK,OAAOI,YAAY,EAAE,CAAC;;IAE1D;IACA,MAAME,OAAO,GAAGd,SAAS,CAACU,cAAc,CAACF,KAAK,EAAE;MAC9CO,aAAa,EAAE,KAAK;MACpBF,iBAAiB,EAAE,KAAK;MACxBG,uBAAuB,EAAE,KAAK;MAC9BC,8BAA8B,EAAE,KAAK;MACrCC,+BAA+B,EAAE,KAAK;MACtCC,uBAAuB,EAAE,KAAK;MAC9BC,wBAAwB,EAAE;IAC5B,CAAC,CAAC;IACFf,OAAO,CAACC,GAAG,CAAC,0BAA0BE,KAAK,OAAOM,OAAO,EAAE,CAAC;EAC9D,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}