499e9bd665943e942c55bfbbdbce6358
const request = require('supertest');
const {
  createTestApp
} = require('../helpers/testApp');
describe('Health Check Routes', () => {
  let app;
  beforeAll(() => {
    app = createTestApp();
  });
  describe('GET /health', () => {
    it('should return health status', async () => {
      const response = await request(app).get('/health').expect(200);
      expect(response.body).toHaveProperty('status', 'OK');
      expect(response.body).toHaveProperty('timestamp');
      expect(new Date(response.body.timestamp)).toBeInstanceOf(Date);
    });
    it('should return consistent response format', async () => {
      const response = await request(app).get('/health').expect(200);
      expect(typeof response.body.status).toBe('string');
      expect(typeof response.body.timestamp).toBe('string');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1ZXN0IiwicmVxdWlyZSIsImNyZWF0ZVRlc3RBcHAiLCJkZXNjcmliZSIsImFwcCIsImJlZm9yZUFsbCIsIml0IiwicmVzcG9uc2UiLCJnZXQiLCJleHBlY3QiLCJib2R5IiwidG9IYXZlUHJvcGVydHkiLCJEYXRlIiwidGltZXN0YW1wIiwidG9CZUluc3RhbmNlT2YiLCJzdGF0dXMiLCJ0b0JlIl0sInNvdXJjZXMiOlsiaGVhbHRoLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcmVxdWVzdCA9IHJlcXVpcmUoJ3N1cGVydGVzdCcpO1xuY29uc3QgeyBjcmVhdGVUZXN0QXBwIH0gPSByZXF1aXJlKCcuLi9oZWxwZXJzL3Rlc3RBcHAnKTtcblxuZGVzY3JpYmUoJ0hlYWx0aCBDaGVjayBSb3V0ZXMnLCAoKSA9PiB7XG4gIGxldCBhcHA7XG5cbiAgYmVmb3JlQWxsKCgpID0+IHtcbiAgICBhcHAgPSBjcmVhdGVUZXN0QXBwKCk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdHRVQgL2hlYWx0aCcsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHJldHVybiBoZWFsdGggc3RhdHVzJywgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0KGFwcClcbiAgICAgICAgLmdldCgnL2hlYWx0aCcpXG4gICAgICAgIC5leHBlY3QoMjAwKTtcblxuICAgICAgZXhwZWN0KHJlc3BvbnNlLmJvZHkpLnRvSGF2ZVByb3BlcnR5KCdzdGF0dXMnLCAnT0snKTtcbiAgICAgIGV4cGVjdChyZXNwb25zZS5ib2R5KS50b0hhdmVQcm9wZXJ0eSgndGltZXN0YW1wJyk7XG4gICAgICBleHBlY3QobmV3IERhdGUocmVzcG9uc2UuYm9keS50aW1lc3RhbXApKS50b0JlSW5zdGFuY2VPZihEYXRlKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgcmV0dXJuIGNvbnNpc3RlbnQgcmVzcG9uc2UgZm9ybWF0JywgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0KGFwcClcbiAgICAgICAgLmdldCgnL2hlYWx0aCcpXG4gICAgICAgIC5leHBlY3QoMjAwKTtcblxuICAgICAgZXhwZWN0KHR5cGVvZiByZXNwb25zZS5ib2R5LnN0YXR1cykudG9CZSgnc3RyaW5nJyk7XG4gICAgICBleHBlY3QodHlwZW9mIHJlc3BvbnNlLmJvZHkudGltZXN0YW1wKS50b0JlKCdzdHJpbmcnKTtcbiAgICB9KTtcbiAgfSk7XG59KTsiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFdBQVcsQ0FBQztBQUNwQyxNQUFNO0VBQUVDO0FBQWMsQ0FBQyxHQUFHRCxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFFdkRFLFFBQVEsQ0FBQyxxQkFBcUIsRUFBRSxNQUFNO0VBQ3BDLElBQUlDLEdBQUc7RUFFUEMsU0FBUyxDQUFDLE1BQU07SUFDZEQsR0FBRyxHQUFHRixhQUFhLENBQUMsQ0FBQztFQUN2QixDQUFDLENBQUM7RUFFRkMsUUFBUSxDQUFDLGFBQWEsRUFBRSxNQUFNO0lBQzVCRyxFQUFFLENBQUMsNkJBQTZCLEVBQUUsWUFBWTtNQUM1QyxNQUFNQyxRQUFRLEdBQUcsTUFBTVAsT0FBTyxDQUFDSSxHQUFHLENBQUMsQ0FDaENJLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FDZEMsTUFBTSxDQUFDLEdBQUcsQ0FBQztNQUVkQSxNQUFNLENBQUNGLFFBQVEsQ0FBQ0csSUFBSSxDQUFDLENBQUNDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDO01BQ3BERixNQUFNLENBQUNGLFFBQVEsQ0FBQ0csSUFBSSxDQUFDLENBQUNDLGNBQWMsQ0FBQyxXQUFXLENBQUM7TUFDakRGLE1BQU0sQ0FBQyxJQUFJRyxJQUFJLENBQUNMLFFBQVEsQ0FBQ0csSUFBSSxDQUFDRyxTQUFTLENBQUMsQ0FBQyxDQUFDQyxjQUFjLENBQUNGLElBQUksQ0FBQztJQUNoRSxDQUFDLENBQUM7SUFFRk4sRUFBRSxDQUFDLDBDQUEwQyxFQUFFLFlBQVk7TUFDekQsTUFBTUMsUUFBUSxHQUFHLE1BQU1QLE9BQU8sQ0FBQ0ksR0FBRyxDQUFDLENBQ2hDSSxHQUFHLENBQUMsU0FBUyxDQUFDLENBQ2RDLE1BQU0sQ0FBQyxHQUFHLENBQUM7TUFFZEEsTUFBTSxDQUFDLE9BQU9GLFFBQVEsQ0FBQ0csSUFBSSxDQUFDSyxNQUFNLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLFFBQVEsQ0FBQztNQUNsRFAsTUFBTSxDQUFDLE9BQU9GLFFBQVEsQ0FBQ0csSUFBSSxDQUFDRyxTQUFTLENBQUMsQ0FBQ0csSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2RCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=