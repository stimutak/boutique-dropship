{"version":3,"names":["request","require","createTestApp","describe","app","beforeAll","it","response","get","expect","body","toHaveProperty","Date","timestamp","toBeInstanceOf","status","toBe"],"sources":["health.test.js"],"sourcesContent":["const request = require('supertest');\nconst { createTestApp } = require('../helpers/testApp');\n\ndescribe('Health Check Routes', () => {\n  let app;\n\n  beforeAll(() => {\n    app = createTestApp();\n  });\n\n  describe('GET /health', () => {\n    it('should return health status', async () => {\n      const response = await request(app)\n        .get('/health')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('status', 'OK');\n      expect(response.body).toHaveProperty('timestamp');\n      expect(new Date(response.body.timestamp)).toBeInstanceOf(Date);\n    });\n\n    it('should return consistent response format', async () => {\n      const response = await request(app)\n        .get('/health')\n        .expect(200);\n\n      expect(typeof response.body.status).toBe('string');\n      expect(typeof response.body.timestamp).toBe('string');\n    });\n  });\n});"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,MAAM;EAAEC;AAAc,CAAC,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAEvDE,QAAQ,CAAC,qBAAqB,EAAE,MAAM;EACpC,IAAIC,GAAG;EAEPC,SAAS,CAAC,MAAM;IACdD,GAAG,GAAGF,aAAa,CAAC,CAAC;EACvB,CAAC,CAAC;EAEFC,QAAQ,CAAC,aAAa,EAAE,MAAM;IAC5BG,EAAE,CAAC,6BAA6B,EAAE,YAAY;MAC5C,MAAMC,QAAQ,GAAG,MAAMP,OAAO,CAACI,GAAG,CAAC,CAChCI,GAAG,CAAC,SAAS,CAAC,CACdC,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACF,QAAQ,CAACG,IAAI,CAAC,CAACC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC;MACpDF,MAAM,CAACF,QAAQ,CAACG,IAAI,CAAC,CAACC,cAAc,CAAC,WAAW,CAAC;MACjDF,MAAM,CAAC,IAAIG,IAAI,CAACL,QAAQ,CAACG,IAAI,CAACG,SAAS,CAAC,CAAC,CAACC,cAAc,CAACF,IAAI,CAAC;IAChE,CAAC,CAAC;IAEFN,EAAE,CAAC,0CAA0C,EAAE,YAAY;MACzD,MAAMC,QAAQ,GAAG,MAAMP,OAAO,CAACI,GAAG,CAAC,CAChCI,GAAG,CAAC,SAAS,CAAC,CACdC,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAAC,OAAOF,QAAQ,CAACG,IAAI,CAACK,MAAM,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC;MAClDP,MAAM,CAAC,OAAOF,QAAQ,CAACG,IAAI,CAACG,SAAS,CAAC,CAACG,IAAI,CAAC,QAAQ,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}