{"version":3,"names":["request","require","mongoose","MongoMemoryServer","app","Product","User","Cart","describe","mongoServer","testProduct","testUser","authToken","sessionCookie","csrfToken","beforeAll","create","mongoUri","getUri","disconnect","connect","afterAll","stop","beforeEach","Promise","all","deleteMany","name","slug","description","shortDescription","price","category","isActive","properties","chakra","element","healing","email","password","it","response","get","expect","body","success","toBe","toBeTruthy","sessionInfo","isGuest","headers","csrfResponse","guestSessionId","Date","now","Math","random","toString","substr","post","set","send","productId","_id","quantity","message","data","cart","items","toHaveLength","product","itemCount","error","code","cartResponse","loginResponse","token","updateResponse","put","removeResponse","delete","authCookie","authCsrfResponse","authCsrfToken","mergeResponse","sessionId","guestCartItems","cookies","some","cookie","includes"],"sources":["cart-docker-issue.test.js"],"sourcesContent":["/**\n * @jest-environment node\n * \n * Tests to reproduce and fix cart functionality issues in Docker environment\n * Following TDD principles: write failing tests first, then fix\n */\n\nconst request = require('supertest');\nconst mongoose = require('mongoose');\nconst { MongoMemoryServer } = require('mongodb-memory-server');\nconst app = require('../server');\nconst Product = require('../models/Product');\nconst User = require('../models/User');\nconst Cart = require('../models/Cart');\n\ndescribe('Cart Functionality - Docker Environment Issues', () => {\n  let mongoServer;\n  let testProduct;\n  let testUser;\n  let authToken;\n  let sessionCookie;\n  let csrfToken;\n\n  beforeAll(async () => {\n    // Setup in-memory MongoDB\n    mongoServer = await MongoMemoryServer.create();\n    const mongoUri = mongoServer.getUri();\n    \n    // Close any existing connections\n    await mongoose.disconnect();\n    \n    // Connect to the in-memory database\n    await mongoose.connect(mongoUri);\n  });\n\n  afterAll(async () => {\n    await mongoose.disconnect();\n    await mongoServer.stop();\n  });\n\n  beforeEach(async () => {\n    // Clear all collections\n    await Promise.all([\n      Product.deleteMany({}),\n      User.deleteMany({}),\n      Cart.deleteMany({})\n    ]);\n\n    // Create test product\n    testProduct = await Product.create({\n      name: 'Test Crystal',\n      slug: 'test-crystal',\n      description: 'A test crystal for unit testing',\n      shortDescription: 'Test crystal',\n      price: 29.99,\n      category: 'crystals',\n      isActive: true,\n      properties: {\n        chakra: ['crown'],\n        element: ['air'],\n        healing: ['test']\n      }\n    });\n\n    // Create test user\n    testUser = await User.create({\n      name: 'Test User',\n      email: 'test@example.com',\n      password: 'Password123!',\n      isActive: true\n    });\n  });\n\n  describe('Guest Cart Operations', () => {\n    it('should get CSRF token for guest user', async () => {\n      const response = await request(app)\n        .get('/api/csrf-token')\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.csrfToken).toBeTruthy();\n      expect(response.body.sessionInfo.isGuest).toBe(true);\n      \n      // Extract session cookie and CSRF token for subsequent requests\n      sessionCookie = response.headers['set-cookie'];\n      csrfToken = response.body.csrfToken;\n    });\n\n    it('should add item to guest cart with CSRF token', async () => {\n      // First get CSRF token\n      const csrfResponse = await request(app)\n        .get('/api/csrf-token')\n        .expect(200);\n\n      sessionCookie = csrfResponse.headers['set-cookie'];\n      csrfToken = csrfResponse.body.csrfToken;\n\n      // Generate guest session ID\n      const guestSessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n      // Try to add item to cart\n      const response = await request(app)\n        .post('/api/cart/add')\n        .set('Cookie', sessionCookie)\n        .set('x-csrf-token', csrfToken)\n        .set('x-guest-session-id', guestSessionId)\n        .send({\n          productId: testProduct._id.toString(),\n          quantity: 1\n        })\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.message).toBe('Item added to cart');\n      expect(response.body.data.cart.items).toHaveLength(1);\n      expect(response.body.data.cart.items[0].product.name).toBe('Test Crystal');\n      expect(response.body.data.cart.itemCount).toBe(1);\n    });\n\n    it('should fail to add item without CSRF token', async () => {\n      // Get session but don't send CSRF token\n      const csrfResponse = await request(app)\n        .get('/api/csrf-token')\n        .expect(200);\n\n      sessionCookie = csrfResponse.headers['set-cookie'];\n      const guestSessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n      // Try to add item without CSRF token\n      const response = await request(app)\n        .post('/api/cart/add')\n        .set('Cookie', sessionCookie)\n        .set('x-guest-session-id', guestSessionId)\n        .send({\n          productId: testProduct._id.toString(),\n          quantity: 1\n        })\n        .expect(403);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('CSRF_TOKEN_MISMATCH');\n    });\n\n    it('should maintain cart across requests with same session', async () => {\n      // Get CSRF token\n      const csrfResponse = await request(app)\n        .get('/api/csrf-token')\n        .expect(200);\n\n      sessionCookie = csrfResponse.headers['set-cookie'];\n      csrfToken = csrfResponse.body.csrfToken;\n      const guestSessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n      // Add first item\n      await request(app)\n        .post('/api/cart/add')\n        .set('Cookie', sessionCookie)\n        .set('x-csrf-token', csrfToken)\n        .set('x-guest-session-id', guestSessionId)\n        .send({\n          productId: testProduct._id.toString(),\n          quantity: 1\n        })\n        .expect(200);\n\n      // Check cart contents\n      const cartResponse = await request(app)\n        .get('/api/cart')\n        .set('Cookie', sessionCookie)\n        .set('x-guest-session-id', guestSessionId)\n        .expect(200);\n\n      expect(cartResponse.body.data.cart.items).toHaveLength(1);\n      expect(cartResponse.body.data.cart.itemCount).toBe(1);\n    });\n  });\n\n  describe('Authenticated User Cart Operations', () => {\n    beforeEach(async () => {\n      // Login and get auth token\n      const loginResponse = await request(app)\n        .post('/api/auth/login')\n        .send({\n          email: 'test@example.com',\n          password: 'Password123!'\n        })\n        .expect(200);\n\n      authToken = loginResponse.body.token;\n      sessionCookie = loginResponse.headers['set-cookie'];\n      \n      // Get CSRF token for authenticated session\n      const csrfResponse = await request(app)\n        .get('/api/csrf-token')\n        .set('Cookie', sessionCookie)\n        .expect(200);\n        \n      csrfToken = csrfResponse.body.csrfToken;\n    });\n\n    it('should add item to authenticated user cart', async () => {\n      const response = await request(app)\n        .post('/api/cart/add')\n        .set('Cookie', sessionCookie)\n        .set('x-csrf-token', csrfToken)\n        .send({\n          productId: testProduct._id.toString(),\n          quantity: 2\n        })\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.cart.items).toHaveLength(1);\n      expect(response.body.data.cart.items[0].quantity).toBe(2);\n      expect(response.body.data.cart.itemCount).toBe(2);\n    });\n\n    it('should update cart item quantity', async () => {\n      // First add item\n      await request(app)\n        .post('/api/cart/add')\n        .set('Cookie', sessionCookie)\n        .set('x-csrf-token', csrfToken)\n        .send({\n          productId: testProduct._id.toString(),\n          quantity: 1\n        })\n        .expect(200);\n\n      // Update quantity\n      const updateResponse = await request(app)\n        .put('/api/cart/update')\n        .set('Cookie', sessionCookie)\n        .set('x-csrf-token', csrfToken)\n        .send({\n          productId: testProduct._id.toString(),\n          quantity: 3\n        })\n        .expect(200);\n\n      expect(updateResponse.body.success).toBe(true);\n      expect(updateResponse.body.message).toBe('Cart updated');\n      expect(updateResponse.body.data.cart.items[0].quantity).toBe(3);\n    });\n\n    it('should remove item from cart', async () => {\n      // First add item\n      await request(app)\n        .post('/api/cart/add')\n        .set('Cookie', sessionCookie)\n        .set('x-csrf-token', csrfToken)\n        .send({\n          productId: testProduct._id.toString(),\n          quantity: 1\n        })\n        .expect(200);\n\n      // Remove item\n      const removeResponse = await request(app)\n        .delete('/api/cart/remove')\n        .set('Cookie', sessionCookie)\n        .set('x-csrf-token', csrfToken)\n        .send({\n          productId: testProduct._id.toString()\n        })\n        .expect(200);\n\n      expect(removeResponse.body.success).toBe(true);\n      expect(removeResponse.body.message).toBe('Item removed from cart');\n      expect(removeResponse.body.data.cart.items).toHaveLength(0);\n    });\n  });\n\n  describe('Cart Merge on Login', () => {\n    it('should merge guest cart with user cart on login', async () => {\n      // Create guest session and add items\n      const csrfResponse = await request(app)\n        .get('/api/csrf-token')\n        .expect(200);\n\n      sessionCookie = csrfResponse.headers['set-cookie'];\n      csrfToken = csrfResponse.body.csrfToken;\n      const guestSessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n      // Add item as guest\n      await request(app)\n        .post('/api/cart/add')\n        .set('Cookie', sessionCookie)\n        .set('x-csrf-token', csrfToken)\n        .set('x-guest-session-id', guestSessionId)\n        .send({\n          productId: testProduct._id.toString(),\n          quantity: 2\n        })\n        .expect(200);\n\n      // Login\n      const loginResponse = await request(app)\n        .post('/api/auth/login')\n        .set('Cookie', sessionCookie)\n        .send({\n          email: 'test@example.com',\n          password: 'Password123!'\n        })\n        .expect(200);\n\n      const authCookie = loginResponse.headers['set-cookie'];\n\n      // Get CSRF for authenticated session\n      const authCsrfResponse = await request(app)\n        .get('/api/csrf-token')\n        .set('Cookie', authCookie)\n        .expect(200);\n\n      const authCsrfToken = authCsrfResponse.body.csrfToken;\n\n      // Merge cart\n      const mergeResponse = await request(app)\n        .post('/api/cart/merge')\n        .set('Cookie', authCookie)\n        .set('x-csrf-token', authCsrfToken)\n        .send({\n          sessionId: guestSessionId,\n          guestCartItems: [{\n            productId: testProduct._id.toString(),\n            quantity: 2\n          }]\n        })\n        .expect(200);\n\n      expect(mergeResponse.body.success).toBe(true);\n      expect(mergeResponse.body.data.cart.items).toHaveLength(1);\n      expect(mergeResponse.body.data.cart.items[0].quantity).toBe(2);\n    });\n  });\n\n  describe('CORS and Cookie Configuration', () => {\n    it('should handle withCredentials properly', async () => {\n      const response = await request(app)\n        .get('/api/csrf-token')\n        .expect(200);\n\n      // Check for proper cookie settings\n      const cookies = response.headers['set-cookie'];\n      expect(cookies).toBeTruthy();\n      expect(cookies.some(cookie => cookie.includes('httpOnly'))).toBe(true);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}