{"version":3,"names":["request","require","express","AppError","globalErrorHandler","catchAsync","describe","app","beforeEach","use","json","test","error","expect","message","toBe","statusCode","code","isOperational","status","asyncRoute","req","res","next","Error","get","response","body","success","process","env","NODE_ENV","stack","toBeUndefined","toBeDefined","name","errors","email","password","toContain"],"sources":["errorHandler.test.js"],"sourcesContent":["const request = require('supertest');\nconst express = require('express');\nconst { AppError, globalErrorHandler, catchAsync } = require('../../middleware/errorHandler');\n\ndescribe('Error Handling Middleware', () => {\n  let app;\n\n  beforeEach(() => {\n    app = express();\n    app.use(express.json());\n  });\n\n  describe('AppError', () => {\n    test('should create operational error with correct properties', () => {\n      const error = new AppError('Test error', 400, 'TEST_ERROR');\n      \n      expect(error.message).toBe('Test error');\n      expect(error.statusCode).toBe(400);\n      expect(error.code).toBe('TEST_ERROR');\n      expect(error.isOperational).toBe(true);\n      expect(error.status).toBe('fail');\n    });\n\n    test('should create server error with correct status', () => {\n      const error = new AppError('Server error', 500, 'SERVER_ERROR');\n      \n      expect(error.status).toBe('error');\n    });\n  });\n\n  describe('catchAsync', () => {\n    test('should catch async errors and pass to next', async () => {\n      const asyncRoute = catchAsync(async (req, res, next) => {\n        throw new Error('Async error');\n      });\n\n      app.get('/test', asyncRoute);\n      app.use(globalErrorHandler);\n\n      const response = await request(app)\n        .get('/test')\n        .expect(500);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.message).toBe('Something went wrong!');\n    });\n\n    test('should handle successful async operations', async () => {\n      const asyncRoute = catchAsync(async (req, res, next) => {\n        res.json({ success: true, message: 'Success' });\n      });\n\n      app.get('/test', asyncRoute);\n\n      const response = await request(app)\n        .get('/test')\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.message).toBe('Success');\n    });\n  });\n\n  describe('globalErrorHandler', () => {\n    beforeEach(() => {\n      process.env.NODE_ENV = 'test';\n    });\n\n    test('should handle operational errors in production', async () => {\n      process.env.NODE_ENV = 'production';\n      \n      app.get('/test', (req, res, next) => {\n        next(new AppError('Operational error', 400, 'TEST_ERROR'));\n      });\n      app.use(globalErrorHandler);\n\n      const response = await request(app)\n        .get('/test')\n        .expect(400);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('TEST_ERROR');\n      expect(response.body.error.message).toBe('Operational error');\n      expect(response.body.error.stack).toBeUndefined();\n    });\n\n    test('should handle non-operational errors in production', async () => {\n      process.env.NODE_ENV = 'production';\n      \n      app.get('/test', (req, res, next) => {\n        const error = new Error('Programming error');\n        error.isOperational = false;\n        next(error);\n      });\n      app.use(globalErrorHandler);\n\n      const response = await request(app)\n        .get('/test')\n        .expect(500);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('INTERNAL_ERROR');\n      expect(response.body.error.message).toBe('Something went wrong!');\n    });\n\n    test('should include stack trace in development', async () => {\n      process.env.NODE_ENV = 'development';\n      \n      app.get('/test', (req, res, next) => {\n        next(new AppError('Dev error', 400, 'DEV_ERROR'));\n      });\n      app.use(globalErrorHandler);\n\n      const response = await request(app)\n        .get('/test')\n        .expect(400);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.stack).toBeDefined();\n    });\n\n    test('should handle JWT errors', async () => {\n      process.env.NODE_ENV = 'production';\n      \n      app.get('/test', (req, res, next) => {\n        const error = new Error('jwt malformed');\n        error.name = 'JsonWebTokenError';\n        next(error);\n      });\n      app.use(globalErrorHandler);\n\n      const response = await request(app)\n        .get('/test')\n        .expect(401);\n\n      expect(response.body.error.code).toBe('INVALID_TOKEN');\n    });\n\n    test('should handle expired JWT errors', async () => {\n      process.env.NODE_ENV = 'production';\n      \n      app.get('/test', (req, res, next) => {\n        const error = new Error('jwt expired');\n        error.name = 'TokenExpiredError';\n        next(error);\n      });\n      app.use(globalErrorHandler);\n\n      const response = await request(app)\n        .get('/test')\n        .expect(401);\n\n      expect(response.body.error.code).toBe('TOKEN_EXPIRED');\n    });\n\n    test('should handle validation errors', async () => {\n      process.env.NODE_ENV = 'production';\n      \n      app.get('/test', (req, res, next) => {\n        const error = new Error('Validation failed');\n        error.name = 'ValidationError';\n        error.errors = {\n          email: { message: 'Email is required' },\n          password: { message: 'Password is too short' }\n        };\n        next(error);\n      });\n      app.use(globalErrorHandler);\n\n      const response = await request(app)\n        .get('/test')\n        .expect(400);\n\n      expect(response.body.error.code).toBe('VALIDATION_ERROR');\n      expect(response.body.error.message).toContain('Email is required');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}