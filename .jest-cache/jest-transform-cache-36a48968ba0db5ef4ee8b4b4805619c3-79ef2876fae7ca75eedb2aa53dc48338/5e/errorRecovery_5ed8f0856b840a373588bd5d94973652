419f613d3e4711ac60368bcdd15540d7
/* istanbul ignore next */
function cov_1k6y6rrig2() {
  var path = "/Users/oliver/Projects/boutique/utils/errorRecovery.js";
  var hash = "e43ba43ea40f55cb8ea1cb69df3a1f2b21894b26";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/oliver/Projects/boutique/utils/errorRecovery.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 52
        },
        end: {
          line: 1,
          column: 71
        }
      },
      "1": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "2": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "3": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 21
        }
      },
      "4": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "5": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 54
        }
      },
      "6": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "7": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 39
        }
      },
      "8": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 26
        }
      },
      "9": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 32
        }
      },
      "10": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 34
        }
      },
      "11": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "12": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "13": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 120
        }
      },
      "14": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 44
        }
      },
      "15": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 38,
          column: 71
        }
      },
      "16": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "17": {
        start: {
          line: 42,
          column: 21
        },
        end: {
          line: 42,
          column: 38
        }
      },
      "18": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 23
        }
      },
      "19": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 20
        }
      },
      "20": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 23
        }
      },
      "21": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 18
        }
      },
      "22": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 26
        }
      },
      "23": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "24": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 41
        }
      },
      "25": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 68
        }
      },
      "26": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 24
        }
      },
      "27": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 38
        }
      },
      "28": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "29": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 39
        }
      },
      "30": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 56
        }
      },
      "31": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 107
        }
      },
      "32": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 77,
          column: 6
        }
      },
      "33": {
        start: {
          line: 83,
          column: 17
        },
        end: {
          line: 83,
          column: 48
        }
      },
      "34": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 117,
          column: 3
        }
      },
      "35": {
        start: {
          line: 86,
          column: 21
        },
        end: {
          line: 86,
          column: 22
        }
      },
      "36": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "37": {
        start: {
          line: 88,
          column: 21
        },
        end: {
          line: 88,
          column: 38
        }
      },
      "38": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "39": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 66
        }
      },
      "40": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 20
        }
      },
      "41": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 94,
          column: 24
        }
      },
      "42": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "43": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "44": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 14
        }
      },
      "45": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 107,
          column: 7
        }
      },
      "46": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "47": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 63
        }
      },
      "48": {
        start: {
          line: 115,
          column: 35
        },
        end: {
          line: 115,
          column: 61
        }
      },
      "49": {
        start: {
          line: 119,
          column: 2
        },
        end: {
          line: 119,
          column: 18
        }
      },
      "50": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "51": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "52": {
        start: {
          line: 133,
          column: 6
        },
        end: {
          line: 137,
          column: 8
        }
      },
      "53": {
        start: {
          line: 134,
          column: 14
        },
        end: {
          line: 134,
          column: 43
        }
      },
      "54": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 148,
          column: 7
        }
      },
      "55": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "56": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 153,
          column: 52
        }
      },
      "57": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "58": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 158,
          column: 82
        }
      },
      "59": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 57
        }
      },
      "60": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 169,
          column: 7
        }
      },
      "61": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 175,
          column: 6
        }
      },
      "62": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "63": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 187,
          column: 6
        }
      },
      "64": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 195,
          column: 7
        }
      },
      "65": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 200,
          column: 6
        }
      },
      "66": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "67": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 220,
          column: 7
        }
      },
      "68": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 219,
          column: 8
        }
      },
      "69": {
        start: {
          line: 216,
          column: 14
        },
        end: {
          line: 216,
          column: 53
        }
      },
      "70": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 229,
          column: 7
        }
      },
      "71": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 235,
          column: 5
        }
      },
      "72": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 234,
          column: 62
        }
      },
      "73": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 240,
          column: 5
        }
      },
      "74": {
        start: {
          line: 239,
          column: 6
        },
        end: {
          line: 239,
          column: 64
        }
      },
      "75": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 243,
          column: 67
        }
      },
      "76": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 251,
          column: 7
        }
      },
      "77": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 256,
          column: 6
        }
      },
      "78": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 263,
          column: 7
        }
      },
      "79": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 269,
          column: 6
        }
      },
      "80": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 278,
          column: 7
        }
      },
      "81": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 283,
          column: 6
        }
      },
      "82": {
        start: {
          line: 288,
          column: 29
        },
        end: {
          line: 288,
          column: 55
        }
      },
      "83": {
        start: {
          line: 289,
          column: 32
        },
        end: {
          line: 289,
          column: 61
        }
      },
      "84": {
        start: {
          line: 293,
          column: 2
        },
        end: {
          line: 296,
          column: 4
        }
      },
      "85": {
        start: {
          line: 299,
          column: 0
        },
        end: {
          line: 307,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        },
        loc: {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 27
          },
          end: {
            line: 49,
            column: 3
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 51,
            column: 2
          },
          end: {
            line: 51,
            column: 3
          }
        },
        loc: {
          start: {
            line: 51,
            column: 14
          },
          end: {
            line: 57,
            column: 3
          }
        },
        line: 51
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 3
          }
        },
        loc: {
          start: {
            line: 59,
            column: 14
          },
          end: {
            line: 68,
            column: 3
          }
        },
        line: 59
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        loc: {
          start: {
            line: 70,
            column: 14
          },
          end: {
            line: 78,
            column: 3
          }
        },
        line: 70
      },
      "5": {
        name: "retryWithBackoff",
        decl: {
          start: {
            line: 82,
            column: 15
          },
          end: {
            line: 82,
            column: 31
          }
        },
        loc: {
          start: {
            line: 82,
            column: 71
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 82
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 115,
            column: 24
          },
          end: {
            line: 115,
            column: 25
          }
        },
        loc: {
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 61
          }
        },
        line: 115
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 124,
            column: 2
          },
          end: {
            line: 124,
            column: 3
          }
        },
        loc: {
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 129,
            column: 3
          }
        },
        line: 124
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 131,
            column: 2
          },
          end: {
            line: 131,
            column: 3
          }
        },
        loc: {
          start: {
            line: 131,
            column: 54
          },
          end: {
            line: 139,
            column: 3
          }
        },
        line: 131
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 132,
            column: 39
          },
          end: {
            line: 132,
            column: 40
          }
        },
        loc: {
          start: {
            line: 132,
            column: 51
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 132
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        loc: {
          start: {
            line: 134,
            column: 14
          },
          end: {
            line: 134,
            column: 43
          }
        },
        line: 134
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 141,
            column: 2
          },
          end: {
            line: 141,
            column: 3
          }
        },
        loc: {
          start: {
            line: 141,
            column: 49
          },
          end: {
            line: 163,
            column: 3
          }
        },
        line: 141
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 165,
            column: 2
          },
          end: {
            line: 165,
            column: 3
          }
        },
        loc: {
          start: {
            line: 165,
            column: 42
          },
          end: {
            line: 176,
            column: 3
          }
        },
        line: 165
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 178,
            column: 2
          },
          end: {
            line: 178,
            column: 3
          }
        },
        loc: {
          start: {
            line: 178,
            column: 61
          },
          end: {
            line: 188,
            column: 3
          }
        },
        line: 178
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 190,
            column: 2
          },
          end: {
            line: 190,
            column: 3
          }
        },
        loc: {
          start: {
            line: 190,
            column: 49
          },
          end: {
            line: 201,
            column: 3
          }
        },
        line: 190
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 206,
            column: 2
          },
          end: {
            line: 206,
            column: 3
          }
        },
        loc: {
          start: {
            line: 206,
            column: 16
          },
          end: {
            line: 211,
            column: 3
          }
        },
        line: 206
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 213,
            column: 2
          },
          end: {
            line: 213,
            column: 3
          }
        },
        loc: {
          start: {
            line: 213,
            column: 66
          },
          end: {
            line: 221,
            column: 3
          }
        },
        line: 213
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 214,
            column: 39
          },
          end: {
            line: 214,
            column: 40
          }
        },
        loc: {
          start: {
            line: 214,
            column: 51
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 214
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        loc: {
          start: {
            line: 216,
            column: 14
          },
          end: {
            line: 216,
            column: 53
          }
        },
        line: 216
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 223,
            column: 2
          },
          end: {
            line: 223,
            column: 3
          }
        },
        loc: {
          start: {
            line: 223,
            column: 59
          },
          end: {
            line: 244,
            column: 3
          }
        },
        line: 223
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 246,
            column: 2
          },
          end: {
            line: 246,
            column: 3
          }
        },
        loc: {
          start: {
            line: 246,
            column: 52
          },
          end: {
            line: 257,
            column: 3
          }
        },
        line: 246
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 259,
            column: 2
          },
          end: {
            line: 259,
            column: 3
          }
        },
        loc: {
          start: {
            line: 259,
            column: 54
          },
          end: {
            line: 270,
            column: 3
          }
        },
        line: 259
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 272,
            column: 2
          },
          end: {
            line: 272,
            column: 3
          }
        },
        loc: {
          start: {
            line: 272,
            column: 59
          },
          end: {
            line: 284,
            column: 3
          }
        },
        line: 272
      },
      "23": {
        name: "getCircuitBreakerStatus",
        decl: {
          start: {
            line: 292,
            column: 9
          },
          end: {
            line: 292,
            column: 32
          }
        },
        loc: {
          start: {
            line: 292,
            column: 35
          },
          end: {
            line: 297,
            column: 1
          }
        },
        line: 292
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 20,
            column: 32
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 22,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 22,
            column: 52
          }
        }, {
          start: {
            line: 22,
            column: 56
          },
          end: {
            line: 22,
            column: 57
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 44
          }
        }, {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 53
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 52
          }
        }, {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 24,
            column: 61
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 36,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 36,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 43
          },
          end: {
            line: 82,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 82,
            column: 53
          },
          end: {
            line: 82,
            column: 55
          }
        }],
        line: 82
      },
      "9": {
        loc: {
          start: {
            line: 82,
            column: 57
          },
          end: {
            line: 82,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 82,
            column: 67
          },
          end: {
            line: 82,
            column: 69
          }
        }],
        line: 82
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 96,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "12": {
        loc: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "13": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 151,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 151,
            column: 41
          }
        }, {
          start: {
            line: 151,
            column: 45
          },
          end: {
            line: 151,
            column: 78
          }
        }],
        line: 151
      },
      "14": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "15": {
        loc: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "16": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 232,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 232,
            column: 41
          }
        }, {
          start: {
            line: 232,
            column: 45
          },
          end: {
            line: 232,
            column: 78
          }
        }],
        line: 232
      },
      "17": {
        loc: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "18": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 47
          }
        }, {
          start: {
            line: 237,
            column: 51
          },
          end: {
            line: 237,
            column: 84
          }
        }],
        line: 237
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e43ba43ea40f55cb8ea1cb69df3a1f2b21894b26"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1k6y6rrig2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1k6y6rrig2();
const {
  logger,
  paymentLogger,
  wholesalerLogger
} =
/* istanbul ignore next */
(cov_1k6y6rrig2().s[0]++, require('./logger'));

// Retry configuration
const RETRY_CONFIG =
/* istanbul ignore next */
(cov_1k6y6rrig2().s[1]++, {
  maxRetries: 3,
  baseDelay: 1000,
  // 1 second
  maxDelay: 10000,
  // 10 seconds
  backoffFactor: 2
});

// Circuit breaker states
const CIRCUIT_STATES =
/* istanbul ignore next */
(cov_1k6y6rrig2().s[2]++, {
  CLOSED: 'CLOSED',
  OPEN: 'OPEN',
  HALF_OPEN: 'HALF_OPEN'
});

// Circuit breaker class for external services
class CircuitBreaker {
  constructor(name, options =
  /* istanbul ignore next */
  (cov_1k6y6rrig2().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[0]++;
    cov_1k6y6rrig2().s[3]++;
    this.name = name;
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[4]++;
    this.failureThreshold =
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[1][0]++, options.failureThreshold) ||
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[1][1]++, 5);
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[5]++;
    this.resetTimeout =
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[2][0]++, options.resetTimeout) ||
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[2][1]++, 60000); // 1 minute
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[6]++;
    this.monitoringPeriod =
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[3][0]++, options.monitoringPeriod) ||
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[3][1]++, 10000); // 10 seconds
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[7]++;
    this.state = CIRCUIT_STATES.CLOSED;
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[8]++;
    this.failureCount = 0;
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[9]++;
    this.lastFailureTime = null;
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[10]++;
    this.nextAttempt = Date.now();
  }
  async execute(operation) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[1]++;
    cov_1k6y6rrig2().s[11]++;
    if (this.state === CIRCUIT_STATES.OPEN) {
      /* istanbul ignore next */
      cov_1k6y6rrig2().b[4][0]++;
      cov_1k6y6rrig2().s[12]++;
      if (Date.now() < this.nextAttempt) {
        /* istanbul ignore next */
        cov_1k6y6rrig2().b[5][0]++;
        cov_1k6y6rrig2().s[13]++;
        throw new Error(`Circuit breaker is OPEN for ${this.name}. Next attempt in ${this.nextAttempt - Date.now()}ms`);
      } else
      /* istanbul ignore next */
      {
        cov_1k6y6rrig2().b[5][1]++;
      }
      cov_1k6y6rrig2().s[14]++;
      this.state = CIRCUIT_STATES.HALF_OPEN;
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[15]++;
      logger.info(`Circuit breaker for ${this.name} is now HALF_OPEN`);
    } else
    /* istanbul ignore next */
    {
      cov_1k6y6rrig2().b[4][1]++;
    }
    cov_1k6y6rrig2().s[16]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1k6y6rrig2().s[17]++, await operation());
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[18]++;
      this.onSuccess();
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[19]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[20]++;
      this.onFailure();
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[21]++;
      throw error;
    }
  }
  onSuccess() {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[2]++;
    cov_1k6y6rrig2().s[22]++;
    this.failureCount = 0;
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[23]++;
    if (this.state === CIRCUIT_STATES.HALF_OPEN) {
      /* istanbul ignore next */
      cov_1k6y6rrig2().b[6][0]++;
      cov_1k6y6rrig2().s[24]++;
      this.state = CIRCUIT_STATES.CLOSED;
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[25]++;
      logger.info(`Circuit breaker for ${this.name} is now CLOSED`);
    } else
    /* istanbul ignore next */
    {
      cov_1k6y6rrig2().b[6][1]++;
    }
  }
  onFailure() {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[3]++;
    cov_1k6y6rrig2().s[26]++;
    this.failureCount++;
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[27]++;
    this.lastFailureTime = Date.now();
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[28]++;
    if (this.failureCount >= this.failureThreshold) {
      /* istanbul ignore next */
      cov_1k6y6rrig2().b[7][0]++;
      cov_1k6y6rrig2().s[29]++;
      this.state = CIRCUIT_STATES.OPEN;
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[30]++;
      this.nextAttempt = Date.now() + this.resetTimeout;
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[31]++;
      logger.warn(`Circuit breaker for ${this.name} is now OPEN. Will retry after ${this.resetTimeout}ms`);
    } else
    /* istanbul ignore next */
    {
      cov_1k6y6rrig2().b[7][1]++;
    }
  }
  getStatus() {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[4]++;
    cov_1k6y6rrig2().s[32]++;
    return {
      name: this.name,
      state: this.state,
      failureCount: this.failureCount,
      lastFailureTime: this.lastFailureTime,
      nextAttempt: this.nextAttempt
    };
  }
}

// Retry mechanism with exponential backoff
async function retryWithBackoff(operation, context =
/* istanbul ignore next */
(cov_1k6y6rrig2().b[8][0]++, ''), options =
/* istanbul ignore next */
(cov_1k6y6rrig2().b[9][0]++, {})) {
  /* istanbul ignore next */
  cov_1k6y6rrig2().f[5]++;
  const config =
  /* istanbul ignore next */
  (cov_1k6y6rrig2().s[33]++, {
    ...RETRY_CONFIG,
    ...options
  });
  let lastError;
  /* istanbul ignore next */
  cov_1k6y6rrig2().s[34]++;
  for (let attempt =
  /* istanbul ignore next */
  (cov_1k6y6rrig2().s[35]++, 1); attempt <= config.maxRetries; attempt++) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[36]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1k6y6rrig2().s[37]++, await operation());
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[38]++;
      if (attempt > 1) {
        /* istanbul ignore next */
        cov_1k6y6rrig2().b[10][0]++;
        cov_1k6y6rrig2().s[39]++;
        logger.info(`${context} succeeded on attempt ${attempt}`);
      } else
      /* istanbul ignore next */
      {
        cov_1k6y6rrig2().b[10][1]++;
      }
      cov_1k6y6rrig2().s[40]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[41]++;
      lastError = error;
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[42]++;
      if (attempt === config.maxRetries) {
        /* istanbul ignore next */
        cov_1k6y6rrig2().b[11][0]++;
        cov_1k6y6rrig2().s[43]++;
        logger.error(`${context} failed after ${config.maxRetries} attempts:`, {
          error: error.message,
          attempts: attempt
        });
        /* istanbul ignore next */
        cov_1k6y6rrig2().s[44]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_1k6y6rrig2().b[11][1]++;
      }
      const delay =
      /* istanbul ignore next */
      (cov_1k6y6rrig2().s[45]++, Math.min(config.baseDelay * Math.pow(config.backoffFactor, attempt - 1), config.maxDelay));
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[46]++;
      logger.warn(`${context} failed on attempt ${attempt}, retrying in ${delay}ms:`, {
        error: error.message,
        attempt,
        nextRetryIn: delay
      });
      /* istanbul ignore next */
      cov_1k6y6rrig2().s[47]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1k6y6rrig2().f[6]++;
        cov_1k6y6rrig2().s[48]++;
        return setTimeout(resolve, delay);
      });
    }
  }
  /* istanbul ignore next */
  cov_1k6y6rrig2().s[49]++;
  throw lastError;
}

// Payment service error recovery
class PaymentErrorRecovery {
  constructor() {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[7]++;
    cov_1k6y6rrig2().s[50]++;
    this.circuitBreaker = new CircuitBreaker('PaymentService', {
      failureThreshold: 3,
      resetTimeout: 30000 // 30 seconds
    });
  }
  async processPayment(paymentOperation, paymentData) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[8]++;
    cov_1k6y6rrig2().s[51]++;
    return this.circuitBreaker.execute(async () => {
      /* istanbul ignore next */
      cov_1k6y6rrig2().f[9]++;
      cov_1k6y6rrig2().s[52]++;
      return retryWithBackoff(() => {
        /* istanbul ignore next */
        cov_1k6y6rrig2().f[10]++;
        cov_1k6y6rrig2().s[53]++;
        return paymentOperation(paymentData);
      }, `Payment processing for order ${paymentData.orderId}`, {
        maxRetries: 2
      });
    });
  }
  async handlePaymentFailure(error, paymentData) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[11]++;
    cov_1k6y6rrig2().s[54]++;
    paymentLogger.error('Payment processing failed:', {
      error: error.message,
      orderId: paymentData.orderId,
      amount: paymentData.amount,
      method: paymentData.method,
      timestamp: new Date().toISOString()
    });

    // Implement fallback strategies
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[13][0]++, error.message.includes('network')) ||
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[13][1]++, error.message.includes('timeout'))) {
      /* istanbul ignore next */
      cov_1k6y6rrig2().b[12][0]++;
      cov_1k6y6rrig2().s[56]++;
      // Network-related errors - queue for retry
      return this.queuePaymentForRetry(paymentData);
    } else
    /* istanbul ignore next */
    {
      cov_1k6y6rrig2().b[12][1]++;
    }
    cov_1k6y6rrig2().s[57]++;
    if (error.message.includes('insufficient_funds')) {
      /* istanbul ignore next */
      cov_1k6y6rrig2().b[14][0]++;
      cov_1k6y6rrig2().s[58]++;
      // Customer issue - notify customer
      return this.notifyCustomerOfPaymentIssue(paymentData, 'insufficient_funds');
    } else
    /* istanbul ignore next */
    {
      cov_1k6y6rrig2().b[14][1]++;
    }

    // Unknown error - escalate
    cov_1k6y6rrig2().s[59]++;
    return this.escalatePaymentError(error, paymentData);
  }
  async queuePaymentForRetry(paymentData) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[12]++;
    cov_1k6y6rrig2().s[60]++;
    paymentLogger.info('Queueing payment for retry:', {
      orderId: paymentData.orderId,
      retryAt: new Date(Date.now() + 300000).toISOString() // 5 minutes
    });

    // In a real implementation, this would use a job queue like Bull or Agenda
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[61]++;
    return {
      status: 'queued_for_retry',
      retryAt: new Date(Date.now() + 300000)
    };
  }
  async notifyCustomerOfPaymentIssue(paymentData, issueType) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[13]++;
    cov_1k6y6rrig2().s[62]++;
    paymentLogger.info('Notifying customer of payment issue:', {
      orderId: paymentData.orderId,
      issueType
    });
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[63]++;
    return {
      status: 'customer_notified',
      issueType
    };
  }
  async escalatePaymentError(error, paymentData) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[14]++;
    cov_1k6y6rrig2().s[64]++;
    paymentLogger.error('Escalating payment error:', {
      error: error.message,
      orderId: paymentData.orderId,
      escalatedAt: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[65]++;
    return {
      status: 'escalated',
      error: error.message
    };
  }
}

// Wholesaler communication error recovery
class WholesalerErrorRecovery {
  constructor() {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[15]++;
    cov_1k6y6rrig2().s[66]++;
    this.circuitBreaker = new CircuitBreaker('WholesalerService', {
      failureThreshold: 5,
      resetTimeout: 60000 // 1 minute
    });
  }
  async sendNotification(notificationOperation, notificationData) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[16]++;
    cov_1k6y6rrig2().s[67]++;
    return this.circuitBreaker.execute(async () => {
      /* istanbul ignore next */
      cov_1k6y6rrig2().f[17]++;
      cov_1k6y6rrig2().s[68]++;
      return retryWithBackoff(() => {
        /* istanbul ignore next */
        cov_1k6y6rrig2().f[18]++;
        cov_1k6y6rrig2().s[69]++;
        return notificationOperation(notificationData);
      }, `Wholesaler notification for order ${notificationData.orderId}`, {
        maxRetries: 3
      });
    });
  }
  async handleNotificationFailure(error, notificationData) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[19]++;
    cov_1k6y6rrig2().s[70]++;
    wholesalerLogger.error('Wholesaler notification failed:', {
      error: error.message,
      orderId: notificationData.orderId,
      wholesalerId: notificationData.wholesalerId,
      timestamp: new Date().toISOString()
    });

    // Implement fallback strategies
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[71]++;
    if (
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[16][0]++, error.message.includes('network')) ||
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[16][1]++, error.message.includes('timeout'))) {
      /* istanbul ignore next */
      cov_1k6y6rrig2().b[15][0]++;
      cov_1k6y6rrig2().s[72]++;
      // Network-related errors - queue for retry
      return this.queueNotificationForRetry(notificationData);
    } else
    /* istanbul ignore next */
    {
      cov_1k6y6rrig2().b[15][1]++;
    }
    cov_1k6y6rrig2().s[73]++;
    if (
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[18][0]++, error.message.includes('invalid_email')) ||
    /* istanbul ignore next */
    (cov_1k6y6rrig2().b[18][1]++, error.message.includes('bounced'))) {
      /* istanbul ignore next */
      cov_1k6y6rrig2().b[17][0]++;
      cov_1k6y6rrig2().s[74]++;
      // Email delivery issues - try alternative contact method
      return this.tryAlternativeContactMethod(notificationData);
    } else
    /* istanbul ignore next */
    {
      cov_1k6y6rrig2().b[17][1]++;
    }

    // Unknown error - escalate
    cov_1k6y6rrig2().s[75]++;
    return this.escalateNotificationError(error, notificationData);
  }
  async queueNotificationForRetry(notificationData) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[20]++;
    cov_1k6y6rrig2().s[76]++;
    wholesalerLogger.info('Queueing notification for retry:', {
      orderId: notificationData.orderId,
      wholesalerId: notificationData.wholesalerId,
      retryAt: new Date(Date.now() + 600000).toISOString() // 10 minutes
    });
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[77]++;
    return {
      status: 'queued_for_retry',
      retryAt: new Date(Date.now() + 600000)
    };
  }
  async tryAlternativeContactMethod(notificationData) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[21]++;
    cov_1k6y6rrig2().s[78]++;
    wholesalerLogger.info('Trying alternative contact method:', {
      orderId: notificationData.orderId,
      wholesalerId: notificationData.wholesalerId
    });

    // In a real implementation, this might try SMS, webhook, or phone
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[79]++;
    return {
      status: 'alternative_method_attempted',
      method: 'webhook'
    };
  }
  async escalateNotificationError(error, notificationData) {
    /* istanbul ignore next */
    cov_1k6y6rrig2().f[22]++;
    cov_1k6y6rrig2().s[80]++;
    wholesalerLogger.error('Escalating notification error:', {
      error: error.message,
      orderId: notificationData.orderId,
      wholesalerId: notificationData.wholesalerId,
      escalatedAt: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1k6y6rrig2().s[81]++;
    return {
      status: 'escalated',
      error: error.message
    };
  }
}

// Create instances
const paymentErrorRecovery =
/* istanbul ignore next */
(cov_1k6y6rrig2().s[82]++, new PaymentErrorRecovery());
const wholesalerErrorRecovery =
/* istanbul ignore next */
(cov_1k6y6rrig2().s[83]++, new WholesalerErrorRecovery());

// Health check for circuit breakers
function getCircuitBreakerStatus() {
  /* istanbul ignore next */
  cov_1k6y6rrig2().f[23]++;
  cov_1k6y6rrig2().s[84]++;
  return {
    payment: paymentErrorRecovery.circuitBreaker.getStatus(),
    wholesaler: wholesalerErrorRecovery.circuitBreaker.getStatus()
  };
}
/* istanbul ignore next */
cov_1k6y6rrig2().s[85]++;
module.exports = {
  CircuitBreaker,
  retryWithBackoff,
  PaymentErrorRecovery,
  WholesalerErrorRecovery,
  paymentErrorRecovery,
  wholesalerErrorRecovery,
  getCircuitBreakerStatus
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWs2eTZycmlnMiIsImFjdHVhbENvdmVyYWdlIiwibG9nZ2VyIiwicGF5bWVudExvZ2dlciIsIndob2xlc2FsZXJMb2dnZXIiLCJzIiwicmVxdWlyZSIsIlJFVFJZX0NPTkZJRyIsIm1heFJldHJpZXMiLCJiYXNlRGVsYXkiLCJtYXhEZWxheSIsImJhY2tvZmZGYWN0b3IiLCJDSVJDVUlUX1NUQVRFUyIsIkNMT1NFRCIsIk9QRU4iLCJIQUxGX09QRU4iLCJDaXJjdWl0QnJlYWtlciIsImNvbnN0cnVjdG9yIiwibmFtZSIsIm9wdGlvbnMiLCJiIiwiZiIsImZhaWx1cmVUaHJlc2hvbGQiLCJyZXNldFRpbWVvdXQiLCJtb25pdG9yaW5nUGVyaW9kIiwic3RhdGUiLCJmYWlsdXJlQ291bnQiLCJsYXN0RmFpbHVyZVRpbWUiLCJuZXh0QXR0ZW1wdCIsIkRhdGUiLCJub3ciLCJleGVjdXRlIiwib3BlcmF0aW9uIiwiRXJyb3IiLCJpbmZvIiwicmVzdWx0Iiwib25TdWNjZXNzIiwiZXJyb3IiLCJvbkZhaWx1cmUiLCJ3YXJuIiwiZ2V0U3RhdHVzIiwicmV0cnlXaXRoQmFja29mZiIsImNvbnRleHQiLCJjb25maWciLCJsYXN0RXJyb3IiLCJhdHRlbXB0IiwibWVzc2FnZSIsImF0dGVtcHRzIiwiZGVsYXkiLCJNYXRoIiwibWluIiwicG93IiwibmV4dFJldHJ5SW4iLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJQYXltZW50RXJyb3JSZWNvdmVyeSIsImNpcmN1aXRCcmVha2VyIiwicHJvY2Vzc1BheW1lbnQiLCJwYXltZW50T3BlcmF0aW9uIiwicGF5bWVudERhdGEiLCJvcmRlcklkIiwiaGFuZGxlUGF5bWVudEZhaWx1cmUiLCJhbW91bnQiLCJtZXRob2QiLCJ0aW1lc3RhbXAiLCJ0b0lTT1N0cmluZyIsImluY2x1ZGVzIiwicXVldWVQYXltZW50Rm9yUmV0cnkiLCJub3RpZnlDdXN0b21lck9mUGF5bWVudElzc3VlIiwiZXNjYWxhdGVQYXltZW50RXJyb3IiLCJyZXRyeUF0Iiwic3RhdHVzIiwiaXNzdWVUeXBlIiwiZXNjYWxhdGVkQXQiLCJXaG9sZXNhbGVyRXJyb3JSZWNvdmVyeSIsInNlbmROb3RpZmljYXRpb24iLCJub3RpZmljYXRpb25PcGVyYXRpb24iLCJub3RpZmljYXRpb25EYXRhIiwiaGFuZGxlTm90aWZpY2F0aW9uRmFpbHVyZSIsIndob2xlc2FsZXJJZCIsInF1ZXVlTm90aWZpY2F0aW9uRm9yUmV0cnkiLCJ0cnlBbHRlcm5hdGl2ZUNvbnRhY3RNZXRob2QiLCJlc2NhbGF0ZU5vdGlmaWNhdGlvbkVycm9yIiwicGF5bWVudEVycm9yUmVjb3ZlcnkiLCJ3aG9sZXNhbGVyRXJyb3JSZWNvdmVyeSIsImdldENpcmN1aXRCcmVha2VyU3RhdHVzIiwicGF5bWVudCIsIndob2xlc2FsZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiZXJyb3JSZWNvdmVyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGxvZ2dlciwgcGF5bWVudExvZ2dlciwgd2hvbGVzYWxlckxvZ2dlciB9ID0gcmVxdWlyZSgnLi9sb2dnZXInKTtcblxuLy8gUmV0cnkgY29uZmlndXJhdGlvblxuY29uc3QgUkVUUllfQ09ORklHID0ge1xuICBtYXhSZXRyaWVzOiAzLFxuICBiYXNlRGVsYXk6IDEwMDAsIC8vIDEgc2Vjb25kXG4gIG1heERlbGF5OiAxMDAwMCwgLy8gMTAgc2Vjb25kc1xuICBiYWNrb2ZmRmFjdG9yOiAyXG59O1xuXG4vLyBDaXJjdWl0IGJyZWFrZXIgc3RhdGVzXG5jb25zdCBDSVJDVUlUX1NUQVRFUyA9IHtcbiAgQ0xPU0VEOiAnQ0xPU0VEJyxcbiAgT1BFTjogJ09QRU4nLFxuICBIQUxGX09QRU46ICdIQUxGX09QRU4nXG59O1xuXG4vLyBDaXJjdWl0IGJyZWFrZXIgY2xhc3MgZm9yIGV4dGVybmFsIHNlcnZpY2VzXG5jbGFzcyBDaXJjdWl0QnJlYWtlciB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5mYWlsdXJlVGhyZXNob2xkID0gb3B0aW9ucy5mYWlsdXJlVGhyZXNob2xkIHx8IDU7XG4gICAgdGhpcy5yZXNldFRpbWVvdXQgPSBvcHRpb25zLnJlc2V0VGltZW91dCB8fCA2MDAwMDsgLy8gMSBtaW51dGVcbiAgICB0aGlzLm1vbml0b3JpbmdQZXJpb2QgPSBvcHRpb25zLm1vbml0b3JpbmdQZXJpb2QgfHwgMTAwMDA7IC8vIDEwIHNlY29uZHNcbiAgICBcbiAgICB0aGlzLnN0YXRlID0gQ0lSQ1VJVF9TVEFURVMuQ0xPU0VEO1xuICAgIHRoaXMuZmFpbHVyZUNvdW50ID0gMDtcbiAgICB0aGlzLmxhc3RGYWlsdXJlVGltZSA9IG51bGw7XG4gICAgdGhpcy5uZXh0QXR0ZW1wdCA9IERhdGUubm93KCk7XG4gIH1cblxuICBhc3luYyBleGVjdXRlKG9wZXJhdGlvbikge1xuICAgIGlmICh0aGlzLnN0YXRlID09PSBDSVJDVUlUX1NUQVRFUy5PUEVOKSB7XG4gICAgICBpZiAoRGF0ZS5ub3coKSA8IHRoaXMubmV4dEF0dGVtcHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDaXJjdWl0IGJyZWFrZXIgaXMgT1BFTiBmb3IgJHt0aGlzLm5hbWV9LiBOZXh0IGF0dGVtcHQgaW4gJHt0aGlzLm5leHRBdHRlbXB0IC0gRGF0ZS5ub3coKX1tc2ApO1xuICAgICAgfVxuICAgICAgdGhpcy5zdGF0ZSA9IENJUkNVSVRfU1RBVEVTLkhBTEZfT1BFTjtcbiAgICAgIGxvZ2dlci5pbmZvKGBDaXJjdWl0IGJyZWFrZXIgZm9yICR7dGhpcy5uYW1lfSBpcyBub3cgSEFMRl9PUEVOYCk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG9wZXJhdGlvbigpO1xuICAgICAgdGhpcy5vblN1Y2Nlc3MoKTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRoaXMub25GYWlsdXJlKCk7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cblxuICBvblN1Y2Nlc3MoKSB7XG4gICAgdGhpcy5mYWlsdXJlQ291bnQgPSAwO1xuICAgIGlmICh0aGlzLnN0YXRlID09PSBDSVJDVUlUX1NUQVRFUy5IQUxGX09QRU4pIHtcbiAgICAgIHRoaXMuc3RhdGUgPSBDSVJDVUlUX1NUQVRFUy5DTE9TRUQ7XG4gICAgICBsb2dnZXIuaW5mbyhgQ2lyY3VpdCBicmVha2VyIGZvciAke3RoaXMubmFtZX0gaXMgbm93IENMT1NFRGApO1xuICAgIH1cbiAgfVxuXG4gIG9uRmFpbHVyZSgpIHtcbiAgICB0aGlzLmZhaWx1cmVDb3VudCsrO1xuICAgIHRoaXMubGFzdEZhaWx1cmVUaW1lID0gRGF0ZS5ub3coKTtcblxuICAgIGlmICh0aGlzLmZhaWx1cmVDb3VudCA+PSB0aGlzLmZhaWx1cmVUaHJlc2hvbGQpIHtcbiAgICAgIHRoaXMuc3RhdGUgPSBDSVJDVUlUX1NUQVRFUy5PUEVOO1xuICAgICAgdGhpcy5uZXh0QXR0ZW1wdCA9IERhdGUubm93KCkgKyB0aGlzLnJlc2V0VGltZW91dDtcbiAgICAgIGxvZ2dlci53YXJuKGBDaXJjdWl0IGJyZWFrZXIgZm9yICR7dGhpcy5uYW1lfSBpcyBub3cgT1BFTi4gV2lsbCByZXRyeSBhZnRlciAke3RoaXMucmVzZXRUaW1lb3V0fW1zYCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0U3RhdHVzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICBzdGF0ZTogdGhpcy5zdGF0ZSxcbiAgICAgIGZhaWx1cmVDb3VudDogdGhpcy5mYWlsdXJlQ291bnQsXG4gICAgICBsYXN0RmFpbHVyZVRpbWU6IHRoaXMubGFzdEZhaWx1cmVUaW1lLFxuICAgICAgbmV4dEF0dGVtcHQ6IHRoaXMubmV4dEF0dGVtcHRcbiAgICB9O1xuICB9XG59XG5cbi8vIFJldHJ5IG1lY2hhbmlzbSB3aXRoIGV4cG9uZW50aWFsIGJhY2tvZmZcbmFzeW5jIGZ1bmN0aW9uIHJldHJ5V2l0aEJhY2tvZmYob3BlcmF0aW9uLCBjb250ZXh0ID0gJycsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBjb25maWcgPSB7IC4uLlJFVFJZX0NPTkZJRywgLi4ub3B0aW9ucyB9O1xuICBsZXQgbGFzdEVycm9yO1xuXG4gIGZvciAobGV0IGF0dGVtcHQgPSAxOyBhdHRlbXB0IDw9IGNvbmZpZy5tYXhSZXRyaWVzOyBhdHRlbXB0KyspIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgb3BlcmF0aW9uKCk7XG4gICAgICBpZiAoYXR0ZW1wdCA+IDEpIHtcbiAgICAgICAgbG9nZ2VyLmluZm8oYCR7Y29udGV4dH0gc3VjY2VlZGVkIG9uIGF0dGVtcHQgJHthdHRlbXB0fWApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgbGFzdEVycm9yID0gZXJyb3I7XG4gICAgICBcbiAgICAgIGlmIChhdHRlbXB0ID09PSBjb25maWcubWF4UmV0cmllcykge1xuICAgICAgICBsb2dnZXIuZXJyb3IoYCR7Y29udGV4dH0gZmFpbGVkIGFmdGVyICR7Y29uZmlnLm1heFJldHJpZXN9IGF0dGVtcHRzOmAsIHtcbiAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICBhdHRlbXB0czogYXR0ZW1wdFxuICAgICAgICB9KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRlbGF5ID0gTWF0aC5taW4oXG4gICAgICAgIGNvbmZpZy5iYXNlRGVsYXkgKiBNYXRoLnBvdyhjb25maWcuYmFja29mZkZhY3RvciwgYXR0ZW1wdCAtIDEpLFxuICAgICAgICBjb25maWcubWF4RGVsYXlcbiAgICAgICk7XG5cbiAgICAgIGxvZ2dlci53YXJuKGAke2NvbnRleHR9IGZhaWxlZCBvbiBhdHRlbXB0ICR7YXR0ZW1wdH0sIHJldHJ5aW5nIGluICR7ZGVsYXl9bXM6YCwge1xuICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgYXR0ZW1wdCxcbiAgICAgICAgbmV4dFJldHJ5SW46IGRlbGF5XG4gICAgICB9KTtcblxuICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIGRlbGF5KSk7XG4gICAgfVxuICB9XG5cbiAgdGhyb3cgbGFzdEVycm9yO1xufVxuXG4vLyBQYXltZW50IHNlcnZpY2UgZXJyb3IgcmVjb3ZlcnlcbmNsYXNzIFBheW1lbnRFcnJvclJlY292ZXJ5IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jaXJjdWl0QnJlYWtlciA9IG5ldyBDaXJjdWl0QnJlYWtlcignUGF5bWVudFNlcnZpY2UnLCB7XG4gICAgICBmYWlsdXJlVGhyZXNob2xkOiAzLFxuICAgICAgcmVzZXRUaW1lb3V0OiAzMDAwMCAvLyAzMCBzZWNvbmRzXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBwcm9jZXNzUGF5bWVudChwYXltZW50T3BlcmF0aW9uLCBwYXltZW50RGF0YSkge1xuICAgIHJldHVybiB0aGlzLmNpcmN1aXRCcmVha2VyLmV4ZWN1dGUoYXN5bmMgKCkgPT4ge1xuICAgICAgcmV0dXJuIHJldHJ5V2l0aEJhY2tvZmYoXG4gICAgICAgICgpID0+IHBheW1lbnRPcGVyYXRpb24ocGF5bWVudERhdGEpLFxuICAgICAgICBgUGF5bWVudCBwcm9jZXNzaW5nIGZvciBvcmRlciAke3BheW1lbnREYXRhLm9yZGVySWR9YCxcbiAgICAgICAgeyBtYXhSZXRyaWVzOiAyIH1cbiAgICAgICk7XG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBoYW5kbGVQYXltZW50RmFpbHVyZShlcnJvciwgcGF5bWVudERhdGEpIHtcbiAgICBwYXltZW50TG9nZ2VyLmVycm9yKCdQYXltZW50IHByb2Nlc3NpbmcgZmFpbGVkOicsIHtcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgb3JkZXJJZDogcGF5bWVudERhdGEub3JkZXJJZCxcbiAgICAgIGFtb3VudDogcGF5bWVudERhdGEuYW1vdW50LFxuICAgICAgbWV0aG9kOiBwYXltZW50RGF0YS5tZXRob2QsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH0pO1xuXG4gICAgLy8gSW1wbGVtZW50IGZhbGxiYWNrIHN0cmF0ZWdpZXNcbiAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnbmV0d29yaycpIHx8IGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ3RpbWVvdXQnKSkge1xuICAgICAgLy8gTmV0d29yay1yZWxhdGVkIGVycm9ycyAtIHF1ZXVlIGZvciByZXRyeVxuICAgICAgcmV0dXJuIHRoaXMucXVldWVQYXltZW50Rm9yUmV0cnkocGF5bWVudERhdGEpO1xuICAgIH1cblxuICAgIGlmIChlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCdpbnN1ZmZpY2llbnRfZnVuZHMnKSkge1xuICAgICAgLy8gQ3VzdG9tZXIgaXNzdWUgLSBub3RpZnkgY3VzdG9tZXJcbiAgICAgIHJldHVybiB0aGlzLm5vdGlmeUN1c3RvbWVyT2ZQYXltZW50SXNzdWUocGF5bWVudERhdGEsICdpbnN1ZmZpY2llbnRfZnVuZHMnKTtcbiAgICB9XG5cbiAgICAvLyBVbmtub3duIGVycm9yIC0gZXNjYWxhdGVcbiAgICByZXR1cm4gdGhpcy5lc2NhbGF0ZVBheW1lbnRFcnJvcihlcnJvciwgcGF5bWVudERhdGEpO1xuICB9XG5cbiAgYXN5bmMgcXVldWVQYXltZW50Rm9yUmV0cnkocGF5bWVudERhdGEpIHtcbiAgICBwYXltZW50TG9nZ2VyLmluZm8oJ1F1ZXVlaW5nIHBheW1lbnQgZm9yIHJldHJ5OicsIHtcbiAgICAgIG9yZGVySWQ6IHBheW1lbnREYXRhLm9yZGVySWQsXG4gICAgICByZXRyeUF0OiBuZXcgRGF0ZShEYXRlLm5vdygpICsgMzAwMDAwKS50b0lTT1N0cmluZygpIC8vIDUgbWludXRlc1xuICAgIH0pO1xuICAgIFxuICAgIC8vIEluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgdGhpcyB3b3VsZCB1c2UgYSBqb2IgcXVldWUgbGlrZSBCdWxsIG9yIEFnZW5kYVxuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXM6ICdxdWV1ZWRfZm9yX3JldHJ5JyxcbiAgICAgIHJldHJ5QXQ6IG5ldyBEYXRlKERhdGUubm93KCkgKyAzMDAwMDApXG4gICAgfTtcbiAgfVxuXG4gIGFzeW5jIG5vdGlmeUN1c3RvbWVyT2ZQYXltZW50SXNzdWUocGF5bWVudERhdGEsIGlzc3VlVHlwZSkge1xuICAgIHBheW1lbnRMb2dnZXIuaW5mbygnTm90aWZ5aW5nIGN1c3RvbWVyIG9mIHBheW1lbnQgaXNzdWU6Jywge1xuICAgICAgb3JkZXJJZDogcGF5bWVudERhdGEub3JkZXJJZCxcbiAgICAgIGlzc3VlVHlwZVxuICAgIH0pO1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXM6ICdjdXN0b21lcl9ub3RpZmllZCcsXG4gICAgICBpc3N1ZVR5cGVcbiAgICB9O1xuICB9XG5cbiAgYXN5bmMgZXNjYWxhdGVQYXltZW50RXJyb3IoZXJyb3IsIHBheW1lbnREYXRhKSB7XG4gICAgcGF5bWVudExvZ2dlci5lcnJvcignRXNjYWxhdGluZyBwYXltZW50IGVycm9yOicsIHtcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgb3JkZXJJZDogcGF5bWVudERhdGEub3JkZXJJZCxcbiAgICAgIGVzY2FsYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiAnZXNjYWxhdGVkJyxcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgfTtcbiAgfVxufVxuXG4vLyBXaG9sZXNhbGVyIGNvbW11bmljYXRpb24gZXJyb3IgcmVjb3ZlcnlcbmNsYXNzIFdob2xlc2FsZXJFcnJvclJlY292ZXJ5IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jaXJjdWl0QnJlYWtlciA9IG5ldyBDaXJjdWl0QnJlYWtlcignV2hvbGVzYWxlclNlcnZpY2UnLCB7XG4gICAgICBmYWlsdXJlVGhyZXNob2xkOiA1LFxuICAgICAgcmVzZXRUaW1lb3V0OiA2MDAwMCAvLyAxIG1pbnV0ZVxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgc2VuZE5vdGlmaWNhdGlvbihub3RpZmljYXRpb25PcGVyYXRpb24sIG5vdGlmaWNhdGlvbkRhdGEpIHtcbiAgICByZXR1cm4gdGhpcy5jaXJjdWl0QnJlYWtlci5leGVjdXRlKGFzeW5jICgpID0+IHtcbiAgICAgIHJldHVybiByZXRyeVdpdGhCYWNrb2ZmKFxuICAgICAgICAoKSA9PiBub3RpZmljYXRpb25PcGVyYXRpb24obm90aWZpY2F0aW9uRGF0YSksXG4gICAgICAgIGBXaG9sZXNhbGVyIG5vdGlmaWNhdGlvbiBmb3Igb3JkZXIgJHtub3RpZmljYXRpb25EYXRhLm9yZGVySWR9YCxcbiAgICAgICAgeyBtYXhSZXRyaWVzOiAzIH1cbiAgICAgICk7XG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBoYW5kbGVOb3RpZmljYXRpb25GYWlsdXJlKGVycm9yLCBub3RpZmljYXRpb25EYXRhKSB7XG4gICAgd2hvbGVzYWxlckxvZ2dlci5lcnJvcignV2hvbGVzYWxlciBub3RpZmljYXRpb24gZmFpbGVkOicsIHtcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgb3JkZXJJZDogbm90aWZpY2F0aW9uRGF0YS5vcmRlcklkLFxuICAgICAgd2hvbGVzYWxlcklkOiBub3RpZmljYXRpb25EYXRhLndob2xlc2FsZXJJZCxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSk7XG5cbiAgICAvLyBJbXBsZW1lbnQgZmFsbGJhY2sgc3RyYXRlZ2llc1xuICAgIGlmIChlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCduZXR3b3JrJykgfHwgZXJyb3IubWVzc2FnZS5pbmNsdWRlcygndGltZW91dCcpKSB7XG4gICAgICAvLyBOZXR3b3JrLXJlbGF0ZWQgZXJyb3JzIC0gcXVldWUgZm9yIHJldHJ5XG4gICAgICByZXR1cm4gdGhpcy5xdWV1ZU5vdGlmaWNhdGlvbkZvclJldHJ5KG5vdGlmaWNhdGlvbkRhdGEpO1xuICAgIH1cblxuICAgIGlmIChlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCdpbnZhbGlkX2VtYWlsJykgfHwgZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnYm91bmNlZCcpKSB7XG4gICAgICAvLyBFbWFpbCBkZWxpdmVyeSBpc3N1ZXMgLSB0cnkgYWx0ZXJuYXRpdmUgY29udGFjdCBtZXRob2RcbiAgICAgIHJldHVybiB0aGlzLnRyeUFsdGVybmF0aXZlQ29udGFjdE1ldGhvZChub3RpZmljYXRpb25EYXRhKTtcbiAgICB9XG5cbiAgICAvLyBVbmtub3duIGVycm9yIC0gZXNjYWxhdGVcbiAgICByZXR1cm4gdGhpcy5lc2NhbGF0ZU5vdGlmaWNhdGlvbkVycm9yKGVycm9yLCBub3RpZmljYXRpb25EYXRhKTtcbiAgfVxuXG4gIGFzeW5jIHF1ZXVlTm90aWZpY2F0aW9uRm9yUmV0cnkobm90aWZpY2F0aW9uRGF0YSkge1xuICAgIHdob2xlc2FsZXJMb2dnZXIuaW5mbygnUXVldWVpbmcgbm90aWZpY2F0aW9uIGZvciByZXRyeTonLCB7XG4gICAgICBvcmRlcklkOiBub3RpZmljYXRpb25EYXRhLm9yZGVySWQsXG4gICAgICB3aG9sZXNhbGVySWQ6IG5vdGlmaWNhdGlvbkRhdGEud2hvbGVzYWxlcklkLFxuICAgICAgcmV0cnlBdDogbmV3IERhdGUoRGF0ZS5ub3coKSArIDYwMDAwMCkudG9JU09TdHJpbmcoKSAvLyAxMCBtaW51dGVzXG4gICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogJ3F1ZXVlZF9mb3JfcmV0cnknLFxuICAgICAgcmV0cnlBdDogbmV3IERhdGUoRGF0ZS5ub3coKSArIDYwMDAwMClcbiAgICB9O1xuICB9XG5cbiAgYXN5bmMgdHJ5QWx0ZXJuYXRpdmVDb250YWN0TWV0aG9kKG5vdGlmaWNhdGlvbkRhdGEpIHtcbiAgICB3aG9sZXNhbGVyTG9nZ2VyLmluZm8oJ1RyeWluZyBhbHRlcm5hdGl2ZSBjb250YWN0IG1ldGhvZDonLCB7XG4gICAgICBvcmRlcklkOiBub3RpZmljYXRpb25EYXRhLm9yZGVySWQsXG4gICAgICB3aG9sZXNhbGVySWQ6IG5vdGlmaWNhdGlvbkRhdGEud2hvbGVzYWxlcklkXG4gICAgfSk7XG4gICAgXG4gICAgLy8gSW4gYSByZWFsIGltcGxlbWVudGF0aW9uLCB0aGlzIG1pZ2h0IHRyeSBTTVMsIHdlYmhvb2ssIG9yIHBob25lXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogJ2FsdGVybmF0aXZlX21ldGhvZF9hdHRlbXB0ZWQnLFxuICAgICAgbWV0aG9kOiAnd2ViaG9vaydcbiAgICB9O1xuICB9XG5cbiAgYXN5bmMgZXNjYWxhdGVOb3RpZmljYXRpb25FcnJvcihlcnJvciwgbm90aWZpY2F0aW9uRGF0YSkge1xuICAgIHdob2xlc2FsZXJMb2dnZXIuZXJyb3IoJ0VzY2FsYXRpbmcgbm90aWZpY2F0aW9uIGVycm9yOicsIHtcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgb3JkZXJJZDogbm90aWZpY2F0aW9uRGF0YS5vcmRlcklkLFxuICAgICAgd2hvbGVzYWxlcklkOiBub3RpZmljYXRpb25EYXRhLndob2xlc2FsZXJJZCxcbiAgICAgIGVzY2FsYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiAnZXNjYWxhdGVkJyxcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgfTtcbiAgfVxufVxuXG4vLyBDcmVhdGUgaW5zdGFuY2VzXG5jb25zdCBwYXltZW50RXJyb3JSZWNvdmVyeSA9IG5ldyBQYXltZW50RXJyb3JSZWNvdmVyeSgpO1xuY29uc3Qgd2hvbGVzYWxlckVycm9yUmVjb3ZlcnkgPSBuZXcgV2hvbGVzYWxlckVycm9yUmVjb3ZlcnkoKTtcblxuLy8gSGVhbHRoIGNoZWNrIGZvciBjaXJjdWl0IGJyZWFrZXJzXG5mdW5jdGlvbiBnZXRDaXJjdWl0QnJlYWtlclN0YXR1cygpIHtcbiAgcmV0dXJuIHtcbiAgICBwYXltZW50OiBwYXltZW50RXJyb3JSZWNvdmVyeS5jaXJjdWl0QnJlYWtlci5nZXRTdGF0dXMoKSxcbiAgICB3aG9sZXNhbGVyOiB3aG9sZXNhbGVyRXJyb3JSZWNvdmVyeS5jaXJjdWl0QnJlYWtlci5nZXRTdGF0dXMoKVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQ2lyY3VpdEJyZWFrZXIsXG4gIHJldHJ5V2l0aEJhY2tvZmYsXG4gIFBheW1lbnRFcnJvclJlY292ZXJ5LFxuICBXaG9sZXNhbGVyRXJyb3JSZWNvdmVyeSxcbiAgcGF5bWVudEVycm9yUmVjb3ZlcnksXG4gIHdob2xlc2FsZXJFcnJvclJlY292ZXJ5LFxuICBnZXRDaXJjdWl0QnJlYWtlclN0YXR1c1xufTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFlWTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lB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