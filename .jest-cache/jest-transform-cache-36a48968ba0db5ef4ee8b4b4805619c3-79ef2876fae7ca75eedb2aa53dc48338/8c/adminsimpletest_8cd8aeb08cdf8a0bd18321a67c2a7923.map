{"version":3,"names":["request","require","jwt","User","Product","app","describe","adminToken","regularUserToken","adminUser","regularUser","beforeAll","create","email","password","firstName","lastName","isAdmin","sign","userId","_id","process","env","JWT_SECRET","expiresIn","test","response","get","expect","body","success","toBe","error","code","set","products","toBeDefined","pagination","headers","toContain","post","analytics","metrics","sales","users","toHaveLength","forEach","user","toBeUndefined","put","send","isActive"],"sources":["admin-simple.test.js"],"sourcesContent":["const request = require('supertest');\nconst jwt = require('jsonwebtoken');\nconst User = require('../../models/User');\nconst Product = require('../../models/Product');\n\n// Import server after environment is set up in test/setup.js\nlet app;\n\ndescribe('Admin Routes - Simple Tests', () => {\n  let adminToken;\n  let regularUserToken;\n  let adminUser;\n  let regularUser;\n\n  beforeAll(async () => {\n    // Import app after setup\n    app = require('../../server');\n    \n    // Create admin user\n    adminUser = await User.create({\n      email: 'admin@test.com',\n      password: 'password123',\n      firstName: 'Admin',\n      lastName: 'User',\n      isAdmin: true\n    });\n\n    // Create regular user\n    regularUser = await User.create({\n      email: 'user@test.com',\n      password: 'password123',\n      firstName: 'Regular',\n      lastName: 'User',\n      isAdmin: false\n    });\n\n    // Generate tokens\n    adminToken = jwt.sign(\n      { userId: adminUser._id },\n      process.env.JWT_SECRET,\n      { expiresIn: '1h' }\n    );\n\n    regularUserToken = jwt.sign(\n      { userId: regularUser._id },\n      process.env.JWT_SECRET,\n      { expiresIn: '1h' }\n    );\n  });\n\n  describe('Authentication and Authorization', () => {\n    test('should deny access without token', async () => {\n      const response = await request(app)\n        .get('/api/admin/products')\n        .expect(401);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('NO_TOKEN');\n    });\n\n    test('should deny access for non-admin users', async () => {\n      const response = await request(app)\n        .get('/api/admin/products')\n        .set('Authorization', `Bearer ${regularUserToken}`)\n        .expect(403);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('INSUFFICIENT_PERMISSIONS');\n    });\n\n    test('should allow access for admin users', async () => {\n      const response = await request(app)\n        .get('/api/admin/products')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.products).toBeDefined();\n    });\n  });\n\n  describe('Product Management', () => {\n    test('should get all products with admin data', async () => {\n      const response = await request(app)\n        .get('/api/admin/products')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.products).toBeDefined();\n      expect(response.body.pagination).toBeDefined();\n    });\n\n    test('should export products to CSV', async () => {\n      const response = await request(app)\n        .get('/api/admin/products/export')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .expect(200);\n\n      expect(response.headers['content-type']).toBe('text/csv; charset=utf-8');\n      expect(response.headers['content-disposition']).toContain('attachment');\n    });\n\n    test('should require file for bulk import', async () => {\n      const response = await request(app)\n        .post('/api/admin/products/bulk-import')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .expect(400);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('NO_FILE');\n    });\n  });\n\n  describe('Analytics', () => {\n    test('should get dashboard analytics', async () => {\n      const response = await request(app)\n        .get('/api/admin/analytics/dashboard')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.analytics.metrics).toBeDefined();\n      expect(response.body.analytics.metrics.sales).toBeDefined();\n      expect(response.body.analytics.metrics.products).toBeDefined();\n      expect(response.body.analytics.metrics.users).toBeDefined();\n    });\n  });\n\n  describe('User Management', () => {\n    test('should get all users', async () => {\n      const response = await request(app)\n        .get('/api/admin/users')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.users).toHaveLength(2);\n      expect(response.body.pagination).toBeDefined();\n      \n      // Check that passwords are not included\n      response.body.users.forEach(user => {\n        expect(user.password).toBeUndefined();\n      });\n    });\n\n    test('should update user status', async () => {\n      const response = await request(app)\n        .put(`/api/admin/users/${regularUser._id}/status`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({\n          isActive: false\n        })\n        .expect(200);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.user.isActive).toBe(false);\n    });\n\n    test('should reject invalid user status update', async () => {\n      const response = await request(app)\n        .put(`/api/admin/users/${regularUser._id}/status`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({\n          isActive: 'invalid'\n        })\n        .expect(400);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('VALIDATION_ERROR');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}