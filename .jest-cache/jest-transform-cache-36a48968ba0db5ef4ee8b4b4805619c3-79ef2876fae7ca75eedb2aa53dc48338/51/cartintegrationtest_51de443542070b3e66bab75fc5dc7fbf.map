{"version":3,"names":["request","require","mongoose","app","Product","User","Cart","describe","afterAll","beforeEach","deleteMany","testProduct","agent","csrfToken","sessionId","create","name","slug","description","shortDescription","price","category","isActive","stock","wholesaler","email","productCode","cost","it","csrfResponse","get","expect","body","success","toBe","toBeTruthy","addResponse","post","set","send","productId","_id","toString","quantity","message","data","cart","items","toHaveLength","response","error","code","cartResponse","testUser","password","firstName","lastName","isVerified","loginResponse","updatedUser","findById","promises","i","push","results","Promise","all","forEach","res","status"],"sources":["cart-integration.test.js"],"sourcesContent":["/**\n * @jest-environment node\n */\n\nconst request = require('supertest');\nconst mongoose = require('mongoose');\nconst app = require('../server');\nconst Product = require('../models/Product');\nconst User = require('../models/User');\nconst Cart = require('../models/Cart');\n\ndescribe('Cart Integration Tests - Docker Environment', () => {\n  // Use existing test connection from test/setup.js\n  \n  afterAll(async () => {\n    // Cleanup is handled by global test setup\n  });\n\n  beforeEach(async () => {\n    // Clear all data\n    await Product.deleteMany({});\n    await User.deleteMany({});\n    await Cart.deleteMany({});\n  });\n\n  describe('Add to Cart - Docker Environment Simulation', () => {\n    let testProduct;\n    let agent;\n    let csrfToken;\n    let sessionId;\n\n    beforeEach(async () => {\n      // Create test product\n      testProduct = await Product.create({\n        name: 'Test Crystal',\n        slug: 'test-crystal',\n        description: 'A test crystal',\n        shortDescription: 'Test crystal',\n        price: 29.99,\n        category: 'crystals',\n        isActive: true,\n        stock: 10,\n        wholesaler: {\n          name: 'Test Wholesaler',\n          email: 'test@wholesaler.com',\n          productCode: 'TEST-001',\n          cost: 15.00\n        }\n      });\n\n      // Create agent to maintain session/cookies\n      agent = request.agent(app);\n    });\n\n    it('should handle add to cart with CSRF token correctly', async () => {\n      // Step 1: Get CSRF token (simulating page load)\n      const csrfResponse = await agent\n        .get('/api/csrf-token')\n        .expect(200);\n      \n      expect(csrfResponse.body.success).toBe(true);\n      expect(csrfResponse.body.csrfToken).toBeTruthy();\n      csrfToken = csrfResponse.body.csrfToken;\n\n      // Step 2: Add to cart with CSRF token\n      const addResponse = await agent\n        .post('/api/cart/add')\n        .set('x-csrf-token', csrfToken)\n        .send({ \n          productId: testProduct._id.toString(), \n          quantity: 1 \n        })\n        .expect(200);\n\n      expect(addResponse.body.success).toBe(true);\n      expect(addResponse.body.message).toBe('Item added to cart');\n      expect(addResponse.body.data.cart.items).toHaveLength(1);\n      expect(addResponse.body.data.cart.items[0].quantity).toBe(1);\n    });\n\n    it('should reject add to cart without CSRF token', async () => {\n      // Try to add without getting CSRF token first\n      const response = await agent\n        .post('/api/cart/add')\n        .send({ \n          productId: testProduct._id.toString(), \n          quantity: 1 \n        })\n        .expect(403);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('CSRF_TOKEN_MISMATCH');\n    });\n\n    it('should handle guest session correctly in Docker environment', async () => {\n      // Step 1: Get CSRF token to establish session\n      const csrfResponse = await agent\n        .get('/api/csrf-token')\n        .expect(200);\n      \n      csrfToken = csrfResponse.body.csrfToken;\n\n      // Step 2: Add to cart as guest\n      const addResponse = await agent\n        .post('/api/cart/add')\n        .set('x-csrf-token', csrfToken)\n        .set('x-guest-session-id', 'guest_123_test')\n        .send({ \n          productId: testProduct._id.toString(), \n          quantity: 2 \n        })\n        .expect(200);\n\n      expect(addResponse.body.success).toBe(true);\n\n      // Step 3: Fetch cart to verify persistence\n      const cartResponse = await agent\n        .get('/api/cart')\n        .set('x-guest-session-id', 'guest_123_test')\n        .expect(200);\n\n      expect(cartResponse.body.success).toBe(true);\n      expect(cartResponse.body.data.cart.items).toHaveLength(1);\n      expect(cartResponse.body.data.cart.items[0].quantity).toBe(2);\n    });\n\n    it('should handle authenticated user add to cart', async () => {\n      // Create test user\n      const testUser = await User.create({\n        email: 'test@example.com',\n        password: 'Password123!',\n        firstName: 'Test',\n        lastName: 'User',\n        isVerified: true\n      });\n\n      // Login to get JWT cookie\n      const loginResponse = await agent\n        .post('/api/auth/login')\n        .send({\n          email: 'test@example.com',\n          password: 'Password123!'\n        })\n        .expect(200);\n\n      expect(loginResponse.body.success).toBe(true);\n\n      // Get CSRF token after login\n      const csrfResponse = await agent\n        .get('/api/csrf-token')\n        .expect(200);\n      \n      csrfToken = csrfResponse.body.csrfToken;\n\n      // Add to cart as authenticated user\n      const addResponse = await agent\n        .post('/api/cart/add')\n        .set('x-csrf-token', csrfToken)\n        .send({ \n          productId: testProduct._id.toString(), \n          quantity: 3 \n        })\n        .expect(200);\n\n      expect(addResponse.body.success).toBe(true);\n      expect(addResponse.body.data.cart.items).toHaveLength(1);\n      expect(addResponse.body.data.cart.items[0].quantity).toBe(3);\n\n      // Verify cart is saved to user\n      const updatedUser = await User.findById(testUser._id);\n      expect(updatedUser.cart.items).toHaveLength(1);\n      expect(updatedUser.cart.items[0].quantity).toBe(3);\n    });\n\n    it('should handle concurrent cart operations', async () => {\n      // Get CSRF token\n      const csrfResponse = await agent\n        .get('/api/csrf-token')\n        .expect(200);\n      \n      csrfToken = csrfResponse.body.csrfToken;\n\n      // Simulate concurrent add to cart operations\n      const promises = [];\n      for (let i = 0; i < 5; i++) {\n        promises.push(\n          agent\n            .post('/api/cart/add')\n            .set('x-csrf-token', csrfToken)\n            .set('x-guest-session-id', 'guest_concurrent_test')\n            .send({ \n              productId: testProduct._id.toString(), \n              quantity: 1 \n            })\n        );\n      }\n\n      const results = await Promise.all(promises);\n      \n      // All should succeed\n      results.forEach(res => {\n        expect(res.status).toBe(200);\n        expect(res.body.success).toBe(true);\n      });\n\n      // Final cart should have quantity 5\n      const cartResponse = await agent\n        .get('/api/cart')\n        .set('x-guest-session-id', 'guest_concurrent_test')\n        .expect(200);\n\n      expect(cartResponse.body.data.cart.items).toHaveLength(1);\n      expect(cartResponse.body.data.cart.items[0].quantity).toBe(5);\n    });\n  });\n});"],"mappings":"AAAA;AACA;AACA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,GAAG,GAAGF,OAAO,CAAC,WAAW,CAAC;AAChC,MAAMG,OAAO,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAC5C,MAAMI,IAAI,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAMK,IAAI,GAAGL,OAAO,CAAC,gBAAgB,CAAC;AAEtCM,QAAQ,CAAC,6CAA6C,EAAE,MAAM;EAC5D;;EAEAC,QAAQ,CAAC,YAAY;IACnB;EAAA,CACD,CAAC;EAEFC,UAAU,CAAC,YAAY;IACrB;IACA,MAAML,OAAO,CAACM,UAAU,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAML,IAAI,CAACK,UAAU,CAAC,CAAC,CAAC,CAAC;IACzB,MAAMJ,IAAI,CAACI,UAAU,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC;EAEFH,QAAQ,CAAC,6CAA6C,EAAE,MAAM;IAC5D,IAAII,WAAW;IACf,IAAIC,KAAK;IACT,IAAIC,SAAS;IACb,IAAIC,SAAS;IAEbL,UAAU,CAAC,YAAY;MACrB;MACAE,WAAW,GAAG,MAAMP,OAAO,CAACW,MAAM,CAAC;QACjCC,IAAI,EAAE,cAAc;QACpBC,IAAI,EAAE,cAAc;QACpBC,WAAW,EAAE,gBAAgB;QAC7BC,gBAAgB,EAAE,cAAc;QAChCC,KAAK,EAAE,KAAK;QACZC,QAAQ,EAAE,UAAU;QACpBC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE;UACVR,IAAI,EAAE,iBAAiB;UACvBS,KAAK,EAAE,qBAAqB;UAC5BC,WAAW,EAAE,UAAU;UACvBC,IAAI,EAAE;QACR;MACF,CAAC,CAAC;;MAEF;MACAf,KAAK,GAAGZ,OAAO,CAACY,KAAK,CAACT,GAAG,CAAC;IAC5B,CAAC,CAAC;IAEFyB,EAAE,CAAC,qDAAqD,EAAE,YAAY;MACpE;MACA,MAAMC,YAAY,GAAG,MAAMjB,KAAK,CAC7BkB,GAAG,CAAC,iBAAiB,CAAC,CACtBC,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACF,YAAY,CAACG,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MAC5CH,MAAM,CAACF,YAAY,CAACG,IAAI,CAACnB,SAAS,CAAC,CAACsB,UAAU,CAAC,CAAC;MAChDtB,SAAS,GAAGgB,YAAY,CAACG,IAAI,CAACnB,SAAS;;MAEvC;MACA,MAAMuB,WAAW,GAAG,MAAMxB,KAAK,CAC5ByB,IAAI,CAAC,eAAe,CAAC,CACrBC,GAAG,CAAC,cAAc,EAAEzB,SAAS,CAAC,CAC9B0B,IAAI,CAAC;QACJC,SAAS,EAAE7B,WAAW,CAAC8B,GAAG,CAACC,QAAQ,CAAC,CAAC;QACrCC,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDZ,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACK,WAAW,CAACJ,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MAC3CH,MAAM,CAACK,WAAW,CAACJ,IAAI,CAACY,OAAO,CAAC,CAACV,IAAI,CAAC,oBAAoB,CAAC;MAC3DH,MAAM,CAACK,WAAW,CAACJ,IAAI,CAACa,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MACxDjB,MAAM,CAACK,WAAW,CAACJ,IAAI,CAACa,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEFN,EAAE,CAAC,8CAA8C,EAAE,YAAY;MAC7D;MACA,MAAMqB,QAAQ,GAAG,MAAMrC,KAAK,CACzByB,IAAI,CAAC,eAAe,CAAC,CACrBE,IAAI,CAAC;QACJC,SAAS,EAAE7B,WAAW,CAAC8B,GAAG,CAACC,QAAQ,CAAC,CAAC;QACrCC,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDZ,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACkB,QAAQ,CAACjB,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;MACzCH,MAAM,CAACkB,QAAQ,CAACjB,IAAI,CAACkB,KAAK,CAACC,IAAI,CAAC,CAACjB,IAAI,CAAC,qBAAqB,CAAC;IAC9D,CAAC,CAAC;IAEFN,EAAE,CAAC,6DAA6D,EAAE,YAAY;MAC5E;MACA,MAAMC,YAAY,GAAG,MAAMjB,KAAK,CAC7BkB,GAAG,CAAC,iBAAiB,CAAC,CACtBC,MAAM,CAAC,GAAG,CAAC;MAEdlB,SAAS,GAAGgB,YAAY,CAACG,IAAI,CAACnB,SAAS;;MAEvC;MACA,MAAMuB,WAAW,GAAG,MAAMxB,KAAK,CAC5ByB,IAAI,CAAC,eAAe,CAAC,CACrBC,GAAG,CAAC,cAAc,EAAEzB,SAAS,CAAC,CAC9ByB,GAAG,CAAC,oBAAoB,EAAE,gBAAgB,CAAC,CAC3CC,IAAI,CAAC;QACJC,SAAS,EAAE7B,WAAW,CAAC8B,GAAG,CAACC,QAAQ,CAAC,CAAC;QACrCC,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDZ,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACK,WAAW,CAACJ,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;;MAE3C;MACA,MAAMkB,YAAY,GAAG,MAAMxC,KAAK,CAC7BkB,GAAG,CAAC,WAAW,CAAC,CAChBQ,GAAG,CAAC,oBAAoB,EAAE,gBAAgB,CAAC,CAC3CP,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACqB,YAAY,CAACpB,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MAC5CH,MAAM,CAACqB,YAAY,CAACpB,IAAI,CAACa,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MACzDjB,MAAM,CAACqB,YAAY,CAACpB,IAAI,CAACa,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC;IAEFN,EAAE,CAAC,8CAA8C,EAAE,YAAY;MAC7D;MACA,MAAMyB,QAAQ,GAAG,MAAMhD,IAAI,CAACU,MAAM,CAAC;QACjCU,KAAK,EAAE,kBAAkB;QACzB6B,QAAQ,EAAE,cAAc;QACxBC,SAAS,EAAE,MAAM;QACjBC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE;MACd,CAAC,CAAC;;MAEF;MACA,MAAMC,aAAa,GAAG,MAAM9C,KAAK,CAC9ByB,IAAI,CAAC,iBAAiB,CAAC,CACvBE,IAAI,CAAC;QACJd,KAAK,EAAE,kBAAkB;QACzB6B,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDvB,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAAC2B,aAAa,CAAC1B,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;;MAE7C;MACA,MAAML,YAAY,GAAG,MAAMjB,KAAK,CAC7BkB,GAAG,CAAC,iBAAiB,CAAC,CACtBC,MAAM,CAAC,GAAG,CAAC;MAEdlB,SAAS,GAAGgB,YAAY,CAACG,IAAI,CAACnB,SAAS;;MAEvC;MACA,MAAMuB,WAAW,GAAG,MAAMxB,KAAK,CAC5ByB,IAAI,CAAC,eAAe,CAAC,CACrBC,GAAG,CAAC,cAAc,EAAEzB,SAAS,CAAC,CAC9B0B,IAAI,CAAC;QACJC,SAAS,EAAE7B,WAAW,CAAC8B,GAAG,CAACC,QAAQ,CAAC,CAAC;QACrCC,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDZ,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACK,WAAW,CAACJ,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MAC3CH,MAAM,CAACK,WAAW,CAACJ,IAAI,CAACa,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MACxDjB,MAAM,CAACK,WAAW,CAACJ,IAAI,CAACa,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC;;MAE5D;MACA,MAAMyB,WAAW,GAAG,MAAMtD,IAAI,CAACuD,QAAQ,CAACP,QAAQ,CAACZ,GAAG,CAAC;MACrDV,MAAM,CAAC4B,WAAW,CAACb,IAAI,CAACC,KAAK,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MAC9CjB,MAAM,CAAC4B,WAAW,CAACb,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC;IAEFN,EAAE,CAAC,0CAA0C,EAAE,YAAY;MACzD;MACA,MAAMC,YAAY,GAAG,MAAMjB,KAAK,CAC7BkB,GAAG,CAAC,iBAAiB,CAAC,CACtBC,MAAM,CAAC,GAAG,CAAC;MAEdlB,SAAS,GAAGgB,YAAY,CAACG,IAAI,CAACnB,SAAS;;MAEvC;MACA,MAAMgD,QAAQ,GAAG,EAAE;MACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1BD,QAAQ,CAACE,IAAI,CACXnD,KAAK,CACFyB,IAAI,CAAC,eAAe,CAAC,CACrBC,GAAG,CAAC,cAAc,EAAEzB,SAAS,CAAC,CAC9ByB,GAAG,CAAC,oBAAoB,EAAE,uBAAuB,CAAC,CAClDC,IAAI,CAAC;UACJC,SAAS,EAAE7B,WAAW,CAAC8B,GAAG,CAACC,QAAQ,CAAC,CAAC;UACrCC,QAAQ,EAAE;QACZ,CAAC,CACL,CAAC;MACH;MAEA,MAAMqB,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;;MAE3C;MACAG,OAAO,CAACG,OAAO,CAACC,GAAG,IAAI;QACrBrC,MAAM,CAACqC,GAAG,CAACC,MAAM,CAAC,CAACnC,IAAI,CAAC,GAAG,CAAC;QAC5BH,MAAM,CAACqC,GAAG,CAACpC,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MACrC,CAAC,CAAC;;MAEF;MACA,MAAMkB,YAAY,GAAG,MAAMxC,KAAK,CAC7BkB,GAAG,CAAC,WAAW,CAAC,CAChBQ,GAAG,CAAC,oBAAoB,EAAE,uBAAuB,CAAC,CAClDP,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACqB,YAAY,CAACpB,IAAI,CAACa,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;MACzDjB,MAAM,CAACqB,YAAY,CAACpB,IAAI,CAACa,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}