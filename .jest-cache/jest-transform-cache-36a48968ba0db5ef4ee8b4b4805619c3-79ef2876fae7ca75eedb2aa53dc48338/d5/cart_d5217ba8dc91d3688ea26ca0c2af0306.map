{"version":3,"names":["express","require","router","Router","Product","authenticateToken","requireAuth","initializeCart","req","res","next","session","cart","get","user","populatedCart","Promise","all","map","item","product","findById","productId","select","isActive","_id","toPublicJSON","quantity","price","subtotal","error","console","validCart","filter","reduce","sum","itemCount","json","success","data","items","Math","round","total","isEmpty","length","status","code","message","post","body","existingItemIndex","findIndex","toString","newQuantity","parseInt","push","resolve","reject","save","err","totalPrice","totalItems","sessionError","put","itemIndex","splice","cartItemCount","delete","module","exports"],"sources":["cart.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Product = require('../models/Product');\nconst { authenticateToken, requireAuth } = require('../middleware/auth');\n\n// Middleware to initialize cart in session\nconst initializeCart = (req, res, next) => {\n  if (!req.session.cart) {\n    req.session.cart = [];\n  }\n  next();\n};\n\n// Get cart contents\nrouter.get('/', requireAuth, initializeCart, async (req, res) => {\n  try {\n    let cart = [];\n    \n    if (req.user) {\n      // For authenticated users, get cart from user session or database\n      cart = req.session.cart || [];\n    } else {\n      // For guests, get cart from session\n      cart = req.session.cart || [];\n    }\n    \n    // Populate product details for cart items\n    const populatedCart = await Promise.all(\n      cart.map(async (item) => {\n        try {\n          const product = await Product.findById(item.productId).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Remove inactive products\n          }\n          \n          return {\n            _id: item._id || item.productId,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: product.price,\n            subtotal: product.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n    \n    // Filter out null items (inactive products)\n    const validCart = populatedCart.filter(item => item !== null);\n    \n    // Update session cart to remove invalid items\n    req.session.cart = validCart.map(item => ({\n      productId: item.product._id,\n      quantity: item.quantity\n    }));\n    \n    // Calculate totals\n    const subtotal = validCart.reduce((sum, item) => sum + item.subtotal, 0);\n    const itemCount = validCart.reduce((sum, item) => sum + item.quantity, 0);\n    \n    res.json({\n      success: true,\n      data: {\n        cart: {\n          items: validCart,\n          itemCount: itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCart.length === 0\n        }\n      }\n    });\n    \n  } catch (error) {\n    console.error('Error getting cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_ERROR',\n        message: 'Failed to retrieve cart contents'\n      }\n    });\n  }\n});\n\n// Add item to cart\nrouter.post('/add', requireAuth, initializeCart, async (req, res) => {\n  try {\n    const { productId, quantity = 1 } = req.body;\n    \n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n    \n    if (quantity < 1 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 1 and 99'\n        }\n      });\n    }\n    \n    // Verify product exists and is active\n    const product = await Product.findById(productId);\n    if (!product || !product.isActive) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found or unavailable'\n        }\n      });\n    }\n    \n    // Check if item already exists in cart\n    const existingItemIndex = req.session.cart.findIndex(\n      item => item.productId.toString() === productId\n    );\n    \n    if (existingItemIndex > -1) {\n      // Update quantity of existing item\n      const newQuantity = req.session.cart[existingItemIndex].quantity + parseInt(quantity);\n      if (newQuantity > 99) {\n        return res.status(400).json({\n          success: false,\n          error: {\n            code: 'MAX_QUANTITY_EXCEEDED',\n            message: 'Maximum quantity per item is 99'\n          }\n        });\n      }\n      req.session.cart[existingItemIndex].quantity = newQuantity;\n    } else {\n      // Add new item to cart\n      req.session.cart.push({\n        productId: productId,\n        quantity: parseInt(quantity)\n      });\n    }\n    \n    // Save session and get updated cart\n    try {\n      await new Promise((resolve, reject) => {\n        req.session.save((err) => {\n          if (err) reject(err);\n          else resolve();\n        });\n      });\n      \n      // Get updated cart with populated products\n      const populatedCart = await Promise.all(\n        req.session.cart.map(async (item) => {\n          try {\n            const product = await Product.findById(item.productId).select('-wholesaler');\n            if (!product || !product.isActive) {\n              return null;\n            }\n            \n            return {\n              _id: item.productId,\n              product: product.toPublicJSON(),\n              quantity: item.quantity,\n              price: product.price,\n              subtotal: product.price * item.quantity\n            };\n          } catch (error) {\n            console.error('Error populating cart item:', error);\n            return null;\n          }\n        })\n      );\n      \n      const validCart = populatedCart.filter(item => item !== null);\n      const totalPrice = validCart.reduce((sum, item) => sum + item.subtotal, 0);\n      const totalItems = validCart.reduce((sum, item) => sum + item.quantity, 0);\n      \n      res.json({\n        success: true,\n        message: 'Item added to cart',\n        data: {\n          cart: {\n            items: validCart,\n            itemCount: totalItems,\n            subtotal: Math.round(totalPrice * 100) / 100,\n            total: Math.round(totalPrice * 100) / 100\n          }\n        }\n      });\n    } catch (sessionError) {\n      console.error('Session save error:', sessionError);\n      return res.status(500).json({\n        success: false,\n        error: {\n          code: 'SESSION_ERROR',\n          message: 'Failed to save cart'\n        }\n      });\n    }\n    \n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_ADD_ERROR',\n        message: 'Failed to add item to cart'\n      }\n    });\n  }\n});\n\n// Update cart item quantity\nrouter.put('/update', initializeCart, async (req, res) => {\n  try {\n    const { productId, quantity } = req.body;\n    \n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n    \n    if (quantity < 0 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 0 and 99'\n        }\n      });\n    }\n    \n    const itemIndex = req.session.cart.findIndex(\n      item => item.productId.toString() === productId\n    );\n    \n    if (itemIndex === -1) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'ITEM_NOT_FOUND',\n          message: 'Item not found in cart'\n        }\n      });\n    }\n    \n    if (quantity === 0) {\n      // Remove item if quantity is 0\n      req.session.cart.splice(itemIndex, 1);\n    } else {\n      // Update quantity\n      req.session.cart[itemIndex].quantity = parseInt(quantity);\n    }\n    \n    req.session.save((err) => {\n      if (err) {\n        console.error('Session save error:', err);\n        return res.status(500).json({\n          success: false,\n          error: {\n            code: 'SESSION_ERROR',\n            message: 'Failed to update cart'\n          }\n        });\n      }\n      \n      res.json({\n        success: true,\n        message: quantity === 0 ? 'Item removed from cart' : 'Cart updated',\n        cartItemCount: req.session.cart.reduce((sum, item) => sum + item.quantity, 0)\n      });\n    });\n    \n  } catch (error) {\n    console.error('Error updating cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_UPDATE_ERROR',\n        message: 'Failed to update cart'\n      }\n    });\n  }\n});\n\n// Remove item from cart\nrouter.delete('/remove', initializeCart, async (req, res) => {\n  try {\n    const { productId } = req.body;\n    \n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n    \n    const itemIndex = req.session.cart.findIndex(\n      item => item.productId.toString() === productId\n    );\n    \n    if (itemIndex === -1) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'ITEM_NOT_FOUND',\n          message: 'Item not found in cart'\n        }\n      });\n    }\n    \n    req.session.cart.splice(itemIndex, 1);\n    \n    req.session.save((err) => {\n      if (err) {\n        console.error('Session save error:', err);\n        return res.status(500).json({\n          success: false,\n          error: {\n            code: 'SESSION_ERROR',\n            message: 'Failed to remove item from cart'\n          }\n        });\n      }\n      \n      res.json({\n        success: true,\n        message: 'Item removed from cart',\n        cartItemCount: req.session.cart.reduce((sum, item) => sum + item.quantity, 0)\n      });\n    });\n    \n  } catch (error) {\n    console.error('Error removing from cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_REMOVE_ERROR',\n        message: 'Failed to remove item from cart'\n      }\n    });\n  }\n});\n\n// Clear entire cart\nrouter.delete('/clear', initializeCart, async (req, res) => {\n  try {\n    req.session.cart = [];\n    \n    req.session.save((err) => {\n      if (err) {\n        console.error('Session save error:', err);\n        return res.status(500).json({\n          success: false,\n          error: {\n            code: 'SESSION_ERROR',\n            message: 'Failed to clear cart'\n          }\n        });\n      }\n      \n      res.json({\n        success: true,\n        message: 'Cart cleared',\n        cartItemCount: 0\n      });\n    });\n    \n  } catch (error) {\n    console.error('Error clearing cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_CLEAR_ERROR',\n        message: 'Failed to clear cart'\n      }\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}