a2c5c9a7880e26ff4cd6cec4c0f5c5e0
/* istanbul ignore next */
function cov_2ne65jkt7n() {
  var path = "/Users/oliver/Projects/boutique/routes/wholesalers.js";
  var hash = "0c310a8f0c5436fc3ad24cff8ff51153fb9df27c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/oliver/Projects/boutique/routes/wholesalers.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 31
        }
      },
      "2": {
        start: {
          line: 3,
          column: 67
        },
        end: {
          line: 3,
          column: 116
        }
      },
      "3": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 40
        }
      },
      "4": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "5": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "6": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 51,
          column: 3
        }
      },
      "7": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "8": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 54
        }
      },
      "9": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "10": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "11": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "12": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 49,
          column: 7
        }
      },
      "13": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 81,
          column: 3
        }
      },
      "14": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 80,
          column: 3
        }
      },
      "15": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 34
        }
      },
      "16": {
        start: {
          line: 58,
          column: 19
        },
        end: {
          line: 58,
          column: 59
        }
      },
      "17": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "18": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "19": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "20": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "21": {
        start: {
          line: 85,
          column: 0
        },
        end: {
          line: 123,
          column: 3
        }
      },
      "22": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 122,
          column: 3
        }
      },
      "23": {
        start: {
          line: 87,
          column: 26
        },
        end: {
          line: 93,
          column: 77
        }
      },
      "24": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 108,
          column: 7
        }
      },
      "25": {
        start: {
          line: 95,
          column: 48
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "26": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 74
        }
      },
      "27": {
        start: {
          line: 103,
          column: 22
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "28": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "29": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "30": {
        start: {
          line: 127,
          column: 0
        },
        end: {
          line: 160,
          column: 3
        }
      },
      "31": {
        start: {
          line: 128,
          column: 2
        },
        end: {
          line: 159,
          column: 3
        }
      },
      "32": {
        start: {
          line: 129,
          column: 24
        },
        end: {
          line: 129,
          column: 34
        }
      },
      "33": {
        start: {
          line: 130,
          column: 18
        },
        end: {
          line: 130,
          column: 86
        }
      },
      "34": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "35": {
        start: {
          line: 133,
          column: 6
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "36": {
        start: {
          line: 139,
          column: 29
        },
        end: {
          line: 145,
          column: 7
        }
      },
      "37": {
        start: {
          line: 139,
          column: 54
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "38": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 153,
          column: 7
        }
      },
      "39": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 158,
          column: 7
        }
      },
      "40": {
        start: {
          line: 162,
          column: 0
        },
        end: {
          line: 162,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 8,
            column: 21
          }
        },
        loc: {
          start: {
            line: 8,
            column: 34
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 38
          },
          end: {
            line: 24,
            column: 39
          }
        },
        loc: {
          start: {
            line: 24,
            column: 58
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 55,
            column: 33
          }
        },
        loc: {
          start: {
            line: 55,
            column: 52
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 55
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 85,
            column: 23
          },
          end: {
            line: 85,
            column: 24
          }
        },
        loc: {
          start: {
            line: 85,
            column: 43
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 85
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 95,
            column: 38
          },
          end: {
            line: 95,
            column: 39
          }
        },
        loc: {
          start: {
            line: 95,
            column: 48
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 95
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        },
        loc: {
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 74
          }
        },
        line: 102
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 103,
            column: 13
          },
          end: {
            line: 103,
            column: 14
          }
        },
        loc: {
          start: {
            line: 103,
            column: 22
          },
          end: {
            line: 107,
            column: 9
          }
        },
        line: 103
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 127,
            column: 31
          },
          end: {
            line: 127,
            column: 32
          }
        },
        loc: {
          start: {
            line: 127,
            column: 51
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 127
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 139,
            column: 45
          },
          end: {
            line: 139,
            column: 46
          }
        },
        loc: {
          start: {
            line: 139,
            column: 54
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 139
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: 39,
            column: 11
          },
          end: {
            line: 44,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 43
          }
        }, {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 34,
            column: 48
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 39
          }
        }, {
          start: {
            line: 35,
            column: 43
          },
          end: {
            line: 35,
            column: 44
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }, {
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 39
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: 69,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }],
        line: 60
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 17
          },
          end: {
            line: 63,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 17
          },
          end: {
            line: 63,
            column: 31
          }
        }, {
          start: {
            line: 63,
            column: 35
          },
          end: {
            line: 63,
            column: 66
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 66,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 66,
            column: 33
          }
        }, {
          start: {
            line: 66,
            column: 37
          },
          end: {
            line: 66,
            column: 39
          }
        }],
        line: 66
      },
      "7": {
        loc: {
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 49
          }
        }, {
          start: {
            line: 102,
            column: 53
          },
          end: {
            line: 102,
            column: 74
          }
        }],
        line: 102
      },
      "8": {
        loc: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c310a8f0c5436fc3ad24cff8ff51153fb9df27c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ne65jkt7n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ne65jkt7n();
const express =
/* istanbul ignore next */
(cov_2ne65jkt7n().s[0]++, require('express'));
const router =
/* istanbul ignore next */
(cov_2ne65jkt7n().s[1]++, express.Router());
const {
  processPendingNotifications,
  processOrderNotifications
} =
/* istanbul ignore next */
(cov_2ne65jkt7n().s[2]++, require('../utils/wholesalerNotificationService'));
const Order =
/* istanbul ignore next */
(cov_2ne65jkt7n().s[3]++, require('../models/Order'));

// GET /api/wholesalers/test
// Test endpoint to verify the system is working
/* istanbul ignore next */
cov_2ne65jkt7n().s[4]++;
router.get('/test', (req, res) => {
  /* istanbul ignore next */
  cov_2ne65jkt7n().f[0]++;
  cov_2ne65jkt7n().s[5]++;
  res.json({
    success: true,
    message: 'Wholesaler notification system is active',
    timestamp: new Date().toISOString(),
    endpoints: ['POST /api/wholesalers/process-notifications - Process all pending notifications', 'POST /api/wholesalers/notify/:orderId - Process notifications for specific order', 'GET /api/wholesalers/pending - Get orders with pending notifications', 'GET /api/wholesalers/status/:orderId - Get notification status for order']
  });
});

// POST /api/wholesalers/process-notifications
// Process all pending wholesaler notifications
/* istanbul ignore next */
cov_2ne65jkt7n().s[6]++;
router.post('/process-notifications', async (req, res) => {
  /* istanbul ignore next */
  cov_2ne65jkt7n().f[1]++;
  cov_2ne65jkt7n().s[7]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_2ne65jkt7n().s[8]++, await processPendingNotifications());
    /* istanbul ignore next */
    cov_2ne65jkt7n().s[9]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_2ne65jkt7n().b[0][0]++;
      cov_2ne65jkt7n().s[10]++;
      res.json({
        success: true,
        message: 'Notification processing completed',
        data: {
          processed: result.processed,
          successCount:
          /* istanbul ignore next */
          (cov_2ne65jkt7n().b[1][0]++, result.successCount) ||
          /* istanbul ignore next */
          (cov_2ne65jkt7n().b[1][1]++, 0),
          errorCount:
          /* istanbul ignore next */
          (cov_2ne65jkt7n().b[2][0]++, result.errorCount) ||
          /* istanbul ignore next */
          (cov_2ne65jkt7n().b[2][1]++, 0),
          results:
          /* istanbul ignore next */
          (cov_2ne65jkt7n().b[3][0]++, result.results) ||
          /* istanbul ignore next */
          (cov_2ne65jkt7n().b[3][1]++, [])
        }
      });
    } else {
      /* istanbul ignore next */
      cov_2ne65jkt7n().b[0][1]++;
      cov_2ne65jkt7n().s[11]++;
      res.status(500).json({
        success: false,
        error: result.error
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2ne65jkt7n().s[12]++;
    res.status(500).json({
      success: false,
      error: error.message
    });
  }
});

// POST /api/wholesalers/notify/:orderId
// Process notifications for a specific order
/* istanbul ignore next */
cov_2ne65jkt7n().s[13]++;
router.post('/notify/:orderId', async (req, res) => {
  /* istanbul ignore next */
  cov_2ne65jkt7n().f[2]++;
  cov_2ne65jkt7n().s[14]++;
  try {
    const {
      orderId
    } =
    /* istanbul ignore next */
    (cov_2ne65jkt7n().s[15]++, req.params);
    const result =
    /* istanbul ignore next */
    (cov_2ne65jkt7n().s[16]++, await processOrderNotifications(orderId));
    /* istanbul ignore next */
    cov_2ne65jkt7n().s[17]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_2ne65jkt7n().b[4][0]++;
      cov_2ne65jkt7n().s[18]++;
      res.json({
        success: true,
        message:
        /* istanbul ignore next */
        (cov_2ne65jkt7n().b[5][0]++, result.message) ||
        /* istanbul ignore next */
        (cov_2ne65jkt7n().b[5][1]++, 'Order notifications processed'),
        data: {
          orderNumber: result.orderNumber,
          results:
          /* istanbul ignore next */
          (cov_2ne65jkt7n().b[6][0]++, result.results) ||
          /* istanbul ignore next */
          (cov_2ne65jkt7n().b[6][1]++, [])
        }
      });
    } else {
      /* istanbul ignore next */
      cov_2ne65jkt7n().b[4][1]++;
      cov_2ne65jkt7n().s[19]++;
      res.status(400).json({
        success: false,
        error: result.error
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2ne65jkt7n().s[20]++;
    res.status(500).json({
      success: false,
      error: error.message
    });
  }
});

// GET /api/wholesalers/pending
// Get list of orders with pending wholesaler notifications
/* istanbul ignore next */
cov_2ne65jkt7n().s[21]++;
router.get('/pending', async (req, res) => {
  /* istanbul ignore next */
  cov_2ne65jkt7n().f[3]++;
  cov_2ne65jkt7n().s[22]++;
  try {
    const pendingOrders =
    /* istanbul ignore next */
    (cov_2ne65jkt7n().s[23]++, await Order.find({
      $or: [{
        'payment.status': 'paid'
      }, {
        status: 'processing'
      }],
      'items.wholesaler.notified': false
    }).select('orderNumber createdAt status payment.status items.wholesaler'));
    const summary =
    /* istanbul ignore next */
    (cov_2ne65jkt7n().s[24]++, pendingOrders.map(order => {
      /* istanbul ignore next */
      cov_2ne65jkt7n().f[4]++;
      cov_2ne65jkt7n().s[25]++;
      return {
        orderId: order._id,
        orderNumber: order.orderNumber,
        orderDate: order.createdAt,
        status: order.status,
        paymentStatus: order.payment.status,
        pendingWholesalers: order.items.filter(item => {
          /* istanbul ignore next */
          cov_2ne65jkt7n().f[5]++;
          cov_2ne65jkt7n().s[26]++;
          return /* istanbul ignore next */(cov_2ne65jkt7n().b[7][0]++, !item.wholesaler.notified) &&
          /* istanbul ignore next */
          (cov_2ne65jkt7n().b[7][1]++, item.wholesaler.email);
        }).map(item => {
          /* istanbul ignore next */
          cov_2ne65jkt7n().f[6]++;
          cov_2ne65jkt7n().s[27]++;
          return {
            wholesalerName: item.wholesaler.name,
            wholesalerEmail: item.wholesaler.email,
            productCode: item.wholesaler.productCode
          };
        })
      };
    }));
    /* istanbul ignore next */
    cov_2ne65jkt7n().s[28]++;
    res.json({
      success: true,
      data: {
        count: pendingOrders.length,
        orders: summary
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ne65jkt7n().s[29]++;
    res.status(500).json({
      success: false,
      error: error.message
    });
  }
});

// GET /api/wholesalers/status/:orderId
// Get wholesaler notification status for a specific order
/* istanbul ignore next */
cov_2ne65jkt7n().s[30]++;
router.get('/status/:orderId', async (req, res) => {
  /* istanbul ignore next */
  cov_2ne65jkt7n().f[7]++;
  cov_2ne65jkt7n().s[31]++;
  try {
    const {
      orderId
    } =
    /* istanbul ignore next */
    (cov_2ne65jkt7n().s[32]++, req.params);
    const order =
    /* istanbul ignore next */
    (cov_2ne65jkt7n().s[33]++, await Order.findById(orderId).select('orderNumber items.wholesaler'));
    /* istanbul ignore next */
    cov_2ne65jkt7n().s[34]++;
    if (!order) {
      /* istanbul ignore next */
      cov_2ne65jkt7n().b[8][0]++;
      cov_2ne65jkt7n().s[35]++;
      return res.status(404).json({
        success: false,
        error: 'Order not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ne65jkt7n().b[8][1]++;
    }
    const wholesalerStatus =
    /* istanbul ignore next */
    (cov_2ne65jkt7n().s[36]++, order.items.map(item => {
      /* istanbul ignore next */
      cov_2ne65jkt7n().f[8]++;
      cov_2ne65jkt7n().s[37]++;
      return {
        wholesalerName: item.wholesaler.name,
        wholesalerEmail: item.wholesaler.email,
        productCode: item.wholesaler.productCode,
        notified: item.wholesaler.notified,
        notifiedAt: item.wholesaler.notifiedAt
      };
    }));
    /* istanbul ignore next */
    cov_2ne65jkt7n().s[38]++;
    res.json({
      success: true,
      data: {
        orderNumber: order.orderNumber,
        wholesalers: wholesalerStatus
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ne65jkt7n().s[39]++;
    res.status(500).json({
      success: false,
      error: error.message
    });
  }
});
/* istanbul ignore next */
cov_2ne65jkt7n().s[40]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,