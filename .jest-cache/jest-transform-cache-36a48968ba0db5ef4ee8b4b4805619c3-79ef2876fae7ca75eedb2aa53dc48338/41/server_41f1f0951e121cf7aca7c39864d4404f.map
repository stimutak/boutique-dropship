{"version":3,"names":["cov_281bdr3bnn","actualCoverage","express","s","require","mongoose","cors","helmet","rateLimit","session","MongoStore","path","config","logger","globalErrorHandler","generateCSRFToken","csrfProtection","rateLimits","speedLimiter","sanitizeInput","securityHeaders","app","use","origin","b","process","env","ALLOWED_ORIGINS","split","credentials","general","secret","SESSION_SECRET","resave","saveUninitialized","store","create","mongoUrl","MONGODB_URI","touchAfter","cookie","secure","NODE_ENV","httpOnly","maxAge","json","limit","urlencoded","extended","static","connect","useNewUrlParser","useUnifiedTopology","then","f","console","log","catch","error","warn","message","connection","on","auth","payment","integration","admin","get","req","res","status","timestamp","Date","toISOString","success","csrfToken","version","endpoints","health","products","cart","orders","payments","frontend","FRONTEND_URL","sendFile","join","__dirname","PORT","listen","info"],"sources":["server.js"],"sourcesContent":["const express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst helmet = require('helmet');\nconst rateLimit = require('express-rate-limit');\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo');\nconst path = require('path');\nrequire('dotenv').config();\n\n// Import logging and error handling\nconst { logger } = require('./utils/logger');\nconst { globalErrorHandler } = require('./middleware/errorHandler');\nconst { \n  generateCSRFToken, \n  csrfProtection, \n  rateLimits, \n  speedLimiter, \n  sanitizeInput, \n  securityHeaders \n} = require('./middleware/security');\n\nconst app = express();\n\n// Security middleware\napp.use(helmet());\napp.use(securityHeaders);\napp.use(cors({\n  origin: process.env.ALLOWED_ORIGINS?.split(',') || ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:3003', 'http://localhost:5173'],\n  credentials: true\n}));\n\n// Input sanitization\napp.use(sanitizeInput);\n\n// General rate limiting\napp.use(rateLimits.general);\n\n// Speed limiting for brute force protection\napp.use(speedLimiter);\n\n// Session middleware\napp.use(session({\n  secret: process.env.SESSION_SECRET || 'holistic-store-session-secret',\n  resave: false,\n  saveUninitialized: false,\n  store: MongoStore.create({\n    mongoUrl: process.env.MONGODB_URI || 'mongodb://localhost:27017/holistic-store',\n    touchAfter: 24 * 3600 // lazy session update\n  }),\n  cookie: {\n    secure: process.env.NODE_ENV === 'production',\n    httpOnly: true,\n    maxAge: 1000 * 60 * 60 * 24 * 7 // 7 days\n  }\n}));\n\n// Generate CSRF tokens for sessions\napp.use(generateCSRFToken);\n\n// Body parsing middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\n\n// Static files\napp.use('/uploads', express.static('uploads'));\napp.use(express.static('public'));\n\n// Database connection\nmongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/holistic-store', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n}).then(() => {\n  console.log('Connected to MongoDB');\n}).catch((error) => {\n  console.warn('MongoDB connection failed:', error.message);\n  console.warn('Running in development mode without database');\n});\n\n// Handle MongoDB connection events\nmongoose.connection.on('error', (error) => {\n  console.warn('MongoDB connection error:', error.message);\n});\n\nmongoose.connection.on('disconnected', () => {\n  console.warn('MongoDB disconnected');\n});\n\n// Routes with specific rate limiting\napp.use('/api/auth', rateLimits.auth, require('./routes/auth'));\napp.use('/api/products', require('./routes/products'));\napp.use('/api/cart', csrfProtection, require('./routes/cart'));\napp.use('/api/orders', csrfProtection, require('./routes/orders'));\napp.use('/api/payments', rateLimits.payment, csrfProtection, require('./routes/payments'));\napp.use('/api/wholesalers', require('./routes/wholesalers'));\napp.use('/api/integration', rateLimits.integration, require('./routes/integration'));\napp.use('/api/admin', rateLimits.admin, csrfProtection, require('./routes/admin'));\napp.use('/api/monitoring', require('./routes/monitoring'));\n\n// Health check\napp.get('/health', (req, res) => {\n  res.json({ status: 'OK', timestamp: new Date().toISOString() });\n});\n\n// CSRF token endpoint\napp.get('/api/csrf-token', (req, res) => {\n  res.json({ \n    success: true,\n    csrfToken: req.session.csrfToken \n  });\n});\n\n// Root route for API info\napp.get('/', (req, res) => {\n  res.json({\n    message: 'Holistic Dropship Store API',\n    version: '1.0.0',\n    endpoints: {\n      health: '/health',\n      auth: '/api/auth',\n      products: '/api/products',\n      cart: '/api/cart',\n      orders: '/api/orders',\n      payments: '/api/payments'\n    },\n    frontend: process.env.FRONTEND_URL || 'http://localhost:3000'\n  });\n});\n\n// Global error handling middleware (must be last)\napp.use(globalErrorHandler);\n\n// Serve React app in production\nif (process.env.NODE_ENV === 'production') {\n  app.get('*', (req, res) => {\n    res.sendFile(path.join(__dirname, 'build', 'index.html'));\n  });\n}\n\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  logger.info(`Server running on port ${PORT}`);\n});"],"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","ignoreList":[]}