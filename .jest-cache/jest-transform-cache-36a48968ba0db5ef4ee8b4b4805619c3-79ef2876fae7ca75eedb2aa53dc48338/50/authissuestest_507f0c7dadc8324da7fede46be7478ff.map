{"version":3,"names":["request","require","app","getUniqueEmail","Date","now","Math","random","toString","substr","describe","testUser","beforeEach","email","password","firstName","lastName","phone","test","post","send","loginRes","console","log","JSON","stringify","body","expect","status","toBe","success","data","toBeDefined","token","user","registerRes","profileRes","get","set","badLoginRes","toBeUndefined","error","updateRes","put"],"sources":["auth-issues.test.js"],"sourcesContent":["const request = require('supertest');\nconst app = require('../server');\n\n// Helper to generate unique test emails\nconst getUniqueEmail = () => `test_${Date.now()}_${Math.random().toString(36).substr(2, 9)}@example.com`;\n\ndescribe('Authentication Issues Tests', () => {\n  let testUser;\n  \n  beforeEach(() => {\n    testUser = {\n      email: getUniqueEmail(),\n      password: 'TestPassword123!',\n      firstName: 'Test',\n      lastName: 'User',\n      phone: '1234567890'\n    };\n  });\n\n  // Issue #12: Login sync error\n  describe('Issue #12: Login returns user data properly', () => {\n    test('Login response should include complete user data', async () => {\n      // Register user first\n      await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n\n      // Login\n      const loginRes = await request(app)\n        .post('/api/auth/login')\n        .send({\n          email: testUser.email,\n          password: testUser.password\n        });\n\n      console.log('Login response:', JSON.stringify(loginRes.body, null, 2));\n\n      expect(loginRes.status).toBe(200);\n      expect(loginRes.body.success).toBe(true);\n      \n      // Check for proper response structure\n      expect(loginRes.body.data).toBeDefined();\n      expect(loginRes.body.data.token).toBeDefined();\n      expect(loginRes.body.data.user).toBeDefined();\n      \n      // Check user data\n      expect(loginRes.body.data.user.firstName).toBe(testUser.firstName);\n      expect(loginRes.body.data.user.lastName).toBe(testUser.lastName);\n      expect(loginRes.body.data.user.email).toBe(testUser.email);\n    });\n  });\n\n  // Issue #11: Registration login state\n  describe('Issue #11: Registration returns proper auth state', () => {\n    test('Registration should return token and user data', async () => {\n      const registerRes = await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n\n      console.log('Register response:', JSON.stringify(registerRes.body, null, 2));\n\n      expect(registerRes.status).toBe(201);\n      expect(registerRes.body.success).toBe(true);\n      \n      // Check response structure\n      expect(registerRes.body.data).toBeDefined();\n      expect(registerRes.body.data.token).toBeDefined();\n      expect(registerRes.body.data.user).toBeDefined();\n      \n      // Verify token works\n      const profileRes = await request(app)\n        .get('/api/auth/profile')\n        .set('Authorization', `Bearer ${registerRes.body.data.token}`);\n\n      expect(profileRes.status).toBe(200);\n      expect(profileRes.body.success).toBe(true);\n    });\n  });\n\n  // Issue #10: Bad login state\n  describe('Issue #10: Failed login should not return auth data', () => {\n    test('Bad password should return error without token', async () => {\n      // Register user first\n      await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n\n      // Try bad login\n      const badLoginRes = await request(app)\n        .post('/api/auth/login')\n        .send({\n          email: testUser.email,\n          password: 'wrongpassword'\n        });\n\n      console.log('Bad login response:', JSON.stringify(badLoginRes.body, null, 2));\n\n      expect(badLoginRes.status).toBe(401);\n      expect(badLoginRes.body.success).toBe(false);\n      expect(badLoginRes.body.data?.token).toBeUndefined();\n      expect(badLoginRes.body.data?.user).toBeUndefined();\n      expect(badLoginRes.body.error).toBeDefined();\n    });\n  });\n\n  // Issue #9: Profile update authentication\n  describe('Issue #9: Profile update should maintain auth', () => {\n    test('Profile update should not require re-authentication', async () => {\n      // Register and get token\n      const registerRes = await request(app)\n        .post('/api/auth/register')\n        .send(testUser);\n\n      const token = registerRes.body.data.token;\n\n      // Update profile\n      const updateRes = await request(app)\n        .put('/api/auth/profile')\n        .set('Authorization', `Bearer ${token}`)\n        .send({\n          firstName: 'Updated',\n          lastName: 'Name'\n        });\n\n      console.log('Update response:', JSON.stringify(updateRes.body, null, 2));\n\n      expect(updateRes.status).toBe(200);\n      expect(updateRes.body.success).toBe(true);\n      \n      // Verify still authenticated\n      const profileRes = await request(app)\n        .get('/api/auth/profile')\n        .set('Authorization', `Bearer ${token}`);\n\n      expect(profileRes.status).toBe(200);\n      expect(profileRes.body.data.user.firstName).toBe('Updated');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}