c60d9af23b0ae7e58d3b119b53f93e55
/* istanbul ignore next */
function cov_nljdgoezs() {
  var path = "/Users/oliver/Projects/boutique/routes/auth.js";
  var hash = "f3e01fdbc38184ad5406231e3cec6ec9c90348f7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/oliver/Projects/boutique/routes/auth.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 31
        }
      },
      "2": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 35
        }
      },
      "3": {
        start: {
          line: 4,
          column: 35
        },
        end: {
          line: 4,
          column: 63
        }
      },
      "4": {
        start: {
          line: 5,
          column: 13
        },
        end: {
          line: 5,
          column: 38
        }
      },
      "5": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "6": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 11,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 10,
          column: 75
        }
      },
      "8": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "9": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "10": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 129,
          column: 3
        }
      },
      "11": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 128,
          column: 3
        }
      },
      "12": {
        start: {
          line: 50,
          column: 19
        },
        end: {
          line: 50,
          column: 40
        }
      },
      "13": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "14": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "15": {
        start: {
          line: 62,
          column: 73
        },
        end: {
          line: 62,
          column: 81
        }
      },
      "16": {
        start: {
          line: 65,
          column: 25
        },
        end: {
          line: 65,
          column: 54
        }
      },
      "17": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "18": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "19": {
        start: {
          line: 77,
          column: 21
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "20": {
        start: {
          line: 86,
          column: 17
        },
        end: {
          line: 86,
          column: 44
        }
      },
      "21": {
        start: {
          line: 87,
          column: 18
        },
        end: {
          line: 87,
          column: 41
        }
      },
      "22": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 32
        }
      },
      "23": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 22
        }
      },
      "24": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "25": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 107,
          column: 7
        }
      },
      "26": {
        start: {
          line: 96,
          column: 37
        },
        end: {
          line: 96,
          column: 69
        }
      },
      "27": {
        start: {
          line: 98,
          column: 28
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "28": {
        start: {
          line: 103,
          column: 28
        },
        end: {
          line: 103,
          column: 75
        }
      },
      "29": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "30": {
        start: {
          line: 105,
          column: 10
        },
        end: {
          line: 105,
          column: 76
        }
      },
      "31": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 109,
          column: 64
        }
      },
      "32": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "33": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 48
        }
      },
      "34": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 127,
          column: 7
        }
      },
      "35": {
        start: {
          line: 132,
          column: 0
        },
        end: {
          line: 194,
          column: 3
        }
      },
      "36": {
        start: {
          line: 133,
          column: 2
        },
        end: {
          line: 193,
          column: 3
        }
      },
      "37": {
        start: {
          line: 134,
          column: 19
        },
        end: {
          line: 134,
          column: 40
        }
      },
      "38": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "39": {
        start: {
          line: 136,
          column: 6
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "40": {
        start: {
          line: 146,
          column: 32
        },
        end: {
          line: 146,
          column: 40
        }
      },
      "41": {
        start: {
          line: 149,
          column: 17
        },
        end: {
          line: 149,
          column: 82
        }
      },
      "42": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "43": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "44": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 161,
          column: 64
        }
      },
      "45": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "46": {
        start: {
          line: 163,
          column: 6
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "47": {
        start: {
          line: 173,
          column: 18
        },
        end: {
          line: 173,
          column: 41
        }
      },
      "48": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 32
        }
      },
      "49": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 22
        }
      },
      "50": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "51": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 185,
          column: 41
        }
      },
      "52": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "53": {
        start: {
          line: 197,
          column: 0
        },
        end: {
          line: 213,
          column: 3
        }
      },
      "54": {
        start: {
          line: 198,
          column: 2
        },
        end: {
          line: 212,
          column: 3
        }
      },
      "55": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 202,
          column: 7
        }
      },
      "56": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 49
        }
      },
      "57": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 211,
          column: 7
        }
      },
      "58": {
        start: {
          line: 216,
          column: 0
        },
        end: {
          line: 282,
          column: 3
        }
      },
      "59": {
        start: {
          line: 217,
          column: 2
        },
        end: {
          line: 281,
          column: 3
        }
      },
      "60": {
        start: {
          line: 218,
          column: 67
        },
        end: {
          line: 218,
          column: 75
        }
      },
      "61": {
        start: {
          line: 220,
          column: 23
        },
        end: {
          line: 220,
          column: 25
        }
      },
      "62": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 221,
          column: 59
        }
      },
      "63": {
        start: {
          line: 221,
          column: 19
        },
        end: {
          line: 221,
          column: 59
        }
      },
      "64": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 222,
          column: 56
        }
      },
      "65": {
        start: {
          line: 222,
          column: 18
        },
        end: {
          line: 222,
          column: 56
        }
      },
      "66": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 223,
          column: 47
        }
      },
      "67": {
        start: {
          line: 223,
          column: 15
        },
        end: {
          line: 223,
          column: 47
        }
      },
      "68": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 224,
          column: 90
        }
      },
      "69": {
        start: {
          line: 224,
          column: 21
        },
        end: {
          line: 224,
          column: 90
        }
      },
      "70": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "71": {
        start: {
          line: 228,
          column: 22
        },
        end: {
          line: 228,
          column: 34
        }
      },
      "72": {
        start: {
          line: 231,
          column: 19
        },
        end: {
          line: 231,
          column: 52
        }
      },
      "73": {
        start: {
          line: 232,
          column: 28
        },
        end: {
          line: 232,
          column: 81
        }
      },
      "74": {
        start: {
          line: 232,
          column: 56
        },
        end: {
          line: 232,
          column: 80
        }
      },
      "75": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 254,
          column: 7
        }
      },
      "76": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 82
        }
      },
      "77": {
        start: {
          line: 236,
          column: 42
        },
        end: {
          line: 236,
          column: 82
        }
      },
      "78": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 76
        }
      },
      "79": {
        start: {
          line: 237,
          column: 40
        },
        end: {
          line: 237,
          column: 76
        }
      },
      "80": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 79
        }
      },
      "81": {
        start: {
          line: 238,
          column: 41
        },
        end: {
          line: 238,
          column: 79
        }
      },
      "82": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 85
        }
      },
      "83": {
        start: {
          line: 239,
          column: 43
        },
        end: {
          line: 239,
          column: 85
        }
      },
      "84": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 85
        }
      },
      "85": {
        start: {
          line: 240,
          column: 43
        },
        end: {
          line: 240,
          column: 85
        }
      },
      "86": {
        start: {
          line: 241,
          column: 13
        },
        end: {
          line: 254,
          column: 7
        }
      },
      "87": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 253,
          column: 11
        }
      },
      "88": {
        start: {
          line: 256,
          column: 6
        },
        end: {
          line: 256,
          column: 24
        }
      },
      "89": {
        start: {
          line: 257,
          column: 6
        },
        end: {
          line: 257,
          column: 44
        }
      },
      "90": {
        start: {
          line: 260,
          column: 24
        },
        end: {
          line: 264,
          column: 5
        }
      },
      "91": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 270,
          column: 7
        }
      },
      "92": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 50
        }
      },
      "93": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 280,
          column: 7
        }
      },
      "94": {
        start: {
          line: 285,
          column: 0
        },
        end: {
          line: 330,
          column: 3
        }
      },
      "95": {
        start: {
          line: 286,
          column: 2
        },
        end: {
          line: 329,
          column: 3
        }
      },
      "96": {
        start: {
          line: 287,
          column: 99
        },
        end: {
          line: 287,
          column: 107
        }
      },
      "97": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 297,
          column: 5
        }
      },
      "98": {
        start: {
          line: 290,
          column: 6
        },
        end: {
          line: 296,
          column: 9
        }
      },
      "99": {
        start: {
          line: 299,
          column: 24
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "100": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 43
        }
      },
      "101": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 318,
          column: 7
        }
      },
      "102": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 321,
          column: 47
        }
      },
      "103": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 328,
          column: 7
        }
      },
      "104": {
        start: {
          line: 333,
          column: 0
        },
        end: {
          line: 365,
          column: 3
        }
      },
      "105": {
        start: {
          line: 334,
          column: 2
        },
        end: {
          line: 364,
          column: 3
        }
      },
      "106": {
        start: {
          line: 335,
          column: 26
        },
        end: {
          line: 335,
          column: 36
        }
      },
      "107": {
        start: {
          line: 336,
          column: 23
        },
        end: {
          line: 336,
          column: 31
        }
      },
      "108": {
        start: {
          line: 338,
          column: 19
        },
        end: {
          line: 338,
          column: 70
        }
      },
      "109": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 347,
          column: 5
        }
      },
      "110": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "111": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 353,
          column: 7
        }
      },
      "112": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 356,
          column: 50
        }
      },
      "113": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 363,
          column: 7
        }
      },
      "114": {
        start: {
          line: 368,
          column: 0
        },
        end: {
          line: 390,
          column: 3
        }
      },
      "115": {
        start: {
          line: 369,
          column: 2
        },
        end: {
          line: 389,
          column: 3
        }
      },
      "116": {
        start: {
          line: 370,
          column: 26
        },
        end: {
          line: 370,
          column: 36
        }
      },
      "117": {
        start: {
          line: 372,
          column: 4
        },
        end: {
          line: 372,
          column: 44
        }
      },
      "118": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 378,
          column: 7
        }
      },
      "119": {
        start: {
          line: 381,
          column: 4
        },
        end: {
          line: 381,
          column: 50
        }
      },
      "120": {
        start: {
          line: 382,
          column: 4
        },
        end: {
          line: 388,
          column: 7
        }
      },
      "121": {
        start: {
          line: 393,
          column: 0
        },
        end: {
          line: 422,
          column: 3
        }
      },
      "122": {
        start: {
          line: 394,
          column: 2
        },
        end: {
          line: 421,
          column: 3
        }
      },
      "123": {
        start: {
          line: 395,
          column: 17
        },
        end: {
          line: 395,
          column: 25
        }
      },
      "124": {
        start: {
          line: 397,
          column: 24
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "125": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 410,
          column: 7
        }
      },
      "126": {
        start: {
          line: 413,
          column: 4
        },
        end: {
          line: 413,
          column: 56
        }
      },
      "127": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 420,
          column: 7
        }
      },
      "128": {
        start: {
          line: 425,
          column: 0
        },
        end: {
          line: 443,
          column: 3
        }
      },
      "129": {
        start: {
          line: 426,
          column: 2
        },
        end: {
          line: 442,
          column: 3
        }
      },
      "130": {
        start: {
          line: 429,
          column: 4
        },
        end: {
          line: 432,
          column: 7
        }
      },
      "131": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 434,
          column: 42
        }
      },
      "132": {
        start: {
          line: 435,
          column: 4
        },
        end: {
          line: 441,
          column: 7
        }
      },
      "133": {
        start: {
          line: 446,
          column: 0
        },
        end: {
          line: 507,
          column: 3
        }
      },
      "134": {
        start: {
          line: 447,
          column: 2
        },
        end: {
          line: 506,
          column: 3
        }
      },
      "135": {
        start: {
          line: 448,
          column: 22
        },
        end: {
          line: 448,
          column: 30
        }
      },
      "136": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 458,
          column: 5
        }
      },
      "137": {
        start: {
          line: 451,
          column: 6
        },
        end: {
          line: 457,
          column: 9
        }
      },
      "138": {
        start: {
          line: 460,
          column: 17
        },
        end: {
          line: 460,
          column: 83
        }
      },
      "139": {
        start: {
          line: 463,
          column: 4
        },
        end: {
          line: 466,
          column: 7
        }
      },
      "140": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 495,
          column: 5
        }
      },
      "141": {
        start: {
          line: 470,
          column: 21
        },
        end: {
          line: 470,
          column: 38
        }
      },
      "142": {
        start: {
          line: 471,
          column: 41
        },
        end: {
          line: 471,
          column: 73
        }
      },
      "143": {
        start: {
          line: 474,
          column: 25
        },
        end: {
          line: 474,
          column: 63
        }
      },
      "144": {
        start: {
          line: 475,
          column: 31
        },
        end: {
          line: 475,
          column: 61
        }
      },
      "145": {
        start: {
          line: 478,
          column: 6
        },
        end: {
          line: 478,
          column: 43
        }
      },
      "146": {
        start: {
          line: 479,
          column: 6
        },
        end: {
          line: 479,
          column: 50
        }
      },
      "147": {
        start: {
          line: 480,
          column: 6
        },
        end: {
          line: 480,
          column: 24
        }
      },
      "148": {
        start: {
          line: 483,
          column: 23
        },
        end: {
          line: 483,
          column: 87
        }
      },
      "149": {
        start: {
          line: 486,
          column: 26
        },
        end: {
          line: 490,
          column: 8
        }
      },
      "150": {
        start: {
          line: 492,
          column: 6
        },
        end: {
          line: 494,
          column: 7
        }
      },
      "151": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 493,
          column: 81
        }
      },
      "152": {
        start: {
          line: 498,
          column: 4
        },
        end: {
          line: 498,
          column: 50
        }
      },
      "153": {
        start: {
          line: 499,
          column: 4
        },
        end: {
          line: 505,
          column: 7
        }
      },
      "154": {
        start: {
          line: 510,
          column: 0
        },
        end: {
          line: 572,
          column: 3
        }
      },
      "155": {
        start: {
          line: 511,
          column: 2
        },
        end: {
          line: 571,
          column: 3
        }
      },
      "156": {
        start: {
          line: 512,
          column: 35
        },
        end: {
          line: 512,
          column: 43
        }
      },
      "157": {
        start: {
          line: 514,
          column: 4
        },
        end: {
          line: 522,
          column: 5
        }
      },
      "158": {
        start: {
          line: 515,
          column: 6
        },
        end: {
          line: 521,
          column: 9
        }
      },
      "159": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 532,
          column: 5
        }
      },
      "160": {
        start: {
          line: 525,
          column: 6
        },
        end: {
          line: 531,
          column: 9
        }
      },
      "161": {
        start: {
          line: 535,
          column: 17
        },
        end: {
          line: 539,
          column: 6
        }
      },
      "162": {
        start: {
          line: 541,
          column: 4
        },
        end: {
          line: 549,
          column: 5
        }
      },
      "163": {
        start: {
          line: 542,
          column: 6
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "164": {
        start: {
          line: 552,
          column: 4
        },
        end: {
          line: 552,
          column: 32
        }
      },
      "165": {
        start: {
          line: 553,
          column: 4
        },
        end: {
          line: 553,
          column: 40
        }
      },
      "166": {
        start: {
          line: 554,
          column: 4
        },
        end: {
          line: 554,
          column: 41
        }
      },
      "167": {
        start: {
          line: 555,
          column: 4
        },
        end: {
          line: 555,
          column: 22
        }
      },
      "168": {
        start: {
          line: 557,
          column: 4
        },
        end: {
          line: 560,
          column: 7
        }
      },
      "169": {
        start: {
          line: 563,
          column: 4
        },
        end: {
          line: 563,
          column: 61
        }
      },
      "170": {
        start: {
          line: 564,
          column: 4
        },
        end: {
          line: 570,
          column: 7
        }
      },
      "171": {
        start: {
          line: 575,
          column: 0
        },
        end: {
          line: 591,
          column: 3
        }
      },
      "172": {
        start: {
          line: 576,
          column: 2
        },
        end: {
          line: 590,
          column: 3
        }
      },
      "173": {
        start: {
          line: 577,
          column: 4
        },
        end: {
          line: 580,
          column: 7
        }
      },
      "174": {
        start: {
          line: 582,
          column: 4
        },
        end: {
          line: 582,
          column: 59
        }
      },
      "175": {
        start: {
          line: 583,
          column: 4
        },
        end: {
          line: 589,
          column: 7
        }
      },
      "176": {
        start: {
          line: 594,
          column: 0
        },
        end: {
          line: 649,
          column: 3
        }
      },
      "177": {
        start: {
          line: 595,
          column: 2
        },
        end: {
          line: 648,
          column: 3
        }
      },
      "178": {
        start: {
          line: 596,
          column: 33
        },
        end: {
          line: 596,
          column: 41
        }
      },
      "179": {
        start: {
          line: 598,
          column: 4
        },
        end: {
          line: 606,
          column: 5
        }
      },
      "180": {
        start: {
          line: 599,
          column: 6
        },
        end: {
          line: 605,
          column: 9
        }
      },
      "181": {
        start: {
          line: 609,
          column: 29
        },
        end: {
          line: 615,
          column: 5
        }
      },
      "182": {
        start: {
          line: 617,
          column: 24
        },
        end: {
          line: 619,
          column: 5
        }
      },
      "183": {
        start: {
          line: 618,
          column: 13
        },
        end: {
          line: 618,
          column: 44
        }
      },
      "184": {
        start: {
          line: 621,
          column: 4
        },
        end: {
          line: 629,
          column: 5
        }
      },
      "185": {
        start: {
          line: 622,
          column: 6
        },
        end: {
          line: 628,
          column: 9
        }
      },
      "186": {
        start: {
          line: 631,
          column: 4
        },
        end: {
          line: 631,
          column: 60
        }
      },
      "187": {
        start: {
          line: 633,
          column: 4
        },
        end: {
          line: 637,
          column: 7
        }
      },
      "188": {
        start: {
          line: 640,
          column: 4
        },
        end: {
          line: 640,
          column: 60
        }
      },
      "189": {
        start: {
          line: 641,
          column: 4
        },
        end: {
          line: 647,
          column: 7
        }
      },
      "190": {
        start: {
          line: 652,
          column: 0
        },
        end: {
          line: 654,
          column: 3
        }
      },
      "191": {
        start: {
          line: 653,
          column: 2
        },
        end: {
          line: 653,
          column: 46
        }
      },
      "192": {
        start: {
          line: 656,
          column: 0
        },
        end: {
          line: 656,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 9,
            column: 23
          }
        },
        loc: {
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 48,
            column: 48
          }
        },
        loc: {
          start: {
            line: 48,
            column: 67
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 48
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 132,
            column: 37
          },
          end: {
            line: 132,
            column: 38
          }
        },
        loc: {
          start: {
            line: 132,
            column: 57
          },
          end: {
            line: 194,
            column: 1
          }
        },
        line: 132
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 197,
            column: 36
          },
          end: {
            line: 197,
            column: 37
          }
        },
        loc: {
          start: {
            line: 197,
            column: 56
          },
          end: {
            line: 213,
            column: 1
          }
        },
        line: 197
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 216,
            column: 36
          },
          end: {
            line: 216,
            column: 37
          }
        },
        loc: {
          start: {
            line: 216,
            column: 56
          },
          end: {
            line: 282,
            column: 1
          }
        },
        line: 216
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 232,
            column: 48
          },
          end: {
            line: 232,
            column: 49
          }
        },
        loc: {
          start: {
            line: 232,
            column: 56
          },
          end: {
            line: 232,
            column: 80
          }
        },
        line: 232
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 285,
            column: 39
          },
          end: {
            line: 285,
            column: 40
          }
        },
        loc: {
          start: {
            line: 285,
            column: 59
          },
          end: {
            line: 330,
            column: 1
          }
        },
        line: 285
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 333,
            column: 49
          },
          end: {
            line: 333,
            column: 50
          }
        },
        loc: {
          start: {
            line: 333,
            column: 69
          },
          end: {
            line: 365,
            column: 1
          }
        },
        line: 333
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 368,
            column: 52
          },
          end: {
            line: 368,
            column: 53
          }
        },
        loc: {
          start: {
            line: 368,
            column: 72
          },
          end: {
            line: 390,
            column: 1
          }
        },
        line: 368
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 393,
            column: 49
          },
          end: {
            line: 393,
            column: 50
          }
        },
        loc: {
          start: {
            line: 393,
            column: 69
          },
          end: {
            line: 422,
            column: 1
          }
        },
        line: 393
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 425,
            column: 36
          },
          end: {
            line: 425,
            column: 37
          }
        },
        loc: {
          start: {
            line: 425,
            column: 56
          },
          end: {
            line: 443,
            column: 1
          }
        },
        line: 425
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 446,
            column: 32
          },
          end: {
            line: 446,
            column: 33
          }
        },
        loc: {
          start: {
            line: 446,
            column: 52
          },
          end: {
            line: 507,
            column: 1
          }
        },
        line: 446
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 510,
            column: 31
          },
          end: {
            line: 510,
            column: 32
          }
        },
        loc: {
          start: {
            line: 510,
            column: 51
          },
          end: {
            line: 572,
            column: 1
          }
        },
        line: 510
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 575,
            column: 46
          },
          end: {
            line: 575,
            column: 47
          }
        },
        loc: {
          start: {
            line: 575,
            column: 66
          },
          end: {
            line: 591,
            column: 1
          }
        },
        line: 575
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 594,
            column: 46
          },
          end: {
            line: 594,
            column: 47
          }
        },
        loc: {
          start: {
            line: 594,
            column: 66
          },
          end: {
            line: 649,
            column: 1
          }
        },
        line: 594
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 618,
            column: 6
          },
          end: {
            line: 618,
            column: 7
          }
        },
        loc: {
          start: {
            line: 618,
            column: 13
          },
          end: {
            line: 618,
            column: 44
          }
        },
        line: 618
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 652,
            column: 20
          },
          end: {
            line: 652,
            column: 21
          }
        },
        loc: {
          start: {
            line: 652,
            column: 34
          },
          end: {
            line: 654,
            column: 1
          }
        },
        line: 652
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 30
          }
        }, {
          start: {
            line: 83,
            column: 34
          },
          end: {
            line: 83,
            column: 36
          }
        }],
        line: 83
      },
      "3": {
        loc: {
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 107,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 107,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "4": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "5": {
        loc: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "6": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "7": {
        loc: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "8": {
        loc: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "9": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "10": {
        loc: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "11": {
        loc: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 90
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 90
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "12": {
        loc: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "13": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 227,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 227,
            column: 17
          }
        }, {
          start: {
            line: 227,
            column: 21
          },
          end: {
            line: 227,
            column: 45
          }
        }, {
          start: {
            line: 227,
            column: 49
          },
          end: {
            line: 227,
            column: 69
          }
        }],
        line: 227
      },
      "14": {
        loc: {
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 254,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 254,
            column: 7
          }
        }, {
          start: {
            line: 241,
            column: 13
          },
          end: {
            line: 254,
            column: 7
          }
        }],
        line: 234
      },
      "15": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 236,
            column: 82
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 236,
            column: 82
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "16": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "17": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 238,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 238,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "18": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 239,
            column: 85
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 239,
            column: 85
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "19": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 240,
            column: 85
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 240,
            column: 85
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "20": {
        loc: {
          start: {
            line: 241,
            column: 13
          },
          end: {
            line: 254,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 13
          },
          end: {
            line: 254,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "21": {
        loc: {
          start: {
            line: 241,
            column: 17
          },
          end: {
            line: 241,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 17
          },
          end: {
            line: 241,
            column: 31
          }
        }, {
          start: {
            line: 241,
            column: 35
          },
          end: {
            line: 241,
            column: 47
          }
        }, {
          start: {
            line: 241,
            column: 51
          },
          end: {
            line: 241,
            column: 64
          }
        }, {
          start: {
            line: 241,
            column: 68
          },
          end: {
            line: 241,
            column: 83
          }
        }],
        line: 241
      },
      "22": {
        loc: {
          start: {
            line: 245,
            column: 21
          },
          end: {
            line: 245,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 21
          },
          end: {
            line: 245,
            column: 30
          }
        }, {
          start: {
            line: 245,
            column: 34
          },
          end: {
            line: 245,
            column: 48
          }
        }],
        line: 245
      },
      "23": {
        loc: {
          start: {
            line: 246,
            column: 20
          },
          end: {
            line: 246,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 20
          },
          end: {
            line: 246,
            column: 28
          }
        }, {
          start: {
            line: 246,
            column: 32
          },
          end: {
            line: 246,
            column: 45
          }
        }],
        line: 246
      },
      "24": {
        loc: {
          start: {
            line: 251,
            column: 19
          },
          end: {
            line: 251,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 19
          },
          end: {
            line: 251,
            column: 34
          }
        }, {
          start: {
            line: 251,
            column: 38
          },
          end: {
            line: 251,
            column: 42
          }
        }],
        line: 251
      },
      "25": {
        loc: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "26": {
        loc: {
          start: {
            line: 308,
            column: 13
          },
          end: {
            line: 308,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 308,
            column: 21
          },
          end: {
            line: 308,
            column: 33
          }
        }, {
          start: {
            line: 308,
            column: 36
          },
          end: {
            line: 308,
            column: 45
          }
        }],
        line: 308
      },
      "27": {
        loc: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "28": {
        loc: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 458,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 458,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "29": {
        loc: {
          start: {
            line: 469,
            column: 4
          },
          end: {
            line: 495,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 4
          },
          end: {
            line: 495,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "30": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 469,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 469,
            column: 12
          }
        }, {
          start: {
            line: 469,
            column: 16
          },
          end: {
            line: 469,
            column: 48
          }
        }],
        line: 469
      },
      "31": {
        loc: {
          start: {
            line: 492,
            column: 6
          },
          end: {
            line: 494,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 6
          },
          end: {
            line: 494,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "32": {
        loc: {
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "33": {
        loc: {
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 514,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 514,
            column: 14
          }
        }, {
          start: {
            line: 514,
            column: 18
          },
          end: {
            line: 514,
            column: 30
          }
        }],
        line: 514
      },
      "34": {
        loc: {
          start: {
            line: 524,
            column: 4
          },
          end: {
            line: 532,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 4
          },
          end: {
            line: 532,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 524
      },
      "35": {
        loc: {
          start: {
            line: 541,
            column: 4
          },
          end: {
            line: 549,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 4
          },
          end: {
            line: 549,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 541
      },
      "36": {
        loc: {
          start: {
            line: 598,
            column: 4
          },
          end: {
            line: 606,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 598,
            column: 4
          },
          end: {
            line: 606,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 598
      },
      "37": {
        loc: {
          start: {
            line: 598,
            column: 8
          },
          end: {
            line: 598,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 598,
            column: 8
          },
          end: {
            line: 598,
            column: 25
          }
        }, {
          start: {
            line: 598,
            column: 29
          },
          end: {
            line: 598,
            column: 65
          }
        }],
        line: 598
      },
      "38": {
        loc: {
          start: {
            line: 621,
            column: 4
          },
          end: {
            line: 629,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 621,
            column: 4
          },
          end: {
            line: 629,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 621
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f3e01fdbc38184ad5406231e3cec6ec9c90348f7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nljdgoezs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nljdgoezs();
const express =
/* istanbul ignore next */
(cov_nljdgoezs().s[0]++, require('express'));
const router =
/* istanbul ignore next */
(cov_nljdgoezs().s[1]++, express.Router());
const jwt =
/* istanbul ignore next */
(cov_nljdgoezs().s[2]++, require('jsonwebtoken'));
const {
  body,
  validationResult
} =
/* istanbul ignore next */
(cov_nljdgoezs().s[3]++, require('express-validator'));
const User =
/* istanbul ignore next */
(cov_nljdgoezs().s[4]++, require('../models/User'));
const {
  requireAuth
} =
/* istanbul ignore next */
(cov_nljdgoezs().s[5]++, require('../middleware/auth'));

// Generate JWT token
/* istanbul ignore next */
cov_nljdgoezs().s[6]++;
const generateToken = userId => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[0]++;
  cov_nljdgoezs().s[7]++;
  return jwt.sign({
    userId
  }, process.env.JWT_SECRET, {
    expiresIn: '7d'
  });
};

// Validation middleware for registration
const validateRegistration =
/* istanbul ignore next */
(cov_nljdgoezs().s[8]++, [body('email').isEmail().normalizeEmail().withMessage('Valid email is required'), body('password').isLength({
  min: 6
}).withMessage('Password must be at least 6 characters long'), body('firstName').trim().isLength({
  min: 1,
  max: 50
}).withMessage('First name is required and must be less than 50 characters'), body('lastName').trim().isLength({
  min: 1,
  max: 50
}).withMessage('Last name is required and must be less than 50 characters'), body('phone').optional().isMobilePhone().withMessage('Valid phone number is required')]);

// Validation middleware for login
const validateLogin =
/* istanbul ignore next */
(cov_nljdgoezs().s[9]++, [body('email').isEmail().normalizeEmail().withMessage('Valid email is required'), body('password').notEmpty().withMessage('Password is required')]);

// Register new user
/* istanbul ignore next */
cov_nljdgoezs().s[10]++;
router.post('/register', validateRegistration, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[1]++;
  cov_nljdgoezs().s[11]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[12]++, validationResult(req));
    /* istanbul ignore next */
    cov_nljdgoezs().s[13]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[0][0]++;
      cov_nljdgoezs().s[14]++;
      return res.status(400).json({
        success: false,
        error: {
          code: 'VALIDATION_ERROR',
          message: 'Invalid input data',
          details: errors.array()
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[0][1]++;
    }
    const {
      email,
      password,
      firstName,
      lastName,
      phone,
      preferences
    } =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[15]++, req.body);

    // Check if user already exists
    const existingUser =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[16]++, await User.findOne({
      email
    }));
    /* istanbul ignore next */
    cov_nljdgoezs().s[17]++;
    if (existingUser) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[1][0]++;
      cov_nljdgoezs().s[18]++;
      return res.status(409).json({
        success: false,
        error: {
          code: 'USER_EXISTS',
          message: 'User with this email already exists'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[1][1]++;
    }

    // Create new user
    const userData =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[19]++, {
      email,
      password,
      firstName,
      lastName,
      phone,
      preferences:
      /* istanbul ignore next */
      (cov_nljdgoezs().b[2][0]++, preferences) ||
      /* istanbul ignore next */
      (cov_nljdgoezs().b[2][1]++, {})
    });
    const user =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[20]++, await User.create(userData));
    const token =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[21]++, generateToken(user._id));

    // Update last login
    /* istanbul ignore next */
    cov_nljdgoezs().s[22]++;
    user.lastLogin = new Date();
    /* istanbul ignore next */
    cov_nljdgoezs().s[23]++;
    await user.save();

    // Send welcome email
    /* istanbul ignore next */
    cov_nljdgoezs().s[24]++;
    try {
      /* istanbul ignore next */
      cov_nljdgoezs().s[25]++;
      if (user.wantsEmail('welcomeEmails')) {
        /* istanbul ignore next */
        cov_nljdgoezs().b[3][0]++;
        const {
          sendWelcomeEmail
        } =
        /* istanbul ignore next */
        (cov_nljdgoezs().s[26]++, require('../utils/emailService'));
        const welcomeData =
        /* istanbul ignore next */
        (cov_nljdgoezs().s[27]++, {
          firstName: user.firstName,
          email: user.email
        });
        const emailResult =
        /* istanbul ignore next */
        (cov_nljdgoezs().s[28]++, await sendWelcomeEmail(user.email, welcomeData));
        /* istanbul ignore next */
        cov_nljdgoezs().s[29]++;
        if (!emailResult.success) {
          /* istanbul ignore next */
          cov_nljdgoezs().b[4][0]++;
          cov_nljdgoezs().s[30]++;
          console.error('Failed to send welcome email:', emailResult.error);
        } else
        /* istanbul ignore next */
        {
          cov_nljdgoezs().b[4][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_nljdgoezs().b[3][1]++;
      }
    } catch (emailError) {
      /* istanbul ignore next */
      cov_nljdgoezs().s[31]++;
      console.error('Error sending welcome email:', emailError);
    }
    /* istanbul ignore next */
    cov_nljdgoezs().s[32]++;
    res.status(201).json({
      success: true,
      message: 'User registered successfully',
      token,
      user: user.toPublicJSON()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[33]++;
    console.error('Registration error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[34]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'REGISTRATION_ERROR',
        message: 'Failed to register user'
      }
    });
  }
});

// Login user
/* istanbul ignore next */
cov_nljdgoezs().s[35]++;
router.post('/login', validateLogin, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[2]++;
  cov_nljdgoezs().s[36]++;
  try {
    const errors =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[37]++, validationResult(req));
    /* istanbul ignore next */
    cov_nljdgoezs().s[38]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[5][0]++;
      cov_nljdgoezs().s[39]++;
      return res.status(400).json({
        success: false,
        error: {
          code: 'VALIDATION_ERROR',
          message: 'Invalid input data',
          details: errors.array()
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[5][1]++;
    }
    const {
      email,
      password
    } =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[40]++, req.body);

    // Find user and include password for comparison
    const user =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[41]++, await User.findOne({
      email,
      isActive: true
    }).select('+password'));
    /* istanbul ignore next */
    cov_nljdgoezs().s[42]++;
    if (!user) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[6][0]++;
      cov_nljdgoezs().s[43]++;
      return res.status(401).json({
        success: false,
        error: {
          code: 'INVALID_CREDENTIALS',
          message: 'Invalid email or password'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[6][1]++;
    }

    // Check password
    const isPasswordValid =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[44]++, await user.comparePassword(password));
    /* istanbul ignore next */
    cov_nljdgoezs().s[45]++;
    if (!isPasswordValid) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[7][0]++;
      cov_nljdgoezs().s[46]++;
      return res.status(401).json({
        success: false,
        error: {
          code: 'INVALID_CREDENTIALS',
          message: 'Invalid email or password'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[7][1]++;
    }

    // Generate token and update last login
    const token =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[47]++, generateToken(user._id));
    /* istanbul ignore next */
    cov_nljdgoezs().s[48]++;
    user.lastLogin = new Date();
    /* istanbul ignore next */
    cov_nljdgoezs().s[49]++;
    await user.save();
    /* istanbul ignore next */
    cov_nljdgoezs().s[50]++;
    res.json({
      success: true,
      message: 'Login successful',
      token,
      user: user.toPublicJSON()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[51]++;
    console.error('Login error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[52]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'LOGIN_ERROR',
        message: 'Failed to login'
      }
    });
  }
});

// Get user profile
/* istanbul ignore next */
cov_nljdgoezs().s[53]++;
router.get('/profile', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[3]++;
  cov_nljdgoezs().s[54]++;
  try {
    /* istanbul ignore next */
    cov_nljdgoezs().s[55]++;
    res.json({
      success: true,
      user: req.user.toPublicJSON()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[56]++;
    console.error('Profile fetch error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[57]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'PROFILE_ERROR',
        message: 'Failed to fetch profile'
      }
    });
  }
});

// Update user profile
/* istanbul ignore next */
cov_nljdgoezs().s[58]++;
router.put('/profile', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[4]++;
  cov_nljdgoezs().s[59]++;
  try {
    const {
      firstName,
      lastName,
      phone,
      preferences,
      addresses
    } =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[60]++, req.body);
    const updateData =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[61]++, {});
    /* istanbul ignore next */
    cov_nljdgoezs().s[62]++;
    if (firstName) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[8][0]++;
      cov_nljdgoezs().s[63]++;
      updateData.firstName = firstName.trim();
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[8][1]++;
    }
    cov_nljdgoezs().s[64]++;
    if (lastName) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[9][0]++;
      cov_nljdgoezs().s[65]++;
      updateData.lastName = lastName.trim();
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[9][1]++;
    }
    cov_nljdgoezs().s[66]++;
    if (phone) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[10][0]++;
      cov_nljdgoezs().s[67]++;
      updateData.phone = phone.trim();
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[10][1]++;
    }
    cov_nljdgoezs().s[68]++;
    if (preferences) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[11][0]++;
      cov_nljdgoezs().s[69]++;
      updateData.preferences = {
        ...req.user.preferences,
        ...preferences
      };
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[11][1]++;
    }

    // Handle addresses update
    cov_nljdgoezs().s[70]++;
    if (
    /* istanbul ignore next */
    (cov_nljdgoezs().b[13][0]++, addresses) &&
    /* istanbul ignore next */
    (cov_nljdgoezs().b[13][1]++, Array.isArray(addresses)) &&
    /* istanbul ignore next */
    (cov_nljdgoezs().b[13][2]++, addresses.length > 0)) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[12][0]++;
      const address =
      /* istanbul ignore next */
      (cov_nljdgoezs().s[71]++, addresses[0]); // Take the first address from the profile form

      // Find existing address or create new one
      const user =
      /* istanbul ignore next */
      (cov_nljdgoezs().s[72]++, await User.findById(req.user._id));
      let existingAddress =
      /* istanbul ignore next */
      (cov_nljdgoezs().s[73]++, user.addresses.find(addr => {
        /* istanbul ignore next */
        cov_nljdgoezs().f[5]++;
        cov_nljdgoezs().s[74]++;
        return addr.type === 'shipping';
      }));
      /* istanbul ignore next */
      cov_nljdgoezs().s[75]++;
      if (existingAddress) {
        /* istanbul ignore next */
        cov_nljdgoezs().b[14][0]++;
        cov_nljdgoezs().s[76]++;
        // Update existing address - only update if values are provided
        if (address.street !== undefined) {
          /* istanbul ignore next */
          cov_nljdgoezs().b[15][0]++;
          cov_nljdgoezs().s[77]++;
          existingAddress.street = address.street;
        } else
        /* istanbul ignore next */
        {
          cov_nljdgoezs().b[15][1]++;
        }
        cov_nljdgoezs().s[78]++;
        if (address.city !== undefined) {
          /* istanbul ignore next */
          cov_nljdgoezs().b[16][0]++;
          cov_nljdgoezs().s[79]++;
          existingAddress.city = address.city;
        } else
        /* istanbul ignore next */
        {
          cov_nljdgoezs().b[16][1]++;
        }
        cov_nljdgoezs().s[80]++;
        if (address.state !== undefined) {
          /* istanbul ignore next */
          cov_nljdgoezs().b[17][0]++;
          cov_nljdgoezs().s[81]++;
          existingAddress.state = address.state;
        } else
        /* istanbul ignore next */
        {
          cov_nljdgoezs().b[17][1]++;
        }
        cov_nljdgoezs().s[82]++;
        if (address.zipCode !== undefined) {
          /* istanbul ignore next */
          cov_nljdgoezs().b[18][0]++;
          cov_nljdgoezs().s[83]++;
          existingAddress.zipCode = address.zipCode;
        } else
        /* istanbul ignore next */
        {
          cov_nljdgoezs().b[18][1]++;
        }
        cov_nljdgoezs().s[84]++;
        if (address.country !== undefined) {
          /* istanbul ignore next */
          cov_nljdgoezs().b[19][0]++;
          cov_nljdgoezs().s[85]++;
          existingAddress.country = address.country;
        } else
        /* istanbul ignore next */
        {
          cov_nljdgoezs().b[19][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_nljdgoezs().b[14][1]++;
        cov_nljdgoezs().s[86]++;
        if (
        /* istanbul ignore next */
        (cov_nljdgoezs().b[21][0]++, address.street) &&
        /* istanbul ignore next */
        (cov_nljdgoezs().b[21][1]++, address.city) &&
        /* istanbul ignore next */
        (cov_nljdgoezs().b[21][2]++, address.state) &&
        /* istanbul ignore next */
        (cov_nljdgoezs().b[21][3]++, address.zipCode)) {
          /* istanbul ignore next */
          cov_nljdgoezs().b[20][0]++;
          cov_nljdgoezs().s[87]++;
          // Add new address only if all required fields are provided
          user.addresses.push({
            type: 'shipping',
            firstName:
            /* istanbul ignore next */
            (cov_nljdgoezs().b[22][0]++, firstName) ||
            /* istanbul ignore next */
            (cov_nljdgoezs().b[22][1]++, user.firstName),
            lastName:
            /* istanbul ignore next */
            (cov_nljdgoezs().b[23][0]++, lastName) ||
            /* istanbul ignore next */
            (cov_nljdgoezs().b[23][1]++, user.lastName),
            street: address.street,
            city: address.city,
            state: address.state,
            zipCode: address.zipCode,
            country:
            /* istanbul ignore next */
            (cov_nljdgoezs().b[24][0]++, address.country) ||
            /* istanbul ignore next */
            (cov_nljdgoezs().b[24][1]++, 'US'),
            isDefault: true
          });
        } else
        /* istanbul ignore next */
        {
          cov_nljdgoezs().b[20][1]++;
        }
      }
      /* istanbul ignore next */
      cov_nljdgoezs().s[88]++;
      await user.save();
      /* istanbul ignore next */
      cov_nljdgoezs().s[89]++;
      updateData.addresses = user.addresses;
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[12][1]++;
    }
    const updatedUser =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[90]++, await User.findByIdAndUpdate(req.user._id, updateData, {
      new: true,
      runValidators: true
    }));
    /* istanbul ignore next */
    cov_nljdgoezs().s[91]++;
    res.json({
      success: true,
      message: 'Profile updated successfully',
      user: updatedUser.toPublicJSON()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[92]++;
    console.error('Profile update error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[93]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'PROFILE_UPDATE_ERROR',
        message: 'Failed to update profile'
      }
    });
  }
});

// Add address
/* istanbul ignore next */
cov_nljdgoezs().s[94]++;
router.post('/addresses', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[6]++;
  cov_nljdgoezs().s[95]++;
  try {
    const {
      type,
      firstName,
      lastName,
      street,
      city,
      state,
      zipCode,
      country,
      phone,
      isDefault
    } =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[96]++, req.body);
    /* istanbul ignore next */
    cov_nljdgoezs().s[97]++;
    if (!['shipping', 'billing'].includes(type)) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[25][0]++;
      cov_nljdgoezs().s[98]++;
      return res.status(400).json({
        success: false,
        error: {
          code: 'INVALID_ADDRESS_TYPE',
          message: 'Address type must be shipping or billing'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[25][1]++;
    }
    const addressData =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[99]++, {
      type,
      firstName: firstName.trim(),
      lastName: lastName.trim(),
      street: street.trim(),
      city: city.trim(),
      state: state.trim(),
      zipCode: zipCode.trim(),
      country: country.trim(),
      phone: phone ?
      /* istanbul ignore next */
      (cov_nljdgoezs().b[26][0]++, phone.trim()) :
      /* istanbul ignore next */
      (cov_nljdgoezs().b[26][1]++, undefined),
      isDefault: Boolean(isDefault)
    });
    /* istanbul ignore next */
    cov_nljdgoezs().s[100]++;
    await req.user.addAddress(addressData);
    /* istanbul ignore next */
    cov_nljdgoezs().s[101]++;
    res.status(201).json({
      success: true,
      message: 'Address added successfully',
      user: req.user.toPublicJSON()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[102]++;
    console.error('Add address error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[103]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'ADDRESS_ADD_ERROR',
        message: 'Failed to add address'
      }
    });
  }
});

// Update address
/* istanbul ignore next */
cov_nljdgoezs().s[104]++;
router.put('/addresses/:addressId', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[7]++;
  cov_nljdgoezs().s[105]++;
  try {
    const {
      addressId
    } =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[106]++, req.params);
    const updateData =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[107]++, req.body);
    const result =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[108]++, await req.user.updateAddress(addressId, updateData));
    /* istanbul ignore next */
    cov_nljdgoezs().s[109]++;
    if (!result) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[27][0]++;
      cov_nljdgoezs().s[110]++;
      return res.status(404).json({
        success: false,
        error: {
          code: 'ADDRESS_NOT_FOUND',
          message: 'Address not found'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[27][1]++;
    }
    cov_nljdgoezs().s[111]++;
    res.json({
      success: true,
      message: 'Address updated successfully',
      user: req.user.toPublicJSON()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[112]++;
    console.error('Update address error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[113]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'ADDRESS_UPDATE_ERROR',
        message: 'Failed to update address'
      }
    });
  }
});

// Delete address
/* istanbul ignore next */
cov_nljdgoezs().s[114]++;
router.delete('/addresses/:addressId', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[8]++;
  cov_nljdgoezs().s[115]++;
  try {
    const {
      addressId
    } =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[116]++, req.params);
    /* istanbul ignore next */
    cov_nljdgoezs().s[117]++;
    await req.user.removeAddress(addressId);
    /* istanbul ignore next */
    cov_nljdgoezs().s[118]++;
    res.json({
      success: true,
      message: 'Address removed successfully',
      user: req.user.toPublicJSON()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[119]++;
    console.error('Remove address error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[120]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'ADDRESS_REMOVE_ERROR',
        message: 'Failed to remove address'
      }
    });
  }
});

// Get checkout preferences (addresses and settings)
/* istanbul ignore next */
cov_nljdgoezs().s[121]++;
router.get('/checkout-preferences', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[9]++;
  cov_nljdgoezs().s[122]++;
  try {
    const user =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[123]++, req.user);
    const preferences =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[124]++, {
      defaultShippingAddress: user.getDefaultShippingAddress(),
      defaultBillingAddress: user.getDefaultBillingAddress(),
      allAddresses: user.addresses,
      preferences: user.preferences,
      hasAddresses: user.addresses.length > 0,
      hasDefaultShipping: Boolean(user.getDefaultShippingAddress()),
      hasDefaultBilling: Boolean(user.getDefaultBillingAddress())
    });
    /* istanbul ignore next */
    cov_nljdgoezs().s[125]++;
    res.json({
      success: true,
      preferences
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[126]++;
    console.error('Checkout preferences error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[127]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'CHECKOUT_PREFERENCES_ERROR',
        message: 'Failed to fetch checkout preferences'
      }
    });
  }
});

// Logout (client-side token removal, but we can track it)
/* istanbul ignore next */
cov_nljdgoezs().s[128]++;
router.post('/logout', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[10]++;
  cov_nljdgoezs().s[129]++;
  try {
    /* istanbul ignore next */
    cov_nljdgoezs().s[130]++;
    // In a more sophisticated setup, you might want to blacklist the token
    // For now, we just acknowledge the logout
    res.json({
      success: true,
      message: 'Logged out successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[131]++;
    console.error('Logout error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[132]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'LOGOUT_ERROR',
        message: 'Failed to logout'
      }
    });
  }
});

// Password reset request
/* istanbul ignore next */
cov_nljdgoezs().s[133]++;
router.post('/forgot-password', async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[11]++;
  cov_nljdgoezs().s[134]++;
  try {
    const {
      email
    } =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[135]++, req.body);
    /* istanbul ignore next */
    cov_nljdgoezs().s[136]++;
    if (!email) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[28][0]++;
      cov_nljdgoezs().s[137]++;
      return res.status(400).json({
        success: false,
        error: {
          code: 'EMAIL_REQUIRED',
          message: 'Email is required'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[28][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[138]++, await User.findOne({
      email: email.toLowerCase(),
      isActive: true
    }));

    // Always return success to prevent email enumeration
    /* istanbul ignore next */
    cov_nljdgoezs().s[139]++;
    res.json({
      success: true,
      message: 'If an account with that email exists, a password reset link has been sent'
    });

    // Send password reset email if user exists
    /* istanbul ignore next */
    cov_nljdgoezs().s[140]++;
    if (
    /* istanbul ignore next */
    (cov_nljdgoezs().b[30][0]++, user) &&
    /* istanbul ignore next */
    (cov_nljdgoezs().b[30][1]++, user.wantsEmail('welcomeEmails'))) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[29][0]++;
      const crypto =
      /* istanbul ignore next */
      (cov_nljdgoezs().s[141]++, require('crypto'));
      const {
        sendPasswordResetEmail
      } =
      /* istanbul ignore next */
      (cov_nljdgoezs().s[142]++, require('../utils/emailService'));

      // Generate reset token
      const resetToken =
      /* istanbul ignore next */
      (cov_nljdgoezs().s[143]++, crypto.randomBytes(32).toString('hex'));
      const resetTokenExpiry =
      /* istanbul ignore next */
      (cov_nljdgoezs().s[144]++, new Date(Date.now() + 3600000)); // 1 hour from now

      // Save reset token to user (we need to add these fields to User model)
      /* istanbul ignore next */
      cov_nljdgoezs().s[145]++;
      user.passwordResetToken = resetToken;
      /* istanbul ignore next */
      cov_nljdgoezs().s[146]++;
      user.passwordResetExpiry = resetTokenExpiry;
      /* istanbul ignore next */
      cov_nljdgoezs().s[147]++;
      await user.save();

      // Create reset URL
      const resetUrl =
      /* istanbul ignore next */
      (cov_nljdgoezs().s[148]++, `${process.env.FRONTEND_URL}/reset-password?token=${resetToken}`);

      // Send email
      const emailResult =
      /* istanbul ignore next */
      (cov_nljdgoezs().s[149]++, await sendPasswordResetEmail(user.email, {
        firstName: user.firstName,
        resetToken,
        resetUrl
      }));
      /* istanbul ignore next */
      cov_nljdgoezs().s[150]++;
      if (!emailResult.success) {
        /* istanbul ignore next */
        cov_nljdgoezs().b[31][0]++;
        cov_nljdgoezs().s[151]++;
        console.error('Failed to send password reset email:', emailResult.error);
      } else
      /* istanbul ignore next */
      {
        cov_nljdgoezs().b[31][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[29][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[152]++;
    console.error('Password reset error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[153]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'PASSWORD_RESET_ERROR',
        message: 'Failed to process password reset request'
      }
    });
  }
});

// Reset password with token
/* istanbul ignore next */
cov_nljdgoezs().s[154]++;
router.post('/reset-password', async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[12]++;
  cov_nljdgoezs().s[155]++;
  try {
    const {
      token,
      newPassword
    } =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[156]++, req.body);
    /* istanbul ignore next */
    cov_nljdgoezs().s[157]++;
    if (
    /* istanbul ignore next */
    (cov_nljdgoezs().b[33][0]++, !token) ||
    /* istanbul ignore next */
    (cov_nljdgoezs().b[33][1]++, !newPassword)) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[32][0]++;
      cov_nljdgoezs().s[158]++;
      return res.status(400).json({
        success: false,
        error: {
          code: 'MISSING_FIELDS',
          message: 'Token and new password are required'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[32][1]++;
    }
    cov_nljdgoezs().s[159]++;
    if (newPassword.length < 6) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[34][0]++;
      cov_nljdgoezs().s[160]++;
      return res.status(400).json({
        success: false,
        error: {
          code: 'INVALID_PASSWORD',
          message: 'Password must be at least 6 characters long'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[34][1]++;
    }

    // Find user with valid reset token
    const user =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[161]++, await User.findOne({
      passwordResetToken: token,
      passwordResetExpiry: {
        $gt: new Date()
      },
      isActive: true
    }));
    /* istanbul ignore next */
    cov_nljdgoezs().s[162]++;
    if (!user) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[35][0]++;
      cov_nljdgoezs().s[163]++;
      return res.status(400).json({
        success: false,
        error: {
          code: 'INVALID_TOKEN',
          message: 'Invalid or expired reset token'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[35][1]++;
    }

    // Update password and clear reset token
    cov_nljdgoezs().s[164]++;
    user.password = newPassword;
    /* istanbul ignore next */
    cov_nljdgoezs().s[165]++;
    user.passwordResetToken = undefined;
    /* istanbul ignore next */
    cov_nljdgoezs().s[166]++;
    user.passwordResetExpiry = undefined;
    /* istanbul ignore next */
    cov_nljdgoezs().s[167]++;
    await user.save();
    /* istanbul ignore next */
    cov_nljdgoezs().s[168]++;
    res.json({
      success: true,
      message: 'Password reset successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[169]++;
    console.error('Password reset completion error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[170]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'PASSWORD_RESET_COMPLETION_ERROR',
        message: 'Failed to reset password'
      }
    });
  }
});

// Get email preferences
/* istanbul ignore next */
cov_nljdgoezs().s[171]++;
router.get('/email-preferences', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[13]++;
  cov_nljdgoezs().s[172]++;
  try {
    /* istanbul ignore next */
    cov_nljdgoezs().s[173]++;
    res.json({
      success: true,
      preferences: req.user.preferences.emailPreferences
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[174]++;
    console.error('Email preferences fetch error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[175]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'EMAIL_PREFERENCES_ERROR',
        message: 'Failed to fetch email preferences'
      }
    });
  }
});

// Update email preferences
/* istanbul ignore next */
cov_nljdgoezs().s[176]++;
router.put('/email-preferences', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[14]++;
  cov_nljdgoezs().s[177]++;
  try {
    const {
      emailPreferences
    } =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[178]++, req.body);
    /* istanbul ignore next */
    cov_nljdgoezs().s[179]++;
    if (
    /* istanbul ignore next */
    (cov_nljdgoezs().b[37][0]++, !emailPreferences) ||
    /* istanbul ignore next */
    (cov_nljdgoezs().b[37][1]++, typeof emailPreferences !== 'object')) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[36][0]++;
      cov_nljdgoezs().s[180]++;
      return res.status(400).json({
        success: false,
        error: {
          code: 'INVALID_PREFERENCES',
          message: 'Valid email preferences object is required'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[36][1]++;
    }

    // Validate preference keys
    const validPreferences =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[181]++, ['orderConfirmations', 'paymentReceipts', 'orderUpdates', 'promotionalEmails', 'welcomeEmails']);
    const invalidKeys =
    /* istanbul ignore next */
    (cov_nljdgoezs().s[182]++, Object.keys(emailPreferences).filter(key => {
      /* istanbul ignore next */
      cov_nljdgoezs().f[15]++;
      cov_nljdgoezs().s[183]++;
      return !validPreferences.includes(key);
    }));
    /* istanbul ignore next */
    cov_nljdgoezs().s[184]++;
    if (invalidKeys.length > 0) {
      /* istanbul ignore next */
      cov_nljdgoezs().b[38][0]++;
      cov_nljdgoezs().s[185]++;
      return res.status(400).json({
        success: false,
        error: {
          code: 'INVALID_PREFERENCE_KEYS',
          message: `Invalid preference keys: ${invalidKeys.join(', ')}`
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_nljdgoezs().b[38][1]++;
    }
    cov_nljdgoezs().s[186]++;
    await req.user.updateEmailPreferences(emailPreferences);
    /* istanbul ignore next */
    cov_nljdgoezs().s[187]++;
    res.json({
      success: true,
      message: 'Email preferences updated successfully',
      preferences: req.user.preferences.emailPreferences
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_nljdgoezs().s[188]++;
    console.error('Email preferences update error:', error);
    /* istanbul ignore next */
    cov_nljdgoezs().s[189]++;
    res.status(500).json({
      success: false,
      error: {
        code: 'EMAIL_PREFERENCES_UPDATE_ERROR',
        message: 'Failed to update email preferences'
      }
    });
  }
});

// Test route to trigger hook
/* istanbul ignore next */
cov_nljdgoezs().s[190]++;
router.get('/test', (req, res) => {
  /* istanbul ignore next */
  cov_nljdgoezs().f[16]++;
  cov_nljdgoezs().s[191]++;
  res.json({
    message: 'Auth test endpoint'
  });
});
/* istanbul ignore next */
cov_nljdgoezs().s[192]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbmxqZGdvZXpzIiwiYWN0dWFsQ292ZXJhZ2UiLCJleHByZXNzIiwicyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJqd3QiLCJib2R5IiwidmFsaWRhdGlvblJlc3VsdCIsIlVzZXIiLCJyZXF1aXJlQXV0aCIsImdlbmVyYXRlVG9rZW4iLCJ1c2VySWQiLCJmIiwic2lnbiIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwiZXhwaXJlc0luIiwidmFsaWRhdGVSZWdpc3RyYXRpb24iLCJpc0VtYWlsIiwibm9ybWFsaXplRW1haWwiLCJ3aXRoTWVzc2FnZSIsImlzTGVuZ3RoIiwibWluIiwidHJpbSIsIm1heCIsIm9wdGlvbmFsIiwiaXNNb2JpbGVQaG9uZSIsInZhbGlkYXRlTG9naW4iLCJub3RFbXB0eSIsInBvc3QiLCJyZXEiLCJyZXMiLCJlcnJvcnMiLCJpc0VtcHR5IiwiYiIsInN0YXR1cyIsImpzb24iLCJzdWNjZXNzIiwiZXJyb3IiLCJjb2RlIiwibWVzc2FnZSIsImRldGFpbHMiLCJhcnJheSIsImVtYWlsIiwicGFzc3dvcmQiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInBob25lIiwicHJlZmVyZW5jZXMiLCJleGlzdGluZ1VzZXIiLCJmaW5kT25lIiwidXNlckRhdGEiLCJ1c2VyIiwiY3JlYXRlIiwidG9rZW4iLCJfaWQiLCJsYXN0TG9naW4iLCJEYXRlIiwic2F2ZSIsIndhbnRzRW1haWwiLCJzZW5kV2VsY29tZUVtYWlsIiwid2VsY29tZURhdGEiLCJlbWFpbFJlc3VsdCIsImNvbnNvbGUiLCJlbWFpbEVycm9yIiwidG9QdWJsaWNKU09OIiwiaXNBY3RpdmUiLCJzZWxlY3QiLCJpc1Bhc3N3b3JkVmFsaWQiLCJjb21wYXJlUGFzc3dvcmQiLCJnZXQiLCJwdXQiLCJhZGRyZXNzZXMiLCJ1cGRhdGVEYXRhIiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwiYWRkcmVzcyIsImZpbmRCeUlkIiwiZXhpc3RpbmdBZGRyZXNzIiwiZmluZCIsImFkZHIiLCJ0eXBlIiwic3RyZWV0IiwidW5kZWZpbmVkIiwiY2l0eSIsInN0YXRlIiwiemlwQ29kZSIsImNvdW50cnkiLCJwdXNoIiwiaXNEZWZhdWx0IiwidXBkYXRlZFVzZXIiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsIm5ldyIsInJ1blZhbGlkYXRvcnMiLCJpbmNsdWRlcyIsImFkZHJlc3NEYXRhIiwiQm9vbGVhbiIsImFkZEFkZHJlc3MiLCJhZGRyZXNzSWQiLCJwYXJhbXMiLCJyZXN1bHQiLCJ1cGRhdGVBZGRyZXNzIiwiZGVsZXRlIiwicmVtb3ZlQWRkcmVzcyIsImRlZmF1bHRTaGlwcGluZ0FkZHJlc3MiLCJnZXREZWZhdWx0U2hpcHBpbmdBZGRyZXNzIiwiZGVmYXVsdEJpbGxpbmdBZGRyZXNzIiwiZ2V0RGVmYXVsdEJpbGxpbmdBZGRyZXNzIiwiYWxsQWRkcmVzc2VzIiwiaGFzQWRkcmVzc2VzIiwiaGFzRGVmYXVsdFNoaXBwaW5nIiwiaGFzRGVmYXVsdEJpbGxpbmciLCJ0b0xvd2VyQ2FzZSIsImNyeXB0byIsInNlbmRQYXNzd29yZFJlc2V0RW1haWwiLCJyZXNldFRva2VuIiwicmFuZG9tQnl0ZXMiLCJ0b1N0cmluZyIsInJlc2V0VG9rZW5FeHBpcnkiLCJub3ciLCJwYXNzd29yZFJlc2V0VG9rZW4iLCJwYXNzd29yZFJlc2V0RXhwaXJ5IiwicmVzZXRVcmwiLCJGUk9OVEVORF9VUkwiLCJuZXdQYXNzd29yZCIsIiRndCIsImVtYWlsUHJlZmVyZW5jZXMiLCJ2YWxpZFByZWZlcmVuY2VzIiwiaW52YWxpZEtleXMiLCJPYmplY3QiLCJrZXlzIiwiZmlsdGVyIiwia2V5Iiwiam9pbiIsInVwZGF0ZUVtYWlsUHJlZmVyZW5jZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiYXV0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xuY29uc3QgeyBib2R5LCB2YWxpZGF0aW9uUmVzdWx0IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvcicpO1xuY29uc3QgVXNlciA9IHJlcXVpcmUoJy4uL21vZGVscy9Vc2VyJyk7XG5jb25zdCB7IHJlcXVpcmVBdXRoIH0gPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlL2F1dGgnKTtcblxuLy8gR2VuZXJhdGUgSldUIHRva2VuXG5jb25zdCBnZW5lcmF0ZVRva2VuID0gKHVzZXJJZCkgPT4ge1xuICByZXR1cm4gand0LnNpZ24oeyB1c2VySWQgfSwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCwgeyBleHBpcmVzSW46ICc3ZCcgfSk7XG59O1xuXG4vLyBWYWxpZGF0aW9uIG1pZGRsZXdhcmUgZm9yIHJlZ2lzdHJhdGlvblxuY29uc3QgdmFsaWRhdGVSZWdpc3RyYXRpb24gPSBbXG4gIGJvZHkoJ2VtYWlsJylcbiAgICAuaXNFbWFpbCgpXG4gICAgLm5vcm1hbGl6ZUVtYWlsKClcbiAgICAud2l0aE1lc3NhZ2UoJ1ZhbGlkIGVtYWlsIGlzIHJlcXVpcmVkJyksXG4gIGJvZHkoJ3Bhc3N3b3JkJylcbiAgICAuaXNMZW5ndGgoeyBtaW46IDYgfSlcbiAgICAud2l0aE1lc3NhZ2UoJ1Bhc3N3b3JkIG11c3QgYmUgYXQgbGVhc3QgNiBjaGFyYWN0ZXJzIGxvbmcnKSxcbiAgYm9keSgnZmlyc3ROYW1lJylcbiAgICAudHJpbSgpXG4gICAgLmlzTGVuZ3RoKHsgbWluOiAxLCBtYXg6IDUwIH0pXG4gICAgLndpdGhNZXNzYWdlKCdGaXJzdCBuYW1lIGlzIHJlcXVpcmVkIGFuZCBtdXN0IGJlIGxlc3MgdGhhbiA1MCBjaGFyYWN0ZXJzJyksXG4gIGJvZHkoJ2xhc3ROYW1lJylcbiAgICAudHJpbSgpXG4gICAgLmlzTGVuZ3RoKHsgbWluOiAxLCBtYXg6IDUwIH0pXG4gICAgLndpdGhNZXNzYWdlKCdMYXN0IG5hbWUgaXMgcmVxdWlyZWQgYW5kIG11c3QgYmUgbGVzcyB0aGFuIDUwIGNoYXJhY3RlcnMnKSxcbiAgYm9keSgncGhvbmUnKVxuICAgIC5vcHRpb25hbCgpXG4gICAgLmlzTW9iaWxlUGhvbmUoKVxuICAgIC53aXRoTWVzc2FnZSgnVmFsaWQgcGhvbmUgbnVtYmVyIGlzIHJlcXVpcmVkJylcbl07XG5cbi8vIFZhbGlkYXRpb24gbWlkZGxld2FyZSBmb3IgbG9naW5cbmNvbnN0IHZhbGlkYXRlTG9naW4gPSBbXG4gIGJvZHkoJ2VtYWlsJylcbiAgICAuaXNFbWFpbCgpXG4gICAgLm5vcm1hbGl6ZUVtYWlsKClcbiAgICAud2l0aE1lc3NhZ2UoJ1ZhbGlkIGVtYWlsIGlzIHJlcXVpcmVkJyksXG4gIGJvZHkoJ3Bhc3N3b3JkJylcbiAgICAubm90RW1wdHkoKVxuICAgIC53aXRoTWVzc2FnZSgnUGFzc3dvcmQgaXMgcmVxdWlyZWQnKVxuXTtcblxuLy8gUmVnaXN0ZXIgbmV3IHVzZXJcbnJvdXRlci5wb3N0KCcvcmVnaXN0ZXInLCB2YWxpZGF0ZVJlZ2lzdHJhdGlvbiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgZXJyb3JzID0gdmFsaWRhdGlvblJlc3VsdChyZXEpO1xuICAgIGlmICghZXJyb3JzLmlzRW1wdHkoKSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgY29kZTogJ1ZBTElEQVRJT05fRVJST1InLFxuICAgICAgICAgIG1lc3NhZ2U6ICdJbnZhbGlkIGlucHV0IGRhdGEnLFxuICAgICAgICAgIGRldGFpbHM6IGVycm9ycy5hcnJheSgpXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBwaG9uZSwgcHJlZmVyZW5jZXMgfSA9IHJlcS5ib2R5O1xuXG4gICAgLy8gQ2hlY2sgaWYgdXNlciBhbHJlYWR5IGV4aXN0c1xuICAgIGNvbnN0IGV4aXN0aW5nVXNlciA9IGF3YWl0IFVzZXIuZmluZE9uZSh7IGVtYWlsIH0pO1xuICAgIGlmIChleGlzdGluZ1VzZXIpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwOSkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjoge1xuICAgICAgICAgIGNvZGU6ICdVU0VSX0VYSVNUUycsXG4gICAgICAgICAgbWVzc2FnZTogJ1VzZXIgd2l0aCB0aGlzIGVtYWlsIGFscmVhZHkgZXhpc3RzJ1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBDcmVhdGUgbmV3IHVzZXJcbiAgICBjb25zdCB1c2VyRGF0YSA9IHtcbiAgICAgIGVtYWlsLFxuICAgICAgcGFzc3dvcmQsXG4gICAgICBmaXJzdE5hbWUsXG4gICAgICBsYXN0TmFtZSxcbiAgICAgIHBob25lLFxuICAgICAgcHJlZmVyZW5jZXM6IHByZWZlcmVuY2VzIHx8IHt9XG4gICAgfTtcblxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmNyZWF0ZSh1c2VyRGF0YSk7XG4gICAgY29uc3QgdG9rZW4gPSBnZW5lcmF0ZVRva2VuKHVzZXIuX2lkKTtcblxuICAgIC8vIFVwZGF0ZSBsYXN0IGxvZ2luXG4gICAgdXNlci5sYXN0TG9naW4gPSBuZXcgRGF0ZSgpO1xuICAgIGF3YWl0IHVzZXIuc2F2ZSgpO1xuXG4gICAgLy8gU2VuZCB3ZWxjb21lIGVtYWlsXG4gICAgdHJ5IHtcbiAgICAgIGlmICh1c2VyLndhbnRzRW1haWwoJ3dlbGNvbWVFbWFpbHMnKSkge1xuICAgICAgICBjb25zdCB7IHNlbmRXZWxjb21lRW1haWwgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2VtYWlsU2VydmljZScpO1xuICAgICAgICBcbiAgICAgICAgY29uc3Qgd2VsY29tZURhdGEgPSB7XG4gICAgICAgICAgZmlyc3ROYW1lOiB1c2VyLmZpcnN0TmFtZSxcbiAgICAgICAgICBlbWFpbDogdXNlci5lbWFpbFxuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IGVtYWlsUmVzdWx0ID0gYXdhaXQgc2VuZFdlbGNvbWVFbWFpbCh1c2VyLmVtYWlsLCB3ZWxjb21lRGF0YSk7XG4gICAgICAgIGlmICghZW1haWxSZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBzZW5kIHdlbGNvbWUgZW1haWw6JywgZW1haWxSZXN1bHQuZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZW1haWxFcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igc2VuZGluZyB3ZWxjb21lIGVtYWlsOicsIGVtYWlsRXJyb3IpO1xuICAgIH1cblxuICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBtZXNzYWdlOiAnVXNlciByZWdpc3RlcmVkIHN1Y2Nlc3NmdWxseScsXG4gICAgICB0b2tlbixcbiAgICAgIHVzZXI6IHVzZXIudG9QdWJsaWNKU09OKClcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1JlZ2lzdHJhdGlvbiBlcnJvcjonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjoge1xuICAgICAgICBjb2RlOiAnUkVHSVNUUkFUSU9OX0VSUk9SJyxcbiAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byByZWdpc3RlciB1c2VyJ1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59KTtcblxuLy8gTG9naW4gdXNlclxucm91dGVyLnBvc3QoJy9sb2dpbicsIHZhbGlkYXRlTG9naW4sIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGVycm9ycyA9IHZhbGlkYXRpb25SZXN1bHQocmVxKTtcbiAgICBpZiAoIWVycm9ycy5pc0VtcHR5KCkpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjoge1xuICAgICAgICAgIGNvZGU6ICdWQUxJREFUSU9OX0VSUk9SJyxcbiAgICAgICAgICBtZXNzYWdlOiAnSW52YWxpZCBpbnB1dCBkYXRhJyxcbiAgICAgICAgICBkZXRhaWxzOiBlcnJvcnMuYXJyYXkoKVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCB9ID0gcmVxLmJvZHk7XG5cbiAgICAvLyBGaW5kIHVzZXIgYW5kIGluY2x1ZGUgcGFzc3dvcmQgZm9yIGNvbXBhcmlzb25cbiAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kT25lKHsgZW1haWwsIGlzQWN0aXZlOiB0cnVlIH0pLnNlbGVjdCgnK3Bhc3N3b3JkJyk7XG4gICAgaWYgKCF1c2VyKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICBjb2RlOiAnSU5WQUxJRF9DUkVERU5USUFMUycsXG4gICAgICAgICAgbWVzc2FnZTogJ0ludmFsaWQgZW1haWwgb3IgcGFzc3dvcmQnXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIENoZWNrIHBhc3N3b3JkXG4gICAgY29uc3QgaXNQYXNzd29yZFZhbGlkID0gYXdhaXQgdXNlci5jb21wYXJlUGFzc3dvcmQocGFzc3dvcmQpO1xuICAgIGlmICghaXNQYXNzd29yZFZhbGlkKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICBjb2RlOiAnSU5WQUxJRF9DUkVERU5USUFMUycsXG4gICAgICAgICAgbWVzc2FnZTogJ0ludmFsaWQgZW1haWwgb3IgcGFzc3dvcmQnXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEdlbmVyYXRlIHRva2VuIGFuZCB1cGRhdGUgbGFzdCBsb2dpblxuICAgIGNvbnN0IHRva2VuID0gZ2VuZXJhdGVUb2tlbih1c2VyLl9pZCk7XG4gICAgdXNlci5sYXN0TG9naW4gPSBuZXcgRGF0ZSgpO1xuICAgIGF3YWl0IHVzZXIuc2F2ZSgpO1xuXG4gICAgcmVzLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdMb2dpbiBzdWNjZXNzZnVsJyxcbiAgICAgIHRva2VuLFxuICAgICAgdXNlcjogdXNlci50b1B1YmxpY0pTT04oKVxuICAgIH0pO1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignTG9naW4gZXJyb3I6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IHtcbiAgICAgICAgY29kZTogJ0xPR0lOX0VSUk9SJyxcbiAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBsb2dpbidcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufSk7XG5cbi8vIEdldCB1c2VyIHByb2ZpbGVcbnJvdXRlci5nZXQoJy9wcm9maWxlJywgcmVxdWlyZUF1dGgsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIHJlcy5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICB1c2VyOiByZXEudXNlci50b1B1YmxpY0pTT04oKVxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1Byb2ZpbGUgZmV0Y2ggZXJyb3I6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IHtcbiAgICAgICAgY29kZTogJ1BST0ZJTEVfRVJST1InLFxuICAgICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIGZldGNoIHByb2ZpbGUnXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBVcGRhdGUgdXNlciBwcm9maWxlXG5yb3V0ZXIucHV0KCcvcHJvZmlsZScsIHJlcXVpcmVBdXRoLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGZpcnN0TmFtZSwgbGFzdE5hbWUsIHBob25lLCBwcmVmZXJlbmNlcywgYWRkcmVzc2VzIH0gPSByZXEuYm9keTtcbiAgICBcbiAgICBjb25zdCB1cGRhdGVEYXRhID0ge307XG4gICAgaWYgKGZpcnN0TmFtZSkgdXBkYXRlRGF0YS5maXJzdE5hbWUgPSBmaXJzdE5hbWUudHJpbSgpO1xuICAgIGlmIChsYXN0TmFtZSkgdXBkYXRlRGF0YS5sYXN0TmFtZSA9IGxhc3ROYW1lLnRyaW0oKTtcbiAgICBpZiAocGhvbmUpIHVwZGF0ZURhdGEucGhvbmUgPSBwaG9uZS50cmltKCk7XG4gICAgaWYgKHByZWZlcmVuY2VzKSB1cGRhdGVEYXRhLnByZWZlcmVuY2VzID0geyAuLi5yZXEudXNlci5wcmVmZXJlbmNlcywgLi4ucHJlZmVyZW5jZXMgfTtcbiAgICBcbiAgICAvLyBIYW5kbGUgYWRkcmVzc2VzIHVwZGF0ZVxuICAgIGlmIChhZGRyZXNzZXMgJiYgQXJyYXkuaXNBcnJheShhZGRyZXNzZXMpICYmIGFkZHJlc3Nlcy5sZW5ndGggPiAwKSB7XG4gICAgICBjb25zdCBhZGRyZXNzID0gYWRkcmVzc2VzWzBdOyAvLyBUYWtlIHRoZSBmaXJzdCBhZGRyZXNzIGZyb20gdGhlIHByb2ZpbGUgZm9ybVxuICAgICAgXG4gICAgICAvLyBGaW5kIGV4aXN0aW5nIGFkZHJlc3Mgb3IgY3JlYXRlIG5ldyBvbmVcbiAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRCeUlkKHJlcS51c2VyLl9pZCk7XG4gICAgICBsZXQgZXhpc3RpbmdBZGRyZXNzID0gdXNlci5hZGRyZXNzZXMuZmluZChhZGRyID0+IGFkZHIudHlwZSA9PT0gJ3NoaXBwaW5nJyk7XG4gICAgICBcbiAgICAgIGlmIChleGlzdGluZ0FkZHJlc3MpIHtcbiAgICAgICAgLy8gVXBkYXRlIGV4aXN0aW5nIGFkZHJlc3MgLSBvbmx5IHVwZGF0ZSBpZiB2YWx1ZXMgYXJlIHByb3ZpZGVkXG4gICAgICAgIGlmIChhZGRyZXNzLnN0cmVldCAhPT0gdW5kZWZpbmVkKSBleGlzdGluZ0FkZHJlc3Muc3RyZWV0ID0gYWRkcmVzcy5zdHJlZXQ7XG4gICAgICAgIGlmIChhZGRyZXNzLmNpdHkgIT09IHVuZGVmaW5lZCkgZXhpc3RpbmdBZGRyZXNzLmNpdHkgPSBhZGRyZXNzLmNpdHk7XG4gICAgICAgIGlmIChhZGRyZXNzLnN0YXRlICE9PSB1bmRlZmluZWQpIGV4aXN0aW5nQWRkcmVzcy5zdGF0ZSA9IGFkZHJlc3Muc3RhdGU7XG4gICAgICAgIGlmIChhZGRyZXNzLnppcENvZGUgIT09IHVuZGVmaW5lZCkgZXhpc3RpbmdBZGRyZXNzLnppcENvZGUgPSBhZGRyZXNzLnppcENvZGU7XG4gICAgICAgIGlmIChhZGRyZXNzLmNvdW50cnkgIT09IHVuZGVmaW5lZCkgZXhpc3RpbmdBZGRyZXNzLmNvdW50cnkgPSBhZGRyZXNzLmNvdW50cnk7XG4gICAgICB9IGVsc2UgaWYgKGFkZHJlc3Muc3RyZWV0ICYmIGFkZHJlc3MuY2l0eSAmJiBhZGRyZXNzLnN0YXRlICYmIGFkZHJlc3MuemlwQ29kZSkge1xuICAgICAgICAvLyBBZGQgbmV3IGFkZHJlc3Mgb25seSBpZiBhbGwgcmVxdWlyZWQgZmllbGRzIGFyZSBwcm92aWRlZFxuICAgICAgICB1c2VyLmFkZHJlc3Nlcy5wdXNoKHtcbiAgICAgICAgICB0eXBlOiAnc2hpcHBpbmcnLFxuICAgICAgICAgIGZpcnN0TmFtZTogZmlyc3ROYW1lIHx8IHVzZXIuZmlyc3ROYW1lLFxuICAgICAgICAgIGxhc3ROYW1lOiBsYXN0TmFtZSB8fCB1c2VyLmxhc3ROYW1lLFxuICAgICAgICAgIHN0cmVldDogYWRkcmVzcy5zdHJlZXQsXG4gICAgICAgICAgY2l0eTogYWRkcmVzcy5jaXR5LFxuICAgICAgICAgIHN0YXRlOiBhZGRyZXNzLnN0YXRlLFxuICAgICAgICAgIHppcENvZGU6IGFkZHJlc3MuemlwQ29kZSxcbiAgICAgICAgICBjb3VudHJ5OiBhZGRyZXNzLmNvdW50cnkgfHwgJ1VTJyxcbiAgICAgICAgICBpc0RlZmF1bHQ6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGF3YWl0IHVzZXIuc2F2ZSgpO1xuICAgICAgdXBkYXRlRGF0YS5hZGRyZXNzZXMgPSB1c2VyLmFkZHJlc3NlcztcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVkVXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWRBbmRVcGRhdGUoXG4gICAgICByZXEudXNlci5faWQsXG4gICAgICB1cGRhdGVEYXRhLFxuICAgICAgeyBuZXc6IHRydWUsIHJ1blZhbGlkYXRvcnM6IHRydWUgfVxuICAgICk7XG5cbiAgICByZXMuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ1Byb2ZpbGUgdXBkYXRlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgdXNlcjogdXBkYXRlZFVzZXIudG9QdWJsaWNKU09OKClcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1Byb2ZpbGUgdXBkYXRlIGVycm9yOicsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiB7XG4gICAgICAgIGNvZGU6ICdQUk9GSUxFX1VQREFURV9FUlJPUicsXG4gICAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gdXBkYXRlIHByb2ZpbGUnXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBBZGQgYWRkcmVzc1xucm91dGVyLnBvc3QoJy9hZGRyZXNzZXMnLCByZXF1aXJlQXV0aCwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyB0eXBlLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBzdHJlZXQsIGNpdHksIHN0YXRlLCB6aXBDb2RlLCBjb3VudHJ5LCBwaG9uZSwgaXNEZWZhdWx0IH0gPSByZXEuYm9keTtcblxuICAgIGlmICghWydzaGlwcGluZycsICdiaWxsaW5nJ10uaW5jbHVkZXModHlwZSkpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjoge1xuICAgICAgICAgIGNvZGU6ICdJTlZBTElEX0FERFJFU1NfVFlQRScsXG4gICAgICAgICAgbWVzc2FnZTogJ0FkZHJlc3MgdHlwZSBtdXN0IGJlIHNoaXBwaW5nIG9yIGJpbGxpbmcnXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGFkZHJlc3NEYXRhID0ge1xuICAgICAgdHlwZSxcbiAgICAgIGZpcnN0TmFtZTogZmlyc3ROYW1lLnRyaW0oKSxcbiAgICAgIGxhc3ROYW1lOiBsYXN0TmFtZS50cmltKCksXG4gICAgICBzdHJlZXQ6IHN0cmVldC50cmltKCksXG4gICAgICBjaXR5OiBjaXR5LnRyaW0oKSxcbiAgICAgIHN0YXRlOiBzdGF0ZS50cmltKCksXG4gICAgICB6aXBDb2RlOiB6aXBDb2RlLnRyaW0oKSxcbiAgICAgIGNvdW50cnk6IGNvdW50cnkudHJpbSgpLFxuICAgICAgcGhvbmU6IHBob25lID8gcGhvbmUudHJpbSgpIDogdW5kZWZpbmVkLFxuICAgICAgaXNEZWZhdWx0OiBCb29sZWFuKGlzRGVmYXVsdClcbiAgICB9O1xuXG4gICAgYXdhaXQgcmVxLnVzZXIuYWRkQWRkcmVzcyhhZGRyZXNzRGF0YSk7XG5cbiAgICByZXMuc3RhdHVzKDIwMSkuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ0FkZHJlc3MgYWRkZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICAgIHVzZXI6IHJlcS51c2VyLnRvUHVibGljSlNPTigpXG4gICAgfSk7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdBZGQgYWRkcmVzcyBlcnJvcjonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjoge1xuICAgICAgICBjb2RlOiAnQUREUkVTU19BRERfRVJST1InLFxuICAgICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIGFkZCBhZGRyZXNzJ1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59KTtcblxuLy8gVXBkYXRlIGFkZHJlc3NcbnJvdXRlci5wdXQoJy9hZGRyZXNzZXMvOmFkZHJlc3NJZCcsIHJlcXVpcmVBdXRoLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGFkZHJlc3NJZCB9ID0gcmVxLnBhcmFtcztcbiAgICBjb25zdCB1cGRhdGVEYXRhID0gcmVxLmJvZHk7XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXEudXNlci51cGRhdGVBZGRyZXNzKGFkZHJlc3NJZCwgdXBkYXRlRGF0YSk7XG4gICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjoge1xuICAgICAgICAgIGNvZGU6ICdBRERSRVNTX05PVF9GT1VORCcsXG4gICAgICAgICAgbWVzc2FnZTogJ0FkZHJlc3Mgbm90IGZvdW5kJ1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXMuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ0FkZHJlc3MgdXBkYXRlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgdXNlcjogcmVxLnVzZXIudG9QdWJsaWNKU09OKClcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1VwZGF0ZSBhZGRyZXNzIGVycm9yOicsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiB7XG4gICAgICAgIGNvZGU6ICdBRERSRVNTX1VQREFURV9FUlJPUicsXG4gICAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gdXBkYXRlIGFkZHJlc3MnXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBEZWxldGUgYWRkcmVzc1xucm91dGVyLmRlbGV0ZSgnL2FkZHJlc3Nlcy86YWRkcmVzc0lkJywgcmVxdWlyZUF1dGgsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgYWRkcmVzc0lkIH0gPSByZXEucGFyYW1zO1xuXG4gICAgYXdhaXQgcmVxLnVzZXIucmVtb3ZlQWRkcmVzcyhhZGRyZXNzSWQpO1xuXG4gICAgcmVzLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdBZGRyZXNzIHJlbW92ZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICAgIHVzZXI6IHJlcS51c2VyLnRvUHVibGljSlNPTigpXG4gICAgfSk7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdSZW1vdmUgYWRkcmVzcyBlcnJvcjonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjoge1xuICAgICAgICBjb2RlOiAnQUREUkVTU19SRU1PVkVfRVJST1InLFxuICAgICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIHJlbW92ZSBhZGRyZXNzJ1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59KTtcblxuLy8gR2V0IGNoZWNrb3V0IHByZWZlcmVuY2VzIChhZGRyZXNzZXMgYW5kIHNldHRpbmdzKVxucm91dGVyLmdldCgnL2NoZWNrb3V0LXByZWZlcmVuY2VzJywgcmVxdWlyZUF1dGgsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHVzZXIgPSByZXEudXNlcjtcbiAgICBcbiAgICBjb25zdCBwcmVmZXJlbmNlcyA9IHtcbiAgICAgIGRlZmF1bHRTaGlwcGluZ0FkZHJlc3M6IHVzZXIuZ2V0RGVmYXVsdFNoaXBwaW5nQWRkcmVzcygpLFxuICAgICAgZGVmYXVsdEJpbGxpbmdBZGRyZXNzOiB1c2VyLmdldERlZmF1bHRCaWxsaW5nQWRkcmVzcygpLFxuICAgICAgYWxsQWRkcmVzc2VzOiB1c2VyLmFkZHJlc3NlcyxcbiAgICAgIHByZWZlcmVuY2VzOiB1c2VyLnByZWZlcmVuY2VzLFxuICAgICAgaGFzQWRkcmVzc2VzOiB1c2VyLmFkZHJlc3Nlcy5sZW5ndGggPiAwLFxuICAgICAgaGFzRGVmYXVsdFNoaXBwaW5nOiBCb29sZWFuKHVzZXIuZ2V0RGVmYXVsdFNoaXBwaW5nQWRkcmVzcygpKSxcbiAgICAgIGhhc0RlZmF1bHRCaWxsaW5nOiBCb29sZWFuKHVzZXIuZ2V0RGVmYXVsdEJpbGxpbmdBZGRyZXNzKCkpXG4gICAgfTtcblxuICAgIHJlcy5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBwcmVmZXJlbmNlc1xuICAgIH0pO1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQ2hlY2tvdXQgcHJlZmVyZW5jZXMgZXJyb3I6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IHtcbiAgICAgICAgY29kZTogJ0NIRUNLT1VUX1BSRUZFUkVOQ0VTX0VSUk9SJyxcbiAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBmZXRjaCBjaGVja291dCBwcmVmZXJlbmNlcydcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufSk7XG5cbi8vIExvZ291dCAoY2xpZW50LXNpZGUgdG9rZW4gcmVtb3ZhbCwgYnV0IHdlIGNhbiB0cmFjayBpdClcbnJvdXRlci5wb3N0KCcvbG9nb3V0JywgcmVxdWlyZUF1dGgsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIC8vIEluIGEgbW9yZSBzb3BoaXN0aWNhdGVkIHNldHVwLCB5b3UgbWlnaHQgd2FudCB0byBibGFja2xpc3QgdGhlIHRva2VuXG4gICAgLy8gRm9yIG5vdywgd2UganVzdCBhY2tub3dsZWRnZSB0aGUgbG9nb3V0XG4gICAgcmVzLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdMb2dnZWQgb3V0IHN1Y2Nlc3NmdWxseSdcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdMb2dvdXQgZXJyb3I6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IHtcbiAgICAgICAgY29kZTogJ0xPR09VVF9FUlJPUicsXG4gICAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gbG9nb3V0J1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59KTtcblxuLy8gUGFzc3dvcmQgcmVzZXQgcmVxdWVzdFxucm91dGVyLnBvc3QoJy9mb3Jnb3QtcGFzc3dvcmQnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGVtYWlsIH0gPSByZXEuYm9keTtcblxuICAgIGlmICghZW1haWwpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjoge1xuICAgICAgICAgIGNvZGU6ICdFTUFJTF9SRVFVSVJFRCcsXG4gICAgICAgICAgbWVzc2FnZTogJ0VtYWlsIGlzIHJlcXVpcmVkJ1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kT25lKHsgZW1haWw6IGVtYWlsLnRvTG93ZXJDYXNlKCksIGlzQWN0aXZlOiB0cnVlIH0pO1xuICAgIFxuICAgIC8vIEFsd2F5cyByZXR1cm4gc3VjY2VzcyB0byBwcmV2ZW50IGVtYWlsIGVudW1lcmF0aW9uXG4gICAgcmVzLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdJZiBhbiBhY2NvdW50IHdpdGggdGhhdCBlbWFpbCBleGlzdHMsIGEgcGFzc3dvcmQgcmVzZXQgbGluayBoYXMgYmVlbiBzZW50J1xuICAgIH0pO1xuXG4gICAgLy8gU2VuZCBwYXNzd29yZCByZXNldCBlbWFpbCBpZiB1c2VyIGV4aXN0c1xuICAgIGlmICh1c2VyICYmIHVzZXIud2FudHNFbWFpbCgnd2VsY29tZUVtYWlscycpKSB7XG4gICAgICBjb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcbiAgICAgIGNvbnN0IHsgc2VuZFBhc3N3b3JkUmVzZXRFbWFpbCB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvZW1haWxTZXJ2aWNlJyk7XG4gICAgICBcbiAgICAgIC8vIEdlbmVyYXRlIHJlc2V0IHRva2VuXG4gICAgICBjb25zdCByZXNldFRva2VuID0gY3J5cHRvLnJhbmRvbUJ5dGVzKDMyKS50b1N0cmluZygnaGV4Jyk7XG4gICAgICBjb25zdCByZXNldFRva2VuRXhwaXJ5ID0gbmV3IERhdGUoRGF0ZS5ub3coKSArIDM2MDAwMDApOyAvLyAxIGhvdXIgZnJvbSBub3dcbiAgICAgIFxuICAgICAgLy8gU2F2ZSByZXNldCB0b2tlbiB0byB1c2VyICh3ZSBuZWVkIHRvIGFkZCB0aGVzZSBmaWVsZHMgdG8gVXNlciBtb2RlbClcbiAgICAgIHVzZXIucGFzc3dvcmRSZXNldFRva2VuID0gcmVzZXRUb2tlbjtcbiAgICAgIHVzZXIucGFzc3dvcmRSZXNldEV4cGlyeSA9IHJlc2V0VG9rZW5FeHBpcnk7XG4gICAgICBhd2FpdCB1c2VyLnNhdmUoKTtcbiAgICAgIFxuICAgICAgLy8gQ3JlYXRlIHJlc2V0IFVSTFxuICAgICAgY29uc3QgcmVzZXRVcmwgPSBgJHtwcm9jZXNzLmVudi5GUk9OVEVORF9VUkx9L3Jlc2V0LXBhc3N3b3JkP3Rva2VuPSR7cmVzZXRUb2tlbn1gO1xuICAgICAgXG4gICAgICAvLyBTZW5kIGVtYWlsXG4gICAgICBjb25zdCBlbWFpbFJlc3VsdCA9IGF3YWl0IHNlbmRQYXNzd29yZFJlc2V0RW1haWwodXNlci5lbWFpbCwge1xuICAgICAgICBmaXJzdE5hbWU6IHVzZXIuZmlyc3ROYW1lLFxuICAgICAgICByZXNldFRva2VuLFxuICAgICAgICByZXNldFVybFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGlmICghZW1haWxSZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gc2VuZCBwYXNzd29yZCByZXNldCBlbWFpbDonLCBlbWFpbFJlc3VsdC5lcnJvcik7XG4gICAgICB9XG4gICAgfVxuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignUGFzc3dvcmQgcmVzZXQgZXJyb3I6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IHtcbiAgICAgICAgY29kZTogJ1BBU1NXT1JEX1JFU0VUX0VSUk9SJyxcbiAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBwcm9jZXNzIHBhc3N3b3JkIHJlc2V0IHJlcXVlc3QnXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBSZXNldCBwYXNzd29yZCB3aXRoIHRva2VuXG5yb3V0ZXIucG9zdCgnL3Jlc2V0LXBhc3N3b3JkJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyB0b2tlbiwgbmV3UGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKCF0b2tlbiB8fCAhbmV3UGFzc3dvcmQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjoge1xuICAgICAgICAgIGNvZGU6ICdNSVNTSU5HX0ZJRUxEUycsXG4gICAgICAgICAgbWVzc2FnZTogJ1Rva2VuIGFuZCBuZXcgcGFzc3dvcmQgYXJlIHJlcXVpcmVkJ1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAobmV3UGFzc3dvcmQubGVuZ3RoIDwgNikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgY29kZTogJ0lOVkFMSURfUEFTU1dPUkQnLFxuICAgICAgICAgIG1lc3NhZ2U6ICdQYXNzd29yZCBtdXN0IGJlIGF0IGxlYXN0IDYgY2hhcmFjdGVycyBsb25nJ1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBGaW5kIHVzZXIgd2l0aCB2YWxpZCByZXNldCB0b2tlblxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRPbmUoe1xuICAgICAgcGFzc3dvcmRSZXNldFRva2VuOiB0b2tlbixcbiAgICAgIHBhc3N3b3JkUmVzZXRFeHBpcnk6IHsgJGd0OiBuZXcgRGF0ZSgpIH0sXG4gICAgICBpc0FjdGl2ZTogdHJ1ZVxuICAgIH0pO1xuXG4gICAgaWYgKCF1c2VyKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICBjb2RlOiAnSU5WQUxJRF9UT0tFTicsXG4gICAgICAgICAgbWVzc2FnZTogJ0ludmFsaWQgb3IgZXhwaXJlZCByZXNldCB0b2tlbidcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gVXBkYXRlIHBhc3N3b3JkIGFuZCBjbGVhciByZXNldCB0b2tlblxuICAgIHVzZXIucGFzc3dvcmQgPSBuZXdQYXNzd29yZDtcbiAgICB1c2VyLnBhc3N3b3JkUmVzZXRUb2tlbiA9IHVuZGVmaW5lZDtcbiAgICB1c2VyLnBhc3N3b3JkUmVzZXRFeHBpcnkgPSB1bmRlZmluZWQ7XG4gICAgYXdhaXQgdXNlci5zYXZlKCk7XG5cbiAgICByZXMuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ1Bhc3N3b3JkIHJlc2V0IHN1Y2Nlc3NmdWxseSdcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1Bhc3N3b3JkIHJlc2V0IGNvbXBsZXRpb24gZXJyb3I6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IHtcbiAgICAgICAgY29kZTogJ1BBU1NXT1JEX1JFU0VUX0NPTVBMRVRJT05fRVJST1InLFxuICAgICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIHJlc2V0IHBhc3N3b3JkJ1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59KTtcblxuLy8gR2V0IGVtYWlsIHByZWZlcmVuY2VzXG5yb3V0ZXIuZ2V0KCcvZW1haWwtcHJlZmVyZW5jZXMnLCByZXF1aXJlQXV0aCwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgcmVzLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIHByZWZlcmVuY2VzOiByZXEudXNlci5wcmVmZXJlbmNlcy5lbWFpbFByZWZlcmVuY2VzXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRW1haWwgcHJlZmVyZW5jZXMgZmV0Y2ggZXJyb3I6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IHtcbiAgICAgICAgY29kZTogJ0VNQUlMX1BSRUZFUkVOQ0VTX0VSUk9SJyxcbiAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBmZXRjaCBlbWFpbCBwcmVmZXJlbmNlcydcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufSk7XG5cbi8vIFVwZGF0ZSBlbWFpbCBwcmVmZXJlbmNlc1xucm91dGVyLnB1dCgnL2VtYWlsLXByZWZlcmVuY2VzJywgcmVxdWlyZUF1dGgsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgZW1haWxQcmVmZXJlbmNlcyB9ID0gcmVxLmJvZHk7XG4gICAgXG4gICAgaWYgKCFlbWFpbFByZWZlcmVuY2VzIHx8IHR5cGVvZiBlbWFpbFByZWZlcmVuY2VzICE9PSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgY29kZTogJ0lOVkFMSURfUFJFRkVSRU5DRVMnLFxuICAgICAgICAgIG1lc3NhZ2U6ICdWYWxpZCBlbWFpbCBwcmVmZXJlbmNlcyBvYmplY3QgaXMgcmVxdWlyZWQnXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFZhbGlkYXRlIHByZWZlcmVuY2Uga2V5c1xuICAgIGNvbnN0IHZhbGlkUHJlZmVyZW5jZXMgPSBbXG4gICAgICAnb3JkZXJDb25maXJtYXRpb25zJyxcbiAgICAgICdwYXltZW50UmVjZWlwdHMnLCBcbiAgICAgICdvcmRlclVwZGF0ZXMnLFxuICAgICAgJ3Byb21vdGlvbmFsRW1haWxzJyxcbiAgICAgICd3ZWxjb21lRW1haWxzJ1xuICAgIF07XG5cbiAgICBjb25zdCBpbnZhbGlkS2V5cyA9IE9iamVjdC5rZXlzKGVtYWlsUHJlZmVyZW5jZXMpLmZpbHRlcihcbiAgICAgIGtleSA9PiAhdmFsaWRQcmVmZXJlbmNlcy5pbmNsdWRlcyhrZXkpXG4gICAgKTtcblxuICAgIGlmIChpbnZhbGlkS2V5cy5sZW5ndGggPiAwKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICBjb2RlOiAnSU5WQUxJRF9QUkVGRVJFTkNFX0tFWVMnLFxuICAgICAgICAgIG1lc3NhZ2U6IGBJbnZhbGlkIHByZWZlcmVuY2Uga2V5czogJHtpbnZhbGlkS2V5cy5qb2luKCcsICcpfWBcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgYXdhaXQgcmVxLnVzZXIudXBkYXRlRW1haWxQcmVmZXJlbmNlcyhlbWFpbFByZWZlcmVuY2VzKTtcblxuICAgIHJlcy5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBtZXNzYWdlOiAnRW1haWwgcHJlZmVyZW5jZXMgdXBkYXRlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgcHJlZmVyZW5jZXM6IHJlcS51c2VyLnByZWZlcmVuY2VzLmVtYWlsUHJlZmVyZW5jZXNcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0VtYWlsIHByZWZlcmVuY2VzIHVwZGF0ZSBlcnJvcjonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjoge1xuICAgICAgICBjb2RlOiAnRU1BSUxfUFJFRkVSRU5DRVNfVVBEQVRFX0VSUk9SJyxcbiAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byB1cGRhdGUgZW1haWwgcHJlZmVyZW5jZXMnXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn0pO1xuXG4vLyBUZXN0IHJvdXRlIHRvIHRyaWdnZXIgaG9va1xucm91dGVyLmdldCgnL3Rlc3QnLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLmpzb24oeyBtZXNzYWdlOiAnQXV0aCB0ZXN0IGVuZHBvaW50JyB9KTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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QUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7UUFDMUJDLE9BQU8sRUFBRSxLQUFLO1FBQ2RDLEtBQUssRUFBRTtVQUNMQyxJQUFJLEVBQUUseUJBQXlCO1VBQy9CQyxPQUFPLEVBQUUsNEJBQTRCeUYsV0FBVyxDQUFDSyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQzdEO01BQ0YsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUFBO0lBQUE7TUFBQXpJLGFBQUEsR0FBQXFDLENBQUE7SUFBQTtJQUFBckMsYUFBQSxHQUFBRyxDQUFBO0lBRUQsTUFBTThCLEdBQUcsQ0FBQ3NCLElBQUksQ0FBQ21GLHNCQUFzQixDQUFDUixnQkFBZ0IsQ0FBQztJQUFDO0lBQUFsSSxhQUFBLEdBQUFHLENBQUE7SUFFeEQrQixHQUFHLENBQUNLLElBQUksQ0FBQztNQUNQQyxPQUFPLEVBQUUsSUFBSTtNQUNiRyxPQUFPLEVBQUUsd0NBQXdDO01BQ2pEUSxXQUFXLEVBQUVsQixHQUFHLENBQUNzQixJQUFJLENBQUNKLFdBQVcsQ0FBQytFO0lBQ3BDLENBQUMsQ0FBQztFQUVKLENBQUMsQ0FBQyxPQUFPekYsS0FBSyxFQUFFO0lBQUE7SUFBQXpDLGFBQUEsR0FBQUcsQ0FBQTtJQUNkK0QsT0FBTyxDQUFDekIsS0FBSyxDQUFDLGlDQUFpQyxFQUFFQSxLQUFLLENBQUM7SUFBQztJQUFBekMsYUFBQSxHQUFBRyxDQUFBO0lBQ3hEK0IsR0FBRyxDQUFDSSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztNQUNuQkMsT0FBTyxFQUFFLEtBQUs7TUFDZEMsS0FBSyxFQUFFO1FBQ0xDLElBQUksRUFBRSxnQ0FBZ0M7UUFDdENDLE9BQU8sRUFBRTtNQUNYO0lBQ0YsQ0FBQyxDQUFDO0VBQ0o7QUFDRixDQUFDLENBQUM7O0FBRUY7QUFBQTtBQUFBM0MsYUFBQSxHQUFBRyxDQUFBO0FBQ0FFLE1BQU0sQ0FBQ29FLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQ3hDLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQUE7RUFBQWxDLGFBQUEsR0FBQWMsQ0FBQTtFQUFBZCxhQUFBLEdBQUFHLENBQUE7RUFDaEMrQixHQUFHLENBQUNLLElBQUksQ0FBQztJQUFFSSxPQUFPLEVBQUU7RUFBcUIsQ0FBQyxDQUFDO0FBQzdDLENBQUMsQ0FBQztBQUFDO0FBQUEzQyxhQUFBLEdBQUFHLENBQUE7QUFFSHdJLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHdkksTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==