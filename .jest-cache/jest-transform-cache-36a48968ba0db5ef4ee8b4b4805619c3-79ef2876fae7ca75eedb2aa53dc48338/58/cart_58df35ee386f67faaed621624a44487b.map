{"version":3,"names":["express","require","router","Router","Product","User","Cart","authenticateToken","validateCSRFToken","cartService","cleanupInvalidCarts","result","deleteMany","sessionId","$not","deletedCount","console","log","error","getOrCreateCart","req","url","method","user","email","findById","_id","cart","items","updatedAt","Date","save","type","headers","sessionID","JSON","stringify","startsWith","now","Math","random","toString","substr","findOne","length","forEach","item","i","product","quantity","get","res","cartData","getCartWithPerformanceOptimization","serviceError","warn","message","populatedCart","Promise","all","map","select","isActive","toPublicJSON","price","subtotal","validCartItems","filter","itemCount","reduce","total","json","success","data","round","isEmpty","status","code","post","productId","body","Number","isInteger","match","existingItemIndex","findIndex","currentQuantity","updateCartOptimistically","fallbackCart","addedAt","push","addItem","duration","performance","updatedCartData","prod","then","stack","details","process","env","NODE_ENV","undefined","put","itemIndex","splice","updateItem","findByIdAndUpdate","new","wasRemoved","cartItemCount","delete","removeItem","deleteOne","newCart","guestCartItems","userId","guestItemCount","mergeResult","mergeCartsWithConflictResolution","mergedItems","Array","isArray","guestItem","guestCart","conflicts","merge","guestCarts","find","userCarts","$exists","guestSessionId","serverSessionId","cartId","session","createdAt","currentSession","frontendSessionId","storedCartId","module","exports"],"sources":["cart.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Product = require('../models/Product');\nconst User = require('../models/User');\nconst Cart = require('../models/Cart');\nconst { authenticateToken } = require('../middleware/auth');\nconst { validateCSRFToken } = require('../middleware/sessionCSRF');\nconst cartService = require('../services/cartService');\n\n// Cleanup invalid cart sessions on startup\nconst cleanupInvalidCarts = async () => {\n  try {\n    const result = await Cart.deleteMany({\n      sessionId: { $not: /^guest_/ }\n    });\n    if (result.deletedCount > 0) {\n      console.log(`Cleaned up ${result.deletedCount} invalid cart sessions`);\n    }\n  } catch (error) {\n    console.error('Error cleaning up invalid carts:', error);\n  }\n};\n\n// Run cleanup\ncleanupInvalidCarts();\n\n// Helper function to get or create cart\nconst getOrCreateCart = async (req) => {\n  console.log('=== GET OR CREATE CART DEBUG ===');\n  console.log('Request URL:', req.url);\n  console.log('Request method:', req.method);\n  console.log('User authenticated:', !!req.user);\n  \n  if (req.user) {\n    // For authenticated users, use user's cart\n    console.log('Using USER cart for:', req.user.email);\n    const user = await User.findById(req.user._id);\n    if (!user.cart) {\n      user.cart = { items: [], updatedAt: new Date() };\n      await user.save();\n    }\n    return { type: 'user', cart: user.cart, user };\n  } else {\n    // For guests, use session-based cart with database storage\n    console.log('Processing GUEST cart request');\n    \n    let sessionId = req.headers['x-guest-session-id'];\n    console.log('Frontend session ID from headers:', sessionId);\n    console.log('Server session ID:', req.sessionID);\n    console.log('All headers:', JSON.stringify(req.headers, null, 2));\n    \n    // CRITICAL: If no valid frontend session ID, REJECT the request\n    if (!sessionId || !sessionId.startsWith('guest_')) {\n      console.log('❌ INVALID OR MISSING FRONTEND SESSION ID');\n      console.log('Received sessionId:', sessionId);\n      console.log('Server sessionID:', req.sessionID);\n      \n      // Create a completely new session ID\n      sessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      console.log('✅ Created BRAND NEW session ID:', sessionId);\n    } else {\n      console.log('✅ Using valid frontend session ID:', sessionId);\n    }\n    \n    // NEVER EVER use server session ID\n    if (sessionId === req.sessionID) {\n      console.log('🚨 CRITICAL ERROR: Session ID matches server session ID - creating new one');\n      sessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      console.log('🔧 Emergency new session ID:', sessionId);\n    }\n    \n    console.log('Final session ID to use:', sessionId);\n    \n    // Look for existing cart\n    let cart = await Cart.findOne({ sessionId });\n    \n    if (!cart) {\n      console.log('✅ Creating NEW cart for session:', sessionId);\n      cart = new Cart({ sessionId, items: [] });\n      await cart.save();\n      console.log('✅ New cart created successfully');\n    } else {\n      console.log('⚠️  Found EXISTING cart for session:', sessionId);\n      console.log('⚠️  Existing cart has', cart.items.length, 'items');\n      cart.items.forEach((item, i) => {\n        console.log(`   Item ${i+1}: ${item.product} (qty: ${item.quantity})`);\n      });\n    }\n    \n    console.log('=== END CART DEBUG ===');\n    return { type: 'guest', cart, sessionId };\n  }\n};\n\n// Get cart contents with performance optimization\nrouter.get('/', authenticateToken, async (req, res) => {\n  try {\n    // Use fallback to original function if cart service fails\n    let cartData;\n    try {\n      cartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed, using fallback:', serviceError.message);\n      cartData = await getOrCreateCart(req);\n    }\n    \n    const { type, cart, user } = cartData;\n    \n    // Populate product details for cart items\n    const populatedCart = await Promise.all(\n      cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          return {\n            _id: item.product,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    \n    // Calculate totals\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n    \n    res.json({\n      success: true,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error fetching cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_FETCH_ERROR',\n        message: 'Failed to fetch cart'\n      }\n    });\n  }\n});\n\n// Add item to cart with optimistic updates\nrouter.post('/add', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId, quantity = 1 } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    if (!Number.isInteger(quantity) || quantity < 1 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 1 and 99'\n        }\n      });\n    }\n\n        // Validate product ID format\n    if (!productId.match(/^[0-9a-fA-F]{24}$/)) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_PRODUCT_ID',\n          message: 'Invalid product ID format'\n        }\n      });\n    }\n\n    // Check if product exists and is active\n    const product = await Product.findById(productId);\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found'\n        }\n      });\n    }\n    \n    if (!product.isActive) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found or inactive'\n        }\n      });\n    }\n\n    // Check for existing item and validate maximum quantity\n    const { type, cart, user } = await getOrCreateCart(req);\n    \n    if (type === 'user') {\n      const existingItemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (existingItemIndex >= 0) {\n        const currentQuantity = user.cart.items[existingItemIndex].quantity;\n        if (currentQuantity + quantity > 99) {\n          return res.status(400).json({\n            success: false,\n            error: {\n              code: 'MAX_QUANTITY_EXCEEDED',\n              message: 'Cannot exceed maximum quantity of 99'\n            }\n          });\n        }\n      }\n    } else {\n      const existingItemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (existingItemIndex >= 0) {\n        const currentQuantity = cart.items[existingItemIndex].quantity;\n        if (currentQuantity + quantity > 99) {\n          return res.status(400).json({\n            success: false,\n            error: {\n              code: 'MAX_QUANTITY_EXCEEDED',\n              message: 'Cannot exceed maximum quantity of 99'\n            }\n          });\n        }\n      }\n    }\n\n    // Use optimistic cart service with fallback\n    let result;\n    try {\n      result = await cartService.updateCartOptimistically(req, 'add', {\n        productId,\n        quantity\n      });\n    } catch (serviceError) {\n      console.warn('Cart service failed, using fallback:', serviceError.message);\n      // Fallback to original logic - need to re-fetch cart since service failed\n      const fallbackCart = await getOrCreateCart(req);\n      \n      if (fallbackCart.type === 'user') {\n        // Add to user's cart\n        const existingItemIndex = fallbackCart.user.cart.items.findIndex(item => \n          item.product.toString() === productId.toString()\n        );\n\n        if (existingItemIndex >= 0) {\n          fallbackCart.user.cart.items[existingItemIndex].quantity += quantity;\n          fallbackCart.user.cart.items[existingItemIndex].addedAt = new Date();\n        } else {\n          fallbackCart.user.cart.items.push({\n            product: productId,\n            quantity,\n            price: product.price,\n            addedAt: new Date()\n          });\n        }\n        \n        fallbackCart.user.cart.updatedAt = new Date();\n        await fallbackCart.user.save();\n      } else {\n        // Add to guest cart - use the Cart model method\n        if (fallbackCart.cart.addItem && typeof fallbackCart.cart.addItem === 'function') {\n          fallbackCart.cart.addItem(productId, quantity, product.price);\n        } else {\n          // Fallback: manually add item\n          const existingItemIndex = fallbackCart.cart.items.findIndex(item => \n            item.product.toString() === productId.toString()\n          );\n\n          if (existingItemIndex >= 0) {\n            fallbackCart.cart.items[existingItemIndex].quantity += quantity;\n            fallbackCart.cart.items[existingItemIndex].addedAt = new Date();\n          } else {\n            fallbackCart.cart.items.push({\n              product: productId,\n              quantity,\n              price: product.price,\n              addedAt: new Date()\n            });\n          }\n        }\n        await fallbackCart.cart.save();\n      }\n      \n      result = { duration: 0, performance: 'fallback' };\n    }\n\n    // Return updated cart with performance metrics\n    let updatedCartData;\n    try {\n      updatedCartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed after add, using fallback:', serviceError.message);\n      updatedCartData = await getOrCreateCart(req);\n    }\n    \n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const prod = await Product.findById(item.product).select('-wholesaler');\n        if (!prod) {\n          return null; // Filter out missing products\n        }\n        return {\n          _id: item.product,\n          product: prod.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    ).then(items => items.filter(item => item !== null));\n\n    const itemCount = populatedCart.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = populatedCart.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item added to cart',\n      data: {\n        cart: {\n          items: populatedCart,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        },\n        performance: {\n          duration: result.duration,\n          status: result.performance\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    console.error('Full stack:', error.stack);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_ADD_ERROR',\n        message: 'Failed to add item to cart',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\n      }\n    });\n  }\n});\n\n// Update cart item quantity\nrouter.put('/update', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId, quantity } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    if (!Number.isInteger(quantity) || quantity < 0 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 0 and 99'\n        }\n      });\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Update user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        if (quantity === 0) {\n          user.cart.items.splice(itemIndex, 1);\n        } else {\n          user.cart.items[itemIndex].quantity = quantity;\n          user.cart.items[itemIndex].addedAt = new Date();\n        }\n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    } else {\n      // Update guest cart\n      const itemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (itemIndex >= 0) {\n        if (cart.updateItem && typeof cart.updateItem === 'function') {\n          cart.updateItem(productId, quantity);\n        } else {\n          // Manual update\n          if (quantity === 0) {\n            cart.items.splice(itemIndex, 1);\n          } else {\n            cart.items[itemIndex].quantity = quantity;\n            cart.items[itemIndex].addedAt = new Date();\n          }\n          cart.updatedAt = new Date();\n        }\n        \n        if (cart.save && typeof cart.save === 'function') {\n          await cart.save();\n        } else {\n          // Use findByIdAndUpdate for lean objects\n          await Cart.findByIdAndUpdate(\n            cart._id,\n            { items: cart.items, updatedAt: cart.updatedAt },\n            { new: true }\n          );\n        }\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    }\n\n    // Return updated cart\n    const updatedCartData = await getOrCreateCart(req);\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) return null;\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    // Check if item was removed (quantity was 0)\n    const wasRemoved = quantity === 0;\n    \n    res.json({\n      success: true,\n      message: wasRemoved ? 'Item removed from cart' : 'Cart updated',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      },\n      cartItemCount: itemCount\n    });\n\n  } catch (error) {\n    console.error('Error updating cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_UPDATE_ERROR',\n        message: 'Failed to update cart'\n      }\n    });\n  }\n});\n\n// Remove item from cart\nrouter.delete('/remove', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId } = req.body;\n\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Remove from user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        user.cart.items.splice(itemIndex, 1);\n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    } else {\n      // Remove from guest cart\n      const itemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (itemIndex >= 0) {\n        if (cart.removeItem && typeof cart.removeItem === 'function') {\n          cart.removeItem(productId);\n        } else {\n          // Manual removal\n          cart.items.splice(itemIndex, 1);\n          cart.updatedAt = new Date();\n        }\n        \n        if (cart.save && typeof cart.save === 'function') {\n          await cart.save();\n        } else {\n          // Use findByIdAndUpdate for lean objects\n          await Cart.findByIdAndUpdate(\n            cart._id,\n            { items: cart.items, updatedAt: cart.updatedAt },\n            { new: true }\n          );\n        }\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    }\n\n    // Return updated cart\n    const updatedCartData = await getOrCreateCart(req);\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) return null;\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item removed from cart',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      },\n      cartItemCount: itemCount\n    });\n\n  } catch (error) {\n    console.error('Error removing from cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_REMOVE_ERROR',\n        message: 'Failed to remove item from cart'\n      }\n    });\n  }\n});\n\n// Clear cart\nrouter.delete('/clear', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Clear user's cart\n      user.cart.items = [];\n      user.cart.updatedAt = new Date();\n      await user.save();\n      console.log('Cleared user cart for user:', user._id);\n    } else {\n      // Clear guest cart - be more aggressive\n      console.log('Clearing guest cart for session:', cart.sessionId);\n      \n      // Delete the entire cart record and create a new one\n      await Cart.deleteOne({ sessionId: cart.sessionId });\n      \n      // Create a fresh cart\n      const newCart = new Cart({ sessionId: cart.sessionId, items: [] });\n      await newCart.save();\n      \n      console.log('Created fresh guest cart for session:', cart.sessionId);\n    }\n\n    res.json({\n      success: true,\n      message: 'Cart cleared',\n      data: {\n        cart: {\n          items: [],\n          itemCount: 0,\n          subtotal: 0,\n          total: 0,\n          isEmpty: true\n        }\n      },\n      cartItemCount: 0\n    });\n\n  } catch (error) {\n    console.error('Error clearing cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_CLEAR_ERROR',\n        message: 'Failed to clear cart'\n      }\n    });\n  }\n});\n\n// Merge guest cart with user cart with conflict resolution\nrouter.post('/merge', authenticateToken, async (req, res) => {\n  try {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'AUTHENTICATION_REQUIRED',\n          message: 'User must be authenticated to merge cart'\n        }\n      });\n    }\n\n    const { guestCartItems, sessionId } = req.body;\n    \n    console.log('Cart merge request:', { \n      userId: req.user._id, \n      sessionId, \n      guestItemCount: guestCartItems?.length || 0 \n    });\n    \n    // Use enhanced cart service for merging with conflict resolution\n    let mergeResult;\n    try {\n      mergeResult = await cartService.mergeCartsWithConflictResolution(\n        req.user._id,\n        guestCartItems,\n        sessionId\n      );\n    } catch (serviceError) {\n      console.warn('Cart service merge failed, using fallback:', serviceError.message);\n      // Fallback to original merge logic\n      const user = await User.findById(req.user._id);\n      if (!user.cart) {\n        user.cart = { items: [], updatedAt: new Date() };\n      }\n\n      let mergedItems = 0;\n\n      // Process guest cart items\n      if (guestCartItems && Array.isArray(guestCartItems) && guestCartItems.length > 0) {\n        for (const guestItem of guestCartItems) {\n          const product = await Product.findById(guestItem.productId || guestItem.product);\n          if (!product || !product.isActive) {\n            continue;\n          }\n\n          const productId = guestItem.productId || guestItem.product;\n          const quantity = guestItem.quantity || 1;\n\n          const existingItemIndex = user.cart.items.findIndex(item => \n            item.product.toString() === productId.toString()\n          );\n\n          if (existingItemIndex >= 0) {\n            user.cart.items[existingItemIndex].quantity += quantity;\n            user.cart.items[existingItemIndex].addedAt = new Date();\n          } else {\n            user.cart.items.push({\n              product: productId,\n              quantity,\n              price: product.price,\n              addedAt: new Date()\n            });\n          }\n          mergedItems++;\n        }\n      }\n\n      // Process session-based cart\n      if (sessionId) {\n        const guestCart = await Cart.findOne({ sessionId });\n        if (guestCart && guestCart.items.length > 0) {\n          console.log('Found guest cart with', guestCart.items.length, 'items for session:', sessionId);\n          \n          for (const guestItem of guestCart.items) {\n            const product = await Product.findById(guestItem.product);\n            if (!product || !product.isActive) {\n              continue;\n            }\n\n            const existingItemIndex = user.cart.items.findIndex(item => \n              item.product.toString() === guestItem.product.toString()\n            );\n\n            if (existingItemIndex >= 0) {\n              user.cart.items[existingItemIndex].quantity += guestItem.quantity;\n              user.cart.items[existingItemIndex].addedAt = new Date();\n            } else {\n              user.cart.items.push({\n                product: guestItem.product,\n                quantity: guestItem.quantity,\n                price: guestItem.price,\n                addedAt: new Date()\n              });\n            }\n            mergedItems++;\n          }\n          \n          // Clean up the guest cart after merge\n          await Cart.deleteOne({ sessionId });\n          console.log('Deleted guest cart for session:', sessionId);\n        } else {\n          console.log('No guest cart found for session:', sessionId);\n        }\n      }\n\n      user.cart.updatedAt = new Date();\n      await user.save();\n      \n      mergeResult = {\n        mergedItems,\n        conflicts: [],\n        duration: 0\n      };\n    }\n\n    // Get updated cart data with fallback\n    let updatedCartData;\n    try {\n      updatedCartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed in merge, using fallback:', serviceError.message);\n      updatedCartData = await getOrCreateCart(req);\n    }\n    \n    // Return updated user cart\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          return {\n            _id: item.product,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: `Successfully merged ${mergeResult.mergedItems} items into your cart`,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        },\n        merge: {\n          mergedItems: mergeResult.mergedItems,\n          conflicts: mergeResult.conflicts,\n          duration: mergeResult.duration\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error merging guest cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_MERGE_ERROR',\n        message: 'Failed to merge guest cart',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined\n      }\n    });\n  }\n});\n\n// Debug endpoint to see all guest carts (development only)\nif (process.env.NODE_ENV === 'development') {\n  router.get('/debug', async (req, res) => {\n    try {\n      const guestCarts = await Cart.find({}).select('sessionId items createdAt updatedAt');\n      const userCarts = await User.find({ 'cart.items.0': { $exists: true } })\n        .select('email cart.items cart.updatedAt');\n      \n      console.log('Debug request - Headers:', {\n        guestSessionId: req.headers['x-guest-session-id'],\n        serverSessionId: req.sessionID,\n        cartId: req.session?.cartId\n      });\n      \n      res.json({\n        success: true,\n        data: {\n          guestCarts: guestCarts.map(cart => ({\n            sessionId: cart.sessionId,\n            itemCount: cart.items.length,\n            items: cart.items,\n            createdAt: cart.createdAt,\n            updatedAt: cart.updatedAt\n          })),\n          userCarts: userCarts.map(user => ({\n            email: user.email,\n            itemCount: user.cart?.items?.length || 0,\n            items: user.cart?.items || [],\n            updatedAt: user.cart?.updatedAt\n          })),\n          currentSession: {\n            frontendSessionId: req.headers['x-guest-session-id'],\n            serverSessionId: req.sessionID,\n            storedCartId: req.session?.cartId\n          }\n        }\n      });\n    } catch (error) {\n      res.status(500).json({ success: false, error: error.message });\n    }\n  });\n}\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}