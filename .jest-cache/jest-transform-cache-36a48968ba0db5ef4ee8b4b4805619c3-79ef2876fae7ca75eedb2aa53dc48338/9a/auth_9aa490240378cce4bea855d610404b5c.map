{"version":3,"names":["jwt","require","User","ErrorCodes","authenticateToken","req","res","next","cookieToken","cookies","token","authHeader","headers","headerToken","split","user","decoded","verify","process","env","JWT_SECRET","findById","userId","select","isActive","error","console","message","requireAuth","AUTHENTICATION_REQUIRED","status","json","success","code","TOKEN_INVALID","name","TOKEN_EXPIRED","INTERNAL_ERROR","requireAdmin","isAdmin","INSUFFICIENT_PERMISSIONS","module","exports"],"sources":["auth.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst User = require('../models/User');\nconst { ErrorCodes } = require('../utils/errorHandler');\n\n// Middleware to authenticate JWT tokens\nconst authenticateToken = async (req, res, next) => {\n  try {\n    // Check for token in cookie first (more secure), then fall back to header\n    const cookieToken = req.cookies?.token;\n    const authHeader = req.headers['authorization'];\n    const headerToken = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN\n    \n    // Prefer cookie token over header token for security\n    const token = cookieToken || headerToken;\n    \n    if (!token) {\n      req.user = null;\n      return next(); // Continue without authentication for optional auth routes\n    }\n    \n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(decoded.userId).select('-password');\n    \n    if (!user || !user.isActive) {\n      req.user = null;\n      return next();\n    }\n    \n    req.user = user;\n    next();\n  } catch (error) {\n    // Log the error for debugging but don't expose details to client\n    console.error('JWT verification error:', error.message);\n    req.user = null;\n    next(); // Continue without authentication for optional auth routes\n  }\n};\n\n// Middleware to require authentication\nconst requireAuth = async (req, res, next) => {\n  try {\n    // Check for token in cookie first (more secure), then fall back to header\n    const cookieToken = req.cookies?.token;\n    const authHeader = req.headers['authorization'];\n    const headerToken = authHeader && authHeader.split(' ')[1];\n    \n    // Prefer cookie token over header token for security\n    const token = cookieToken || headerToken;\n    \n    if (!token) {\n      return res.error ? res.error(401, ErrorCodes.AUTHENTICATION_REQUIRED, 'Access token is required') : res.status(401).json({\n        success: false,\n        error: {\n          code: ErrorCodes.AUTHENTICATION_REQUIRED,\n          message: 'Access token is required'\n        }\n      });\n    }\n    \n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(decoded.userId).select('-password');\n    \n    if (!user || !user.isActive) {\n      return res.error ? res.error(401, ErrorCodes.TOKEN_INVALID, 'Invalid or expired token') : res.status(401).json({\n        success: false,\n        error: {\n          code: ErrorCodes.TOKEN_INVALID,\n          message: 'Invalid or expired token'\n        }\n      });\n    }\n    \n    req.user = user;\n    next();\n  } catch (error) {\n    if (error.name === 'JsonWebTokenError') {\n      return res.error ? res.error(401, ErrorCodes.TOKEN_INVALID, 'Invalid token format') : res.status(401).json({\n        success: false,\n        error: {\n          code: ErrorCodes.TOKEN_INVALID,\n          message: 'Invalid token format'\n        }\n      });\n    }\n    \n    if (error.name === 'TokenExpiredError') {\n      return res.error ? res.error(401, ErrorCodes.TOKEN_EXPIRED, 'Token has expired') : res.status(401).json({\n        success: false,\n        error: {\n          code: ErrorCodes.TOKEN_EXPIRED,\n          message: 'Token has expired'\n        }\n      });\n    }\n    \n    console.error('Authentication error:', error);\n    if (res.error) {\n      res.error(500, ErrorCodes.INTERNAL_ERROR, 'Authentication failed');\n    } else {\n      res.status(500).json({\n        success: false,\n        error: {\n          code: ErrorCodes.INTERNAL_ERROR,\n          message: 'Authentication failed'\n        }\n      });\n    }\n  }\n};\n\n// Middleware to require admin role\nconst requireAdmin = async (req, res, next) => {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n    \n    if (!token) {\n      return res.error ? res.error(401, ErrorCodes.AUTHENTICATION_REQUIRED, 'Access token is required') : res.status(401).json({\n        success: false,\n        error: {\n          code: ErrorCodes.AUTHENTICATION_REQUIRED,\n          message: 'Access token is required'\n        }\n      });\n    }\n    \n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(decoded.userId).select('-password');\n    \n    if (!user || !user.isActive) {\n      return res.error ? res.error(401, ErrorCodes.TOKEN_INVALID, 'Invalid or expired token') : res.status(401).json({\n        success: false,\n        error: {\n          code: ErrorCodes.TOKEN_INVALID,\n          message: 'Invalid or expired token'\n        }\n      });\n    }\n    \n    // Check if user has admin role\n    if (!user.isAdmin) {\n      return res.error ? res.error(403, ErrorCodes.INSUFFICIENT_PERMISSIONS, 'Admin access required') : res.status(403).json({\n        success: false,\n        error: {\n          code: ErrorCodes.INSUFFICIENT_PERMISSIONS,\n          message: 'Admin access required'\n        }\n      });\n    }\n    \n    req.user = user;\n    next();\n  } catch (error) {\n    if (error.name === 'JsonWebTokenError') {\n      return res.error ? res.error(401, ErrorCodes.TOKEN_INVALID, 'Invalid token format') : res.status(401).json({\n        success: false,\n        error: {\n          code: ErrorCodes.TOKEN_INVALID,\n          message: 'Invalid token format'\n        }\n      });\n    }\n    \n    if (error.name === 'TokenExpiredError') {\n      return res.error ? res.error(401, ErrorCodes.TOKEN_EXPIRED, 'Token has expired') : res.status(401).json({\n        success: false,\n        error: {\n          code: ErrorCodes.TOKEN_EXPIRED,\n          message: 'Token has expired'\n        }\n      });\n    }\n    \n    console.error('Admin auth error:', error);\n    if (res.error) {\n      res.error(500, ErrorCodes.INTERNAL_ERROR, 'Authorization failed');\n    } else {\n      res.status(500).json({\n        success: false,\n        error: {\n          code: ErrorCodes.INTERNAL_ERROR,\n          message: 'Authorization failed'\n        }\n      });\n    }\n  }\n};\n\nmodule.exports = {\n  authenticateToken,\n  requireAuth,\n  requireAdmin\n};"],"mappings":"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","ignoreList":[]}