{"version":3,"names":["crypto","require","generateCSRFToken","req","res","next","session","csrfToken","randomBytes","toString","validateCSRFToken","method","path","includes","token","headers","body","_csrf","status","json","success","error","code","message","createSessionConfig","mongoUrl","secret","process","env","SESSION_SECRET","resave","saveUninitialized","store","create","touchAfter","cookie","secure","NODE_ENV","httpOnly","maxAge","sameSite","name","proxy","enhanceGuestSession","guestId","user","cart","items","updatedAt","Date","cleanupGuestSession","module","exports"],"sources":["sessionCSRF.js"],"sourcesContent":["const crypto = require('crypto');\n\n// Unified CSRF token management\nconst generateCSRFToken = (req, res, next) => {\n  if (!req.session.csrfToken) {\n    req.session.csrfToken = crypto.randomBytes(32).toString('hex');\n  }\n  next();\n};\n\n// CSRF validation middleware\nconst validateCSRFToken = (req, res, next) => {\n  // Skip CSRF for GET requests and API testing\n  if (req.method === 'GET' || req.path.includes('/test')) {\n    return next();\n  }\n\n  const token = req.headers['x-csrf-token'] || req.body._csrf;\n  \n  if (!token || token !== req.session.csrfToken) {\n    return res.status(403).json({\n      success: false,\n      error: {\n        code: 'CSRF_ERROR',\n        message: 'Invalid CSRF token'\n      }\n    });\n  }\n  \n  next();\n};\n\n// Session configuration factory\nconst createSessionConfig = (mongoUrl) => ({\n  secret: process.env.SESSION_SECRET || 'holistic-store-session-secret',\n  resave: false,\n  saveUninitialized: true, // Important for guest carts and CSRF\n  store: require('connect-mongo').create({\n    mongoUrl,\n    touchAfter: 24 * 3600 // lazy session update\n  }),\n  cookie: {\n    secure: process.env.NODE_ENV === 'production',\n    httpOnly: true,\n    maxAge: 1000 * 60 * 60 * 24 * 7, // 7 days\n    sameSite: process.env.NODE_ENV === 'production' ? 'strict' : 'lax',\n    path: '/'\n  },\n  name: 'holistic.sid', // Custom session name\n  proxy: process.env.NODE_ENV === 'production' // Trust proxy in production\n});\n\n// Guest session enhancement\nconst enhanceGuestSession = (req, res, next) => {\n  if (!req.session.guestId && !req.user) {\n    req.session.guestId = crypto.randomBytes(16).toString('hex');\n  }\n  \n  // Ensure cart exists in session\n  if (!req.session.cart) {\n    req.session.cart = {\n      items: [],\n      updatedAt: new Date()\n    };\n  }\n  \n  next();\n};\n\n// Session cleanup for authenticated users\nconst cleanupGuestSession = (req, res, next) => {\n  if (req.user && req.session.guestId) {\n    // User is now authenticated, clean up guest data\n    delete req.session.guestId;\n    // Cart migration should happen in auth flow\n  }\n  next();\n};\n\nmodule.exports = {\n  generateCSRFToken,\n  validateCSRFToken,\n  createSessionConfig,\n  enhanceGuestSession,\n  cleanupGuestSession\n};"],"mappings":"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","ignoreList":[]}