b619648db0d61783120d26375c00e913
const crypto = require('crypto');

// Unified CSRF token management
const generateCSRFToken = (req, res, next) => {
  if (!req.session.csrfToken) {
    req.session.csrfToken = crypto.randomBytes(32).toString('hex');
  }
  next();
};

// CSRF validation middleware
const validateCSRFToken = (req, res, next) => {
  // Skip CSRF for GET requests and API testing
  if (req.method === 'GET' || req.path.includes('/test')) {
    return next();
  }
  const token = req.headers['x-csrf-token'] || req.body._csrf;
  if (!token || token !== req.session.csrfToken) {
    return res.status(403).json({
      success: false,
      error: {
        code: 'CSRF_ERROR',
        message: 'Invalid CSRF token'
      }
    });
  }
  next();
};

// Session configuration factory
const createSessionConfig = mongoUrl => ({
  secret: process.env.SESSION_SECRET || 'holistic-store-session-secret',
  resave: false,
  saveUninitialized: true,
  // Important for guest carts and CSRF
  store: require('connect-mongo').create({
    mongoUrl,
    touchAfter: 24 * 3600 // lazy session update
  }),
  cookie: {
    secure: process.env.NODE_ENV === 'production',
    httpOnly: true,
    maxAge: 1000 * 60 * 60 * 24 * 7,
    // 7 days
    sameSite: process.env.NODE_ENV === 'production' ? 'strict' : 'lax',
    path: '/'
  },
  name: 'holistic.sid',
  // Custom session name
  proxy: process.env.NODE_ENV === 'production' // Trust proxy in production
});

// Guest session enhancement
const enhanceGuestSession = (req, res, next) => {
  if (!req.session.guestId && !req.user) {
    req.session.guestId = crypto.randomBytes(16).toString('hex');
  }

  // Ensure cart exists in session
  if (!req.session.cart) {
    req.session.cart = {
      items: [],
      updatedAt: new Date()
    };
  }
  next();
};

// Session cleanup for authenticated users
const cleanupGuestSession = (req, res, next) => {
  if (req.user && req.session.guestId) {
    // User is now authenticated, clean up guest data
    delete req.session.guestId;
    // Cart migration should happen in auth flow
  }
  next();
};
module.exports = {
  generateCSRFToken,
  validateCSRFToken,
  createSessionConfig,
  enhanceGuestSession,
  cleanupGuestSession
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcnlwdG8iLCJyZXF1aXJlIiwiZ2VuZXJhdGVDU1JGVG9rZW4iLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2Vzc2lvbiIsImNzcmZUb2tlbiIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJ2YWxpZGF0ZUNTUkZUb2tlbiIsIm1ldGhvZCIsInBhdGgiLCJpbmNsdWRlcyIsInRva2VuIiwiaGVhZGVycyIsImJvZHkiLCJfY3NyZiIsInN0YXR1cyIsImpzb24iLCJzdWNjZXNzIiwiZXJyb3IiLCJjb2RlIiwibWVzc2FnZSIsImNyZWF0ZVNlc3Npb25Db25maWciLCJtb25nb1VybCIsInNlY3JldCIsInByb2Nlc3MiLCJlbnYiLCJTRVNTSU9OX1NFQ1JFVCIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwic3RvcmUiLCJjcmVhdGUiLCJ0b3VjaEFmdGVyIiwiY29va2llIiwic2VjdXJlIiwiTk9ERV9FTlYiLCJodHRwT25seSIsIm1heEFnZSIsInNhbWVTaXRlIiwibmFtZSIsInByb3h5IiwiZW5oYW5jZUd1ZXN0U2Vzc2lvbiIsImd1ZXN0SWQiLCJ1c2VyIiwiY2FydCIsIml0ZW1zIiwidXBkYXRlZEF0IiwiRGF0ZSIsImNsZWFudXBHdWVzdFNlc3Npb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsic2Vzc2lvbkNTUkYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG5cbi8vIFVuaWZpZWQgQ1NSRiB0b2tlbiBtYW5hZ2VtZW50XG5jb25zdCBnZW5lcmF0ZUNTUkZUb2tlbiA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZiAoIXJlcS5zZXNzaW9uLmNzcmZUb2tlbikge1xuICAgIHJlcS5zZXNzaW9uLmNzcmZUb2tlbiA9IGNyeXB0by5yYW5kb21CeXRlcygzMikudG9TdHJpbmcoJ2hleCcpO1xuICB9XG4gIG5leHQoKTtcbn07XG5cbi8vIENTUkYgdmFsaWRhdGlvbiBtaWRkbGV3YXJlXG5jb25zdCB2YWxpZGF0ZUNTUkZUb2tlbiA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAvLyBTa2lwIENTUkYgZm9yIEdFVCByZXF1ZXN0cyBhbmQgQVBJIHRlc3RpbmdcbiAgaWYgKHJlcS5tZXRob2QgPT09ICdHRVQnIHx8IHJlcS5wYXRoLmluY2x1ZGVzKCcvdGVzdCcpKSB7XG4gICAgcmV0dXJuIG5leHQoKTtcbiAgfVxuXG4gIGNvbnN0IHRva2VuID0gcmVxLmhlYWRlcnNbJ3gtY3NyZi10b2tlbiddIHx8IHJlcS5ib2R5Ll9jc3JmO1xuICBcbiAgaWYgKCF0b2tlbiB8fCB0b2tlbiAhPT0gcmVxLnNlc3Npb24uY3NyZlRva2VuKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IHtcbiAgICAgICAgY29kZTogJ0NTUkZfRVJST1InLFxuICAgICAgICBtZXNzYWdlOiAnSW52YWxpZCBDU1JGIHRva2VuJ1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIFxuICBuZXh0KCk7XG59O1xuXG4vLyBTZXNzaW9uIGNvbmZpZ3VyYXRpb24gZmFjdG9yeVxuY29uc3QgY3JlYXRlU2Vzc2lvbkNvbmZpZyA9IChtb25nb1VybCkgPT4gKHtcbiAgc2VjcmV0OiBwcm9jZXNzLmVudi5TRVNTSU9OX1NFQ1JFVCB8fCAnaG9saXN0aWMtc3RvcmUtc2Vzc2lvbi1zZWNyZXQnLFxuICByZXNhdmU6IGZhbHNlLFxuICBzYXZlVW5pbml0aWFsaXplZDogdHJ1ZSwgLy8gSW1wb3J0YW50IGZvciBndWVzdCBjYXJ0cyBhbmQgQ1NSRlxuICBzdG9yZTogcmVxdWlyZSgnY29ubmVjdC1tb25nbycpLmNyZWF0ZSh7XG4gICAgbW9uZ29VcmwsXG4gICAgdG91Y2hBZnRlcjogMjQgKiAzNjAwIC8vIGxhenkgc2Vzc2lvbiB1cGRhdGVcbiAgfSksXG4gIGNvb2tpZToge1xuICAgIHNlY3VyZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyxcbiAgICBodHRwT25seTogdHJ1ZSxcbiAgICBtYXhBZ2U6IDEwMDAgKiA2MCAqIDYwICogMjQgKiA3LCAvLyA3IGRheXNcbiAgICBzYW1lU2l0ZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA/ICdzdHJpY3QnIDogJ2xheCcsXG4gICAgcGF0aDogJy8nXG4gIH0sXG4gIG5hbWU6ICdob2xpc3RpYy5zaWQnLCAvLyBDdXN0b20gc2Vzc2lvbiBuYW1lXG4gIHByb3h5OiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIC8vIFRydXN0IHByb3h5IGluIHByb2R1Y3Rpb25cbn0pO1xuXG4vLyBHdWVzdCBzZXNzaW9uIGVuaGFuY2VtZW50XG5jb25zdCBlbmhhbmNlR3Vlc3RTZXNzaW9uID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGlmICghcmVxLnNlc3Npb24uZ3Vlc3RJZCAmJiAhcmVxLnVzZXIpIHtcbiAgICByZXEuc2Vzc2lvbi5ndWVzdElkID0gY3J5cHRvLnJhbmRvbUJ5dGVzKDE2KS50b1N0cmluZygnaGV4Jyk7XG4gIH1cbiAgXG4gIC8vIEVuc3VyZSBjYXJ0IGV4aXN0cyBpbiBzZXNzaW9uXG4gIGlmICghcmVxLnNlc3Npb24uY2FydCkge1xuICAgIHJlcS5zZXNzaW9uLmNhcnQgPSB7XG4gICAgICBpdGVtczogW10sXG4gICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKClcbiAgICB9O1xuICB9XG4gIFxuICBuZXh0KCk7XG59O1xuXG4vLyBTZXNzaW9uIGNsZWFudXAgZm9yIGF1dGhlbnRpY2F0ZWQgdXNlcnNcbmNvbnN0IGNsZWFudXBHdWVzdFNlc3Npb24gPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgaWYgKHJlcS51c2VyICYmIHJlcS5zZXNzaW9uLmd1ZXN0SWQpIHtcbiAgICAvLyBVc2VyIGlzIG5vdyBhdXRoZW50aWNhdGVkLCBjbGVhbiB1cCBndWVzdCBkYXRhXG4gICAgZGVsZXRlIHJlcS5zZXNzaW9uLmd1ZXN0SWQ7XG4gICAgLy8gQ2FydCBtaWdyYXRpb24gc2hvdWxkIGhhcHBlbiBpbiBhdXRoIGZsb3dcbiAgfVxuICBuZXh0KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2VuZXJhdGVDU1JGVG9rZW4sXG4gIHZhbGlkYXRlQ1NSRlRva2VuLFxuICBjcmVhdGVTZXNzaW9uQ29uZmlnLFxuICBlbmhhbmNlR3Vlc3RTZXNzaW9uLFxuICBjbGVhbnVwR3Vlc3RTZXNzaW9uXG59OyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBUSxDQUFDOztBQUVoQztBQUNBLE1BQU1DLGlCQUFpQixHQUFHQSxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxLQUFLO0VBQzVDLElBQUksQ0FBQ0YsR0FBRyxDQUFDRyxPQUFPLENBQUNDLFNBQVMsRUFBRTtJQUMxQkosR0FBRyxDQUFDRyxPQUFPLENBQUNDLFNBQVMsR0FBR1AsTUFBTSxDQUFDUSxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUNDLFFBQVEsQ0FBQyxLQUFLLENBQUM7RUFDaEU7RUFDQUosSUFBSSxDQUFDLENBQUM7QUFDUixDQUFDOztBQUVEO0FBQ0EsTUFBTUssaUJBQWlCLEdBQUdBLENBQUNQLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEtBQUs7RUFDNUM7RUFDQSxJQUFJRixHQUFHLENBQUNRLE1BQU0sS0FBSyxLQUFLLElBQUlSLEdBQUcsQ0FBQ1MsSUFBSSxDQUFDQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUU7SUFDdEQsT0FBT1IsSUFBSSxDQUFDLENBQUM7RUFDZjtFQUVBLE1BQU1TLEtBQUssR0FBR1gsR0FBRyxDQUFDWSxPQUFPLENBQUMsY0FBYyxDQUFDLElBQUlaLEdBQUcsQ0FBQ2EsSUFBSSxDQUFDQyxLQUFLO0VBRTNELElBQUksQ0FBQ0gsS0FBSyxJQUFJQSxLQUFLLEtBQUtYLEdBQUcsQ0FBQ0csT0FBTyxDQUFDQyxTQUFTLEVBQUU7SUFDN0MsT0FBT0gsR0FBRyxDQUFDYyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztNQUMxQkMsT0FBTyxFQUFFLEtBQUs7TUFDZEMsS0FBSyxFQUFFO1FBQ0xDLElBQUksRUFBRSxZQUFZO1FBQ2xCQyxPQUFPLEVBQUU7TUFDWDtJQUNGLENBQUMsQ0FBQztFQUNKO0VBRUFsQixJQUFJLENBQUMsQ0FBQztBQUNSLENBQUM7O0FBRUQ7QUFDQSxNQUFNbUIsbUJBQW1CLEdBQUlDLFFBQVEsS0FBTTtFQUN6Q0MsTUFBTSxFQUFFQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsY0FBYyxJQUFJLCtCQUErQjtFQUNyRUMsTUFBTSxFQUFFLEtBQUs7RUFDYkMsaUJBQWlCLEVBQUUsSUFBSTtFQUFFO0VBQ3pCQyxLQUFLLEVBQUUvQixPQUFPLENBQUMsZUFBZSxDQUFDLENBQUNnQyxNQUFNLENBQUM7SUFDckNSLFFBQVE7SUFDUlMsVUFBVSxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUM7RUFDeEIsQ0FBQyxDQUFDO0VBQ0ZDLE1BQU0sRUFBRTtJQUNOQyxNQUFNLEVBQUVULE9BQU8sQ0FBQ0MsR0FBRyxDQUFDUyxRQUFRLEtBQUssWUFBWTtJQUM3Q0MsUUFBUSxFQUFFLElBQUk7SUFDZEMsTUFBTSxFQUFFLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO0lBQUU7SUFDakNDLFFBQVEsRUFBRWIsT0FBTyxDQUFDQyxHQUFHLENBQUNTLFFBQVEsS0FBSyxZQUFZLEdBQUcsUUFBUSxHQUFHLEtBQUs7SUFDbEV6QixJQUFJLEVBQUU7RUFDUixDQUFDO0VBQ0Q2QixJQUFJLEVBQUUsY0FBYztFQUFFO0VBQ3RCQyxLQUFLLEVBQUVmLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDUyxRQUFRLEtBQUssWUFBWSxDQUFDO0FBQy9DLENBQUMsQ0FBQzs7QUFFRjtBQUNBLE1BQU1NLG1CQUFtQixHQUFHQSxDQUFDeEMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLElBQUksS0FBSztFQUM5QyxJQUFJLENBQUNGLEdBQUcsQ0FBQ0csT0FBTyxDQUFDc0MsT0FBTyxJQUFJLENBQUN6QyxHQUFHLENBQUMwQyxJQUFJLEVBQUU7SUFDckMxQyxHQUFHLENBQUNHLE9BQU8sQ0FBQ3NDLE9BQU8sR0FBRzVDLE1BQU0sQ0FBQ1EsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDQyxRQUFRLENBQUMsS0FBSyxDQUFDO0VBQzlEOztFQUVBO0VBQ0EsSUFBSSxDQUFDTixHQUFHLENBQUNHLE9BQU8sQ0FBQ3dDLElBQUksRUFBRTtJQUNyQjNDLEdBQUcsQ0FBQ0csT0FBTyxDQUFDd0MsSUFBSSxHQUFHO01BQ2pCQyxLQUFLLEVBQUUsRUFBRTtNQUNUQyxTQUFTLEVBQUUsSUFBSUMsSUFBSSxDQUFDO0lBQ3RCLENBQUM7RUFDSDtFQUVBNUMsSUFBSSxDQUFDLENBQUM7QUFDUixDQUFDOztBQUVEO0FBQ0EsTUFBTTZDLG1CQUFtQixHQUFHQSxDQUFDL0MsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLElBQUksS0FBSztFQUM5QyxJQUFJRixHQUFHLENBQUMwQyxJQUFJLElBQUkxQyxHQUFHLENBQUNHLE9BQU8sQ0FBQ3NDLE9BQU8sRUFBRTtJQUNuQztJQUNBLE9BQU96QyxHQUFHLENBQUNHLE9BQU8sQ0FBQ3NDLE9BQU87SUFDMUI7RUFDRjtFQUNBdkMsSUFBSSxDQUFDLENBQUM7QUFDUixDQUFDO0FBRUQ4QyxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNmbEQsaUJBQWlCO0VBQ2pCUSxpQkFBaUI7RUFDakJjLG1CQUFtQjtFQUNuQm1CLG1CQUFtQjtFQUNuQk87QUFDRixDQUFDIiwiaWdub3JlTGlzdCI6W119