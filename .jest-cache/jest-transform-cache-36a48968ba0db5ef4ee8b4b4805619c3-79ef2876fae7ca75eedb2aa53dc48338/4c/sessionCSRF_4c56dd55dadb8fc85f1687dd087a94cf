9d0581388015f2536088a2047cf0745a
const crypto = require('crypto');

// Unified CSRF token management
const generateCSRFToken = (req, res, next) => {
  if (!req.session.csrfToken) {
    req.session.csrfToken = crypto.randomBytes(32).toString('hex');
  }
  next();
};

// CSRF validation middleware
const validateCSRFToken = (req, res, next) => {
  // Skip CSRF for GET requests and API testing
  if (req.method === 'GET' || req.path.includes('/test')) {
    return next();
  }
  const token = req.headers['x-csrf-token'] || req.body._csrf;

  // Debug only on mismatch
  // console.log('CSRF Debug:', {
  //   method: req.method,
  //   path: req.path,
  //   'x-csrf-token': req.headers['x-csrf-token'],
  //   sessionCSRF: req.session?.csrfToken
  // });

  if (!token || token !== req.session.csrfToken) {
    console.error('CSRF token mismatch:', {
      provided: token ? 'yes' : 'no',
      session: req.session.csrfToken ? 'yes' : 'no',
      match: token === req.session.csrfToken
    });
    return res.status(403).json({
      success: false,
      error: {
        code: 'CSRF_TOKEN_MISMATCH',
        message: 'Invalid CSRF token'
      }
    });
  }
  next();
};

// Session configuration factory
const createSessionConfig = mongoUrl => ({
  secret: process.env.SESSION_SECRET || 'holistic-store-session-secret',
  resave: false,
  saveUninitialized: true,
  // Important for guest carts and CSRF
  store: require('connect-mongo').create({
    mongoUrl,
    touchAfter: 24 * 3600 // lazy session update
  }),
  cookie: {
    secure: process.env.NODE_ENV === 'production',
    httpOnly: true,
    maxAge: 1000 * 60 * 60 * 24 * 7,
    // 7 days
    sameSite: process.env.NODE_ENV === 'production' ? 'strict' : 'lax',
    path: '/'
  },
  name: 'holistic.sid',
  // Custom session name
  proxy: process.env.NODE_ENV === 'production' // Trust proxy in production
});

// Guest session enhancement
const enhanceGuestSession = (req, res, next) => {
  if (!req.session.guestId && !req.user) {
    req.session.guestId = crypto.randomBytes(16).toString('hex');
  }

  // Ensure cart exists in session
  if (!req.session.cart) {
    req.session.cart = {
      items: [],
      updatedAt: new Date()
    };
  }
  next();
};

// Session cleanup for authenticated users
const cleanupGuestSession = (req, res, next) => {
  if (req.user && req.session.guestId) {
    // User is now authenticated, clean up guest data
    delete req.session.guestId;
    // Cart migration should happen in auth flow
  }
  next();
};
module.exports = {
  generateCSRFToken,
  validateCSRFToken,
  createSessionConfig,
  enhanceGuestSession,
  cleanupGuestSession
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcnlwdG8iLCJyZXF1aXJlIiwiZ2VuZXJhdGVDU1JGVG9rZW4iLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2Vzc2lvbiIsImNzcmZUb2tlbiIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJ2YWxpZGF0ZUNTUkZUb2tlbiIsIm1ldGhvZCIsInBhdGgiLCJpbmNsdWRlcyIsInRva2VuIiwiaGVhZGVycyIsImJvZHkiLCJfY3NyZiIsImNvbnNvbGUiLCJlcnJvciIsInByb3ZpZGVkIiwibWF0Y2giLCJzdGF0dXMiLCJqc29uIiwic3VjY2VzcyIsImNvZGUiLCJtZXNzYWdlIiwiY3JlYXRlU2Vzc2lvbkNvbmZpZyIsIm1vbmdvVXJsIiwic2VjcmV0IiwicHJvY2VzcyIsImVudiIsIlNFU1NJT05fU0VDUkVUIiwicmVzYXZlIiwic2F2ZVVuaW5pdGlhbGl6ZWQiLCJzdG9yZSIsImNyZWF0ZSIsInRvdWNoQWZ0ZXIiLCJjb29raWUiLCJzZWN1cmUiLCJOT0RFX0VOViIsImh0dHBPbmx5IiwibWF4QWdlIiwic2FtZVNpdGUiLCJuYW1lIiwicHJveHkiLCJlbmhhbmNlR3Vlc3RTZXNzaW9uIiwiZ3Vlc3RJZCIsInVzZXIiLCJjYXJ0IiwiaXRlbXMiLCJ1cGRhdGVkQXQiLCJEYXRlIiwiY2xlYW51cEd1ZXN0U2Vzc2lvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJzZXNzaW9uQ1NSRi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcblxuLy8gVW5pZmllZCBDU1JGIHRva2VuIG1hbmFnZW1lbnRcbmNvbnN0IGdlbmVyYXRlQ1NSRlRva2VuID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGlmICghcmVxLnNlc3Npb24uY3NyZlRva2VuKSB7XG4gICAgcmVxLnNlc3Npb24uY3NyZlRva2VuID0gY3J5cHRvLnJhbmRvbUJ5dGVzKDMyKS50b1N0cmluZygnaGV4Jyk7XG4gIH1cbiAgbmV4dCgpO1xufTtcblxuLy8gQ1NSRiB2YWxpZGF0aW9uIG1pZGRsZXdhcmVcbmNvbnN0IHZhbGlkYXRlQ1NSRlRva2VuID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIC8vIFNraXAgQ1NSRiBmb3IgR0VUIHJlcXVlc3RzIGFuZCBBUEkgdGVzdGluZ1xuICBpZiAocmVxLm1ldGhvZCA9PT0gJ0dFVCcgfHwgcmVxLnBhdGguaW5jbHVkZXMoJy90ZXN0JykpIHtcbiAgICByZXR1cm4gbmV4dCgpO1xuICB9XG5cbiAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyc1sneC1jc3JmLXRva2VuJ10gfHwgcmVxLmJvZHkuX2NzcmY7XG4gIFxuICAvLyBEZWJ1ZyBvbmx5IG9uIG1pc21hdGNoXG4gIC8vIGNvbnNvbGUubG9nKCdDU1JGIERlYnVnOicsIHtcbiAgLy8gICBtZXRob2Q6IHJlcS5tZXRob2QsXG4gIC8vICAgcGF0aDogcmVxLnBhdGgsXG4gIC8vICAgJ3gtY3NyZi10b2tlbic6IHJlcS5oZWFkZXJzWyd4LWNzcmYtdG9rZW4nXSxcbiAgLy8gICBzZXNzaW9uQ1NSRjogcmVxLnNlc3Npb24/LmNzcmZUb2tlblxuICAvLyB9KTtcbiAgXG4gIGlmICghdG9rZW4gfHwgdG9rZW4gIT09IHJlcS5zZXNzaW9uLmNzcmZUb2tlbikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0NTUkYgdG9rZW4gbWlzbWF0Y2g6Jywge1xuICAgICAgcHJvdmlkZWQ6IHRva2VuID8gJ3llcycgOiAnbm8nLFxuICAgICAgc2Vzc2lvbjogcmVxLnNlc3Npb24uY3NyZlRva2VuID8gJ3llcycgOiAnbm8nLFxuICAgICAgbWF0Y2g6IHRva2VuID09PSByZXEuc2Vzc2lvbi5jc3JmVG9rZW5cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDMpLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjoge1xuICAgICAgICBjb2RlOiAnQ1NSRl9UT0tFTl9NSVNNQVRDSCcsXG4gICAgICAgIG1lc3NhZ2U6ICdJbnZhbGlkIENTUkYgdG9rZW4nXG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgXG4gIG5leHQoKTtcbn07XG5cbi8vIFNlc3Npb24gY29uZmlndXJhdGlvbiBmYWN0b3J5XG5jb25zdCBjcmVhdGVTZXNzaW9uQ29uZmlnID0gKG1vbmdvVXJsKSA9PiAoe1xuICBzZWNyZXQ6IHByb2Nlc3MuZW52LlNFU1NJT05fU0VDUkVUIHx8ICdob2xpc3RpYy1zdG9yZS1zZXNzaW9uLXNlY3JldCcsXG4gIHJlc2F2ZTogZmFsc2UsXG4gIHNhdmVVbmluaXRpYWxpemVkOiB0cnVlLCAvLyBJbXBvcnRhbnQgZm9yIGd1ZXN0IGNhcnRzIGFuZCBDU1JGXG4gIHN0b3JlOiByZXF1aXJlKCdjb25uZWN0LW1vbmdvJykuY3JlYXRlKHtcbiAgICBtb25nb1VybCxcbiAgICB0b3VjaEFmdGVyOiAyNCAqIDM2MDAgLy8gbGF6eSBzZXNzaW9uIHVwZGF0ZVxuICB9KSxcbiAgY29va2llOiB7XG4gICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLFxuICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgIG1heEFnZTogMTAwMCAqIDYwICogNjAgKiAyNCAqIDcsIC8vIDcgZGF5c1xuICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gJ3N0cmljdCcgOiAnbGF4JyxcbiAgICBwYXRoOiAnLydcbiAgfSxcbiAgbmFtZTogJ2hvbGlzdGljLnNpZCcsIC8vIEN1c3RvbSBzZXNzaW9uIG5hbWVcbiAgcHJveHk6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgLy8gVHJ1c3QgcHJveHkgaW4gcHJvZHVjdGlvblxufSk7XG5cbi8vIEd1ZXN0IHNlc3Npb24gZW5oYW5jZW1lbnRcbmNvbnN0IGVuaGFuY2VHdWVzdFNlc3Npb24gPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgaWYgKCFyZXEuc2Vzc2lvbi5ndWVzdElkICYmICFyZXEudXNlcikge1xuICAgIHJlcS5zZXNzaW9uLmd1ZXN0SWQgPSBjcnlwdG8ucmFuZG9tQnl0ZXMoMTYpLnRvU3RyaW5nKCdoZXgnKTtcbiAgfVxuICBcbiAgLy8gRW5zdXJlIGNhcnQgZXhpc3RzIGluIHNlc3Npb25cbiAgaWYgKCFyZXEuc2Vzc2lvbi5jYXJ0KSB7XG4gICAgcmVxLnNlc3Npb24uY2FydCA9IHtcbiAgICAgIGl0ZW1zOiBbXSxcbiAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKVxuICAgIH07XG4gIH1cbiAgXG4gIG5leHQoKTtcbn07XG5cbi8vIFNlc3Npb24gY2xlYW51cCBmb3IgYXV0aGVudGljYXRlZCB1c2Vyc1xuY29uc3QgY2xlYW51cEd1ZXN0U2Vzc2lvbiA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZiAocmVxLnVzZXIgJiYgcmVxLnNlc3Npb24uZ3Vlc3RJZCkge1xuICAgIC8vIFVzZXIgaXMgbm93IGF1dGhlbnRpY2F0ZWQsIGNsZWFuIHVwIGd1ZXN0IGRhdGFcbiAgICBkZWxldGUgcmVxLnNlc3Npb24uZ3Vlc3RJZDtcbiAgICAvLyBDYXJ0IG1pZ3JhdGlvbiBzaG91bGQgaGFwcGVuIGluIGF1dGggZmxvd1xuICB9XG4gIG5leHQoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZW5lcmF0ZUNTUkZUb2tlbixcbiAgdmFsaWRhdGVDU1JGVG9rZW4sXG4gIGNyZWF0ZVNlc3Npb25Db25maWcsXG4gIGVuaGFuY2VHdWVzdFNlc3Npb24sXG4gIGNsZWFudXBHdWVzdFNlc3Npb25cbn07Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFRLENBQUM7O0FBRWhDO0FBQ0EsTUFBTUMsaUJBQWlCLEdBQUdBLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEtBQUs7RUFDNUMsSUFBSSxDQUFDRixHQUFHLENBQUNHLE9BQU8sQ0FBQ0MsU0FBUyxFQUFFO0lBQzFCSixHQUFHLENBQUNHLE9BQU8sQ0FBQ0MsU0FBUyxHQUFHUCxNQUFNLENBQUNRLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLEtBQUssQ0FBQztFQUNoRTtFQUNBSixJQUFJLENBQUMsQ0FBQztBQUNSLENBQUM7O0FBRUQ7QUFDQSxNQUFNSyxpQkFBaUIsR0FBR0EsQ0FBQ1AsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLElBQUksS0FBSztFQUM1QztFQUNBLElBQUlGLEdBQUcsQ0FBQ1EsTUFBTSxLQUFLLEtBQUssSUFBSVIsR0FBRyxDQUFDUyxJQUFJLENBQUNDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRTtJQUN0RCxPQUFPUixJQUFJLENBQUMsQ0FBQztFQUNmO0VBRUEsTUFBTVMsS0FBSyxHQUFHWCxHQUFHLENBQUNZLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSVosR0FBRyxDQUFDYSxJQUFJLENBQUNDLEtBQUs7O0VBRTNEO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztFQUVBLElBQUksQ0FBQ0gsS0FBSyxJQUFJQSxLQUFLLEtBQUtYLEdBQUcsQ0FBQ0csT0FBTyxDQUFDQyxTQUFTLEVBQUU7SUFDN0NXLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDLHNCQUFzQixFQUFFO01BQ3BDQyxRQUFRLEVBQUVOLEtBQUssR0FBRyxLQUFLLEdBQUcsSUFBSTtNQUM5QlIsT0FBTyxFQUFFSCxHQUFHLENBQUNHLE9BQU8sQ0FBQ0MsU0FBUyxHQUFHLEtBQUssR0FBRyxJQUFJO01BQzdDYyxLQUFLLEVBQUVQLEtBQUssS0FBS1gsR0FBRyxDQUFDRyxPQUFPLENBQUNDO0lBQy9CLENBQUMsQ0FBQztJQUNGLE9BQU9ILEdBQUcsQ0FBQ2tCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO01BQzFCQyxPQUFPLEVBQUUsS0FBSztNQUNkTCxLQUFLLEVBQUU7UUFDTE0sSUFBSSxFQUFFLHFCQUFxQjtRQUMzQkMsT0FBTyxFQUFFO01BQ1g7SUFDRixDQUFDLENBQUM7RUFDSjtFQUVBckIsSUFBSSxDQUFDLENBQUM7QUFDUixDQUFDOztBQUVEO0FBQ0EsTUFBTXNCLG1CQUFtQixHQUFJQyxRQUFRLEtBQU07RUFDekNDLE1BQU0sRUFBRUMsT0FBTyxDQUFDQyxHQUFHLENBQUNDLGNBQWMsSUFBSSwrQkFBK0I7RUFDckVDLE1BQU0sRUFBRSxLQUFLO0VBQ2JDLGlCQUFpQixFQUFFLElBQUk7RUFBRTtFQUN6QkMsS0FBSyxFQUFFbEMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDbUMsTUFBTSxDQUFDO0lBQ3JDUixRQUFRO0lBQ1JTLFVBQVUsRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDO0VBQ3hCLENBQUMsQ0FBQztFQUNGQyxNQUFNLEVBQUU7SUFDTkMsTUFBTSxFQUFFVCxPQUFPLENBQUNDLEdBQUcsQ0FBQ1MsUUFBUSxLQUFLLFlBQVk7SUFDN0NDLFFBQVEsRUFBRSxJQUFJO0lBQ2RDLE1BQU0sRUFBRSxJQUFJLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztJQUFFO0lBQ2pDQyxRQUFRLEVBQUViLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDUyxRQUFRLEtBQUssWUFBWSxHQUFHLFFBQVEsR0FBRyxLQUFLO0lBQ2xFNUIsSUFBSSxFQUFFO0VBQ1IsQ0FBQztFQUNEZ0MsSUFBSSxFQUFFLGNBQWM7RUFBRTtFQUN0QkMsS0FBSyxFQUFFZixPQUFPLENBQUNDLEdBQUcsQ0FBQ1MsUUFBUSxLQUFLLFlBQVksQ0FBQztBQUMvQyxDQUFDLENBQUM7O0FBRUY7QUFDQSxNQUFNTSxtQkFBbUIsR0FBR0EsQ0FBQzNDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEtBQUs7RUFDOUMsSUFBSSxDQUFDRixHQUFHLENBQUNHLE9BQU8sQ0FBQ3lDLE9BQU8sSUFBSSxDQUFDNUMsR0FBRyxDQUFDNkMsSUFBSSxFQUFFO0lBQ3JDN0MsR0FBRyxDQUFDRyxPQUFPLENBQUN5QyxPQUFPLEdBQUcvQyxNQUFNLENBQUNRLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLEtBQUssQ0FBQztFQUM5RDs7RUFFQTtFQUNBLElBQUksQ0FBQ04sR0FBRyxDQUFDRyxPQUFPLENBQUMyQyxJQUFJLEVBQUU7SUFDckI5QyxHQUFHLENBQUNHLE9BQU8sQ0FBQzJDLElBQUksR0FBRztNQUNqQkMsS0FBSyxFQUFFLEVBQUU7TUFDVEMsU0FBUyxFQUFFLElBQUlDLElBQUksQ0FBQztJQUN0QixDQUFDO0VBQ0g7RUFFQS9DLElBQUksQ0FBQyxDQUFDO0FBQ1IsQ0FBQzs7QUFFRDtBQUNBLE1BQU1nRCxtQkFBbUIsR0FBR0EsQ0FBQ2xELEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEtBQUs7RUFDOUMsSUFBSUYsR0FBRyxDQUFDNkMsSUFBSSxJQUFJN0MsR0FBRyxDQUFDRyxPQUFPLENBQUN5QyxPQUFPLEVBQUU7SUFDbkM7SUFDQSxPQUFPNUMsR0FBRyxDQUFDRyxPQUFPLENBQUN5QyxPQUFPO0lBQzFCO0VBQ0Y7RUFDQTFDLElBQUksQ0FBQyxDQUFDO0FBQ1IsQ0FBQztBQUVEaUQsTUFBTSxDQUFDQyxPQUFPLEdBQUc7RUFDZnJELGlCQUFpQjtFQUNqQlEsaUJBQWlCO0VBQ2pCaUIsbUJBQW1CO0VBQ25CbUIsbUJBQW1CO0VBQ25CTztBQUNGLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=