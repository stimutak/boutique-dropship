{"version":3,"names":["request","require","mongoose","app","Order","Product","User","jwt","describe","authToken","testUser","testProduct","beforeAll","afterAll","beforeEach","create","email","password","firstName","lastName","sign","userId","_id","process","env","JWT_SECRET","name","slug","description","shortDescription","price","prices","USD","EUR","JPY","CNY","category","isActive","afterEach","deleteMany","it","response","post","set","send","guestInfo","phone","items","productId","quantity","shippingAddress","street","city","state","zipCode","country","billingAddress","expect","status","toBe","body","order","currency","exchangeRate","total","toBeCloseTo","toBeGreaterThan","orderNumber","product","subtotal","tax","shipping"],"sources":["orders-currency.test.js"],"sourcesContent":["const request = require('supertest');\nconst mongoose = require('mongoose');\nconst app = require('../../server');\nconst Order = require('../../models/Order');\nconst Product = require('../../models/Product');\nconst User = require('../../models/User');\nconst jwt = require('jsonwebtoken');\n\ndescribe('Order Currency Support', () => {\n  let authToken;\n  let testUser;\n  let testProduct;\n\n  beforeAll(async () => {\n    // Connection is already established by test setup\n  });\n\n  afterAll(async () => {\n    // Cleanup handled by test setup\n  });\n\n  beforeEach(async () => {\n    // Create test user\n    testUser = await User.create({\n      email: 'test@example.com',\n      password: 'Password123!',\n      firstName: 'Test',\n      lastName: 'User'\n    });\n    authToken = jwt.sign({ userId: testUser._id }, process.env.JWT_SECRET || 'test-secret');\n\n    // Create test product with multiple currency prices\n    testProduct = await Product.create({\n      name: 'Test Crystal',\n      slug: 'test-crystal',\n      description: 'Test description',\n      shortDescription: 'Test short description',\n      price: 100, // USD base price\n      prices: {\n        USD: 100,\n        EUR: 85,\n        JPY: 11000,\n        CNY: 645\n      },\n      category: 'crystals',\n      isActive: true\n    });\n  });\n\n  afterEach(async () => {\n    await User.deleteMany({});\n    await Product.deleteMany({});\n    await Order.deleteMany({});\n  });\n\n  describe('Guest Checkout', () => {\n    it('should capture EUR currency from locale header', async () => {\n      const response = await request(app)\n        .post('/api/orders/guest')\n        .set('x-locale', 'fr') // French locale = EUR\n        .send({\n          guestInfo: {\n            email: 'guest@example.com',\n            firstName: 'Guest',\n            lastName: 'User',\n            phone: '1234567890'\n          },\n          items: [{\n            productId: testProduct._id,\n            quantity: 1\n          }],\n          shippingAddress: {\n            firstName: 'Guest',\n            lastName: 'User',\n            street: '123 Test St',\n            city: 'Paris',\n            state: 'IDF',\n            zipCode: '75001',\n            country: 'FR'\n          },\n          billingAddress: {\n            firstName: 'Guest',\n            lastName: 'User',\n            street: '123 Test St',\n            city: 'Paris',\n            state: 'IDF',\n            zipCode: '75001',\n            country: 'FR'\n          }\n        });\n\n      expect(response.status).toBe(201);\n      expect(response.body.order.currency).toBe('EUR');\n      expect(response.body.order.exchangeRate).toBe(0.85);\n      expect(response.body.order.total).toBeCloseTo(85 * 1.08 + 5.99); // EUR price + tax + shipping\n    });\n\n    it('should default to USD when no locale header', async () => {\n      const response = await request(app)\n        .post('/api/orders/guest')\n        .send({\n          guestInfo: {\n            email: 'guest@example.com',\n            firstName: 'Guest',\n            lastName: 'User'\n          },\n          items: [{\n            productId: testProduct._id,\n            quantity: 1\n          }],\n          shippingAddress: {\n            firstName: 'Guest',\n            lastName: 'User',\n            street: '123 Test St',\n            city: 'New York',\n            state: 'NY',\n            zipCode: '10001',\n            country: 'US'\n          },\n          billingAddress: {\n            firstName: 'Guest',\n            lastName: 'User',\n            street: '123 Test St',\n            city: 'New York',\n            state: 'NY',\n            zipCode: '10001',\n            country: 'US'\n          }\n        });\n\n      expect(response.status).toBe(201);\n      expect(response.body.order.currency).toBe('USD');\n      expect(response.body.order.exchangeRate).toBe(1);\n    });\n  });\n\n  describe('Authenticated Checkout', () => {\n    it('should capture JPY currency from locale header', async () => {\n      const response = await request(app)\n        .post('/api/orders')\n        .set('Authorization', `Bearer ${authToken}`)\n        .set('x-locale', 'ja') // Japanese locale = JPY\n        .send({\n          items: [{\n            productId: testProduct._id,\n            quantity: 2\n          }],\n          shippingAddress: {\n            firstName: 'Test',\n            lastName: 'User',\n            street: '123 Test St',\n            city: 'Tokyo',\n            state: 'Tokyo',\n            zipCode: '100-0001',\n            country: 'JP'\n          }\n        });\n\n      expect(response.status).toBe(201);\n      expect(response.body.order.currency).toBe('JPY');\n      expect(response.body.order.exchangeRate).toBe(110);\n      // JPY doesn't use decimals, shipping might be different\n      expect(response.body.order.total).toBeGreaterThan(20000); // Rough estimate\n    });\n  });\n\n  describe('Payment Processing', () => {\n    it('should send correct currency to payment processor', async () => {\n      const order = await Order.create({\n        orderNumber: 'TEST-123',\n        guestInfo: {\n          email: 'test@example.com',\n          firstName: 'Test',\n          lastName: 'User'\n        },\n        items: [{\n          product: testProduct._id,\n          quantity: 1,\n          price: 85 // EUR price\n        }],\n        currency: 'EUR',\n        exchangeRate: 0.85,\n        subtotal: 85,\n        tax: 6.8,\n        shipping: 5.99,\n        total: 97.79,\n        shippingAddress: {\n          firstName: 'Test',\n          lastName: 'User',\n          street: '123 Test St',\n          city: 'Paris',\n          state: 'IDF',\n          zipCode: '75001',\n          country: 'FR'\n        },\n        billingAddress: {\n          firstName: 'Test',\n          lastName: 'User',\n          street: '123 Test St',\n          city: 'Paris',\n          state: 'IDF',\n          zipCode: '75001',\n          country: 'FR'\n        }\n      });\n\n      // Test payment endpoint would use order currency\n      // This is a placeholder for the actual payment test\n      expect(order.currency).toBe('EUR');\n      expect(order.total).toBeCloseTo(97.79);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}