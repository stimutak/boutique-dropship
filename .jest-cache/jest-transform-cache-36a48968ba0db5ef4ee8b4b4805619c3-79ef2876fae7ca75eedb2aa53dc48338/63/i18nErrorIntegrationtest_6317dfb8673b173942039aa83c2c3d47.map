{"version":3,"names":["request","require","express","AppError","globalErrorHandler","i18nMiddleware","errorResponse","ErrorCodes","describe","app","beforeEach","use","json","get","req","res","next","PRODUCT_NOT_FOUND","console","log","i18n","locale","error","mockValidationErrors","array","msg","param","location","validationError","test","response","expect","body","toEqual","success","code","message","set","details","field","originalEnv","process","env","NODE_ENV","afterEach","toBe","originalMessage","stack","toBeDefined","isRTL"],"sources":["i18nErrorIntegration.test.js"],"sourcesContent":["const request = require('supertest');\nconst express = require('express');\nconst { AppError, globalErrorHandler } = require('../middleware/errorHandler');\nconst { i18nMiddleware } = require('../utils/i18n');\nconst { errorResponse, ErrorCodes } = require('../utils/errorHandler');\n\ndescribe('i18n Error Integration', () => {\n  let app;\n\n  beforeEach(() => {\n    app = express();\n    app.use(express.json());\n    app.use(i18nMiddleware);\n    app.use(errorResponse);\n\n    // Test routes\n    app.get('/test-apperror', (req, res, next) => {\n      next(new AppError('Product not found', 404, ErrorCodes.PRODUCT_NOT_FOUND));\n    });\n\n    app.get('/test-res-error', (req, res) => {\n      // Debug: log i18n function\n      console.log('req.i18n exists:', !!req.i18n);\n      console.log('req.locale:', req.locale);\n      res.error(404, ErrorCodes.PRODUCT_NOT_FOUND, 'Product not found');\n    });\n\n    app.get('/test-validation', (req, res) => {\n      const mockValidationErrors = {\n        array: () => [\n          { msg: 'Invalid email', param: 'email', location: 'body' }\n        ]\n      };\n      res.validationError(mockValidationErrors);\n    });\n\n    app.use(globalErrorHandler);\n  });\n\n  describe('Error message translation', () => {\n    test('should return English error by default', async () => {\n      const response = await request(app)\n        .get('/test-apperror')\n        .expect(404);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found'\n        }\n      });\n    });\n\n    test('should return Spanish error when locale is es', async () => {\n      const response = await request(app)\n        .get('/test-apperror')\n        .set('x-locale', 'es')\n        .expect(404);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Producto no encontrado'\n        }\n      });\n    });\n\n    test('should return French error when locale is fr', async () => {\n      const response = await request(app)\n        .get('/test-apperror')\n        .set('x-locale', 'fr')\n        .expect(404);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Produit non trouvé'\n        }\n      });\n    });\n\n    test('should return Arabic error when locale is ar', async () => {\n      const response = await request(app)\n        .get('/test-apperror')\n        .set('x-locale', 'ar')\n        .expect(404);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'المنتج غير موجود'\n        }\n      });\n    });\n\n    test('should return Hebrew error when locale is he', async () => {\n      const response = await request(app)\n        .get('/test-apperror')\n        .set('x-locale', 'he')\n        .expect(404);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'המוצר לא נמצא'\n        }\n      });\n    });\n\n    test('should handle Chinese locale', async () => {\n      const response = await request(app)\n        .get('/test-apperror')\n        .set('x-locale', 'zh')\n        .expect(404);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: '产品未找到'\n        }\n      });\n    });\n\n    test('should handle Japanese locale', async () => {\n      const response = await request(app)\n        .get('/test-apperror')\n        .set('x-locale', 'ja')\n        .expect(404);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: '商品が見つかりません'\n        }\n      });\n    });\n\n    test('should handle German locale', async () => {\n      const response = await request(app)\n        .get('/test-apperror')\n        .set('x-locale', 'de')\n        .expect(404);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Produkt nicht gefunden'\n        }\n      });\n    });\n  });\n\n  describe('Error response helpers', () => {\n    test('res.error should return translated error', async () => {\n      const response = await request(app)\n        .get('/test-res-error')\n        .set('x-locale', 'es')\n        .expect(404);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Producto no encontrado'\n        }\n      });\n    });\n\n    test('validation errors should use default locale', async () => {\n      const response = await request(app)\n        .get('/test-validation')\n        .expect(400);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Invalid input data',\n          details: [\n            { field: 'email', message: 'Invalid email', location: 'body' }\n          ]\n        }\n      });\n    });\n  });\n\n  describe('Development mode', () => {\n    const originalEnv = process.env.NODE_ENV;\n\n    beforeEach(() => {\n      process.env.NODE_ENV = 'development';\n    });\n\n    afterEach(() => {\n      process.env.NODE_ENV = originalEnv;\n    });\n\n    test('should include additional debug info in development', async () => {\n      const response = await request(app)\n        .get('/test-apperror')\n        .set('x-locale', 'es')\n        .expect(404);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe('PRODUCT_NOT_FOUND');\n      expect(response.body.error.message).toBe('Producto no encontrado');\n      expect(response.body.error.originalMessage).toBe('Product not found');\n      expect(response.body.error.locale).toBe('es');\n      expect(response.body.error.stack).toBeDefined();\n    });\n  });\n\n  describe('RTL language support', () => {\n    test('should set RTL flag for Arabic', async () => {\n      const app = express();\n      app.use(i18nMiddleware);\n      \n      app.get('/test-rtl', (req, res) => {\n        res.json({\n          locale: req.locale,\n          isRTL: req.isRTL\n        });\n      });\n\n      const response = await request(app)\n        .get('/test-rtl')\n        .set('x-locale', 'ar')\n        .expect(200);\n\n      expect(response.body).toEqual({\n        locale: 'ar',\n        isRTL: true\n      });\n    });\n\n    test('should set RTL flag for Hebrew', async () => {\n      const app = express();\n      app.use(i18nMiddleware);\n      \n      app.get('/test-rtl', (req, res) => {\n        res.json({\n          locale: req.locale,\n          isRTL: req.isRTL\n        });\n      });\n\n      const response = await request(app)\n        .get('/test-rtl')\n        .set('x-locale', 'he')\n        .expect(200);\n\n      expect(response.body).toEqual({\n        locale: 'he',\n        isRTL: true\n      });\n    });\n\n    test('should not set RTL flag for LTR languages', async () => {\n      const app = express();\n      app.use(i18nMiddleware);\n      \n      app.get('/test-rtl', (req, res) => {\n        res.json({\n          locale: req.locale,\n          isRTL: req.isRTL\n        });\n      });\n\n      const response = await request(app)\n        .get('/test-rtl')\n        .set('x-locale', 'en')\n        .expect(200);\n\n      expect(response.body).toEqual({\n        locale: 'en',\n        isRTL: false\n      });\n    });\n  });\n\n  describe('Fallback behavior', () => {\n    test('should fallback to English for unsupported locale', async () => {\n      const response = await request(app)\n        .get('/test-apperror')\n        .set('x-locale', 'ru') // Russian not supported\n        .expect(404);\n\n      expect(response.body).toEqual({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found'\n        }\n      });\n    });\n\n    test('should use default message when translation missing', async () => {\n      const app = express();\n      app.use(express.json());\n      app.use(i18nMiddleware);\n      \n      app.get('/test-custom', (req, res, next) => {\n        // Using a code that doesn't exist in translations\n        next(new AppError('This is a custom error', 400, 'CUSTOM_ERROR_CODE'));\n      });\n      \n      app.use(globalErrorHandler);\n\n      const response = await request(app)\n        .get('/test-custom')\n        .set('x-locale', 'es')\n        .expect(400);\n\n      expect(response.body.error.message).toBe('This is a custom error');\n    });\n  });\n});"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EAAEE,QAAQ;EAAEC;AAAmB,CAAC,GAAGH,OAAO,CAAC,4BAA4B,CAAC;AAC9E,MAAM;EAAEI;AAAe,CAAC,GAAGJ,OAAO,CAAC,eAAe,CAAC;AACnD,MAAM;EAAEK,aAAa;EAAEC;AAAW,CAAC,GAAGN,OAAO,CAAC,uBAAuB,CAAC;AAEtEO,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACvC,IAAIC,GAAG;EAEPC,UAAU,CAAC,MAAM;IACfD,GAAG,GAAGP,OAAO,CAAC,CAAC;IACfO,GAAG,CAACE,GAAG,CAACT,OAAO,CAACU,IAAI,CAAC,CAAC,CAAC;IACvBH,GAAG,CAACE,GAAG,CAACN,cAAc,CAAC;IACvBI,GAAG,CAACE,GAAG,CAACL,aAAa,CAAC;;IAEtB;IACAG,GAAG,CAACI,GAAG,CAAC,gBAAgB,EAAE,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;MAC5CA,IAAI,CAAC,IAAIb,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAEI,UAAU,CAACU,iBAAiB,CAAC,CAAC;IAC5E,CAAC,CAAC;IAEFR,GAAG,CAACI,GAAG,CAAC,iBAAiB,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;MACvC;MACAG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,CAAC,CAACL,GAAG,CAACM,IAAI,CAAC;MAC3CF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,GAAG,CAACO,MAAM,CAAC;MACtCN,GAAG,CAACO,KAAK,CAAC,GAAG,EAAEf,UAAU,CAACU,iBAAiB,EAAE,mBAAmB,CAAC;IACnE,CAAC,CAAC;IAEFR,GAAG,CAACI,GAAG,CAAC,kBAAkB,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;MACxC,MAAMQ,oBAAoB,GAAG;QAC3BC,KAAK,EAAEA,CAAA,KAAM,CACX;UAAEC,GAAG,EAAE,eAAe;UAAEC,KAAK,EAAE,OAAO;UAAEC,QAAQ,EAAE;QAAO,CAAC;MAE9D,CAAC;MACDZ,GAAG,CAACa,eAAe,CAACL,oBAAoB,CAAC;IAC3C,CAAC,CAAC;IAEFd,GAAG,CAACE,GAAG,CAACP,kBAAkB,CAAC;EAC7B,CAAC,CAAC;EAEFI,QAAQ,CAAC,2BAA2B,EAAE,MAAM;IAC1CqB,IAAI,CAAC,wCAAwC,EAAE,YAAY;MACzD,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,gBAAgB,CAAC,CACrBkB,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFP,IAAI,CAAC,+CAA+C,EAAE,YAAY;MAChE,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,gBAAgB,CAAC,CACrBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFP,IAAI,CAAC,8CAA8C,EAAE,YAAY;MAC/D,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,gBAAgB,CAAC,CACrBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFP,IAAI,CAAC,8CAA8C,EAAE,YAAY;MAC/D,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,gBAAgB,CAAC,CACrBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFP,IAAI,CAAC,8CAA8C,EAAE,YAAY;MAC/D,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,gBAAgB,CAAC,CACrBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFP,IAAI,CAAC,8BAA8B,EAAE,YAAY;MAC/C,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,gBAAgB,CAAC,CACrBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFP,IAAI,CAAC,+BAA+B,EAAE,YAAY;MAChD,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,gBAAgB,CAAC,CACrBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFP,IAAI,CAAC,6BAA6B,EAAE,YAAY;MAC9C,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,gBAAgB,CAAC,CACrBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF5B,QAAQ,CAAC,wBAAwB,EAAE,MAAM;IACvCqB,IAAI,CAAC,0CAA0C,EAAE,YAAY;MAC3D,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,iBAAiB,CAAC,CACtBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFP,IAAI,CAAC,6CAA6C,EAAE,YAAY;MAC9D,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,kBAAkB,CAAC,CACvBkB,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,kBAAkB;UACxBC,OAAO,EAAE,oBAAoB;UAC7BE,OAAO,EAAE,CACP;YAAEC,KAAK,EAAE,OAAO;YAAEH,OAAO,EAAE,eAAe;YAAET,QAAQ,EAAE;UAAO,CAAC;QAElE;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFnB,QAAQ,CAAC,kBAAkB,EAAE,MAAM;IACjC,MAAMgC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ;IAExCjC,UAAU,CAAC,MAAM;MACf+B,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAG,aAAa;IACtC,CAAC,CAAC;IAEFC,SAAS,CAAC,MAAM;MACdH,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAGH,WAAW;IACpC,CAAC,CAAC;IAEFX,IAAI,CAAC,qDAAqD,EAAE,YAAY;MACtE,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,gBAAgB,CAAC,CACrBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAC,CAACW,IAAI,CAAC,KAAK,CAAC;MACzCd,MAAM,CAACD,QAAQ,CAACE,IAAI,CAACV,KAAK,CAACa,IAAI,CAAC,CAACU,IAAI,CAAC,mBAAmB,CAAC;MAC1Dd,MAAM,CAACD,QAAQ,CAACE,IAAI,CAACV,KAAK,CAACc,OAAO,CAAC,CAACS,IAAI,CAAC,wBAAwB,CAAC;MAClEd,MAAM,CAACD,QAAQ,CAACE,IAAI,CAACV,KAAK,CAACwB,eAAe,CAAC,CAACD,IAAI,CAAC,mBAAmB,CAAC;MACrEd,MAAM,CAACD,QAAQ,CAACE,IAAI,CAACV,KAAK,CAACD,MAAM,CAAC,CAACwB,IAAI,CAAC,IAAI,CAAC;MAC7Cd,MAAM,CAACD,QAAQ,CAACE,IAAI,CAACV,KAAK,CAACyB,KAAK,CAAC,CAACC,WAAW,CAAC,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFxC,QAAQ,CAAC,sBAAsB,EAAE,MAAM;IACrCqB,IAAI,CAAC,gCAAgC,EAAE,YAAY;MACjD,MAAMpB,GAAG,GAAGP,OAAO,CAAC,CAAC;MACrBO,GAAG,CAACE,GAAG,CAACN,cAAc,CAAC;MAEvBI,GAAG,CAACI,GAAG,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;QACjCA,GAAG,CAACH,IAAI,CAAC;UACPS,MAAM,EAAEP,GAAG,CAACO,MAAM;UAClB4B,KAAK,EAAEnC,GAAG,CAACmC;QACb,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,MAAMnB,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,WAAW,CAAC,CAChBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BZ,MAAM,EAAE,IAAI;QACZ4B,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFpB,IAAI,CAAC,gCAAgC,EAAE,YAAY;MACjD,MAAMpB,GAAG,GAAGP,OAAO,CAAC,CAAC;MACrBO,GAAG,CAACE,GAAG,CAACN,cAAc,CAAC;MAEvBI,GAAG,CAACI,GAAG,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;QACjCA,GAAG,CAACH,IAAI,CAAC;UACPS,MAAM,EAAEP,GAAG,CAACO,MAAM;UAClB4B,KAAK,EAAEnC,GAAG,CAACmC;QACb,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,MAAMnB,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,WAAW,CAAC,CAChBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BZ,MAAM,EAAE,IAAI;QACZ4B,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFpB,IAAI,CAAC,2CAA2C,EAAE,YAAY;MAC5D,MAAMpB,GAAG,GAAGP,OAAO,CAAC,CAAC;MACrBO,GAAG,CAACE,GAAG,CAACN,cAAc,CAAC;MAEvBI,GAAG,CAACI,GAAG,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;QACjCA,GAAG,CAACH,IAAI,CAAC;UACPS,MAAM,EAAEP,GAAG,CAACO,MAAM;UAClB4B,KAAK,EAAEnC,GAAG,CAACmC;QACb,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,MAAMnB,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,WAAW,CAAC,CAChBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BZ,MAAM,EAAE,IAAI;QACZ4B,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFzC,QAAQ,CAAC,mBAAmB,EAAE,MAAM;IAClCqB,IAAI,CAAC,mDAAmD,EAAE,YAAY;MACpE,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,gBAAgB,CAAC,CACrBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;MAAA,CACtBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC;QAC5BC,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE;UACLa,IAAI,EAAE,mBAAmB;UACzBC,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFP,IAAI,CAAC,qDAAqD,EAAE,YAAY;MACtE,MAAMpB,GAAG,GAAGP,OAAO,CAAC,CAAC;MACrBO,GAAG,CAACE,GAAG,CAACT,OAAO,CAACU,IAAI,CAAC,CAAC,CAAC;MACvBH,GAAG,CAACE,GAAG,CAACN,cAAc,CAAC;MAEvBI,GAAG,CAACI,GAAG,CAAC,cAAc,EAAE,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;QAC1C;QACAA,IAAI,CAAC,IAAIb,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE,mBAAmB,CAAC,CAAC;MACxE,CAAC,CAAC;MAEFM,GAAG,CAACE,GAAG,CAACP,kBAAkB,CAAC;MAE3B,MAAM0B,QAAQ,GAAG,MAAM9B,OAAO,CAACS,GAAG,CAAC,CAChCI,GAAG,CAAC,cAAc,CAAC,CACnBwB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CACrBN,MAAM,CAAC,GAAG,CAAC;MAEdA,MAAM,CAACD,QAAQ,CAACE,IAAI,CAACV,KAAK,CAACc,OAAO,CAAC,CAACS,IAAI,CAAC,wBAAwB,CAAC;IACpE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}