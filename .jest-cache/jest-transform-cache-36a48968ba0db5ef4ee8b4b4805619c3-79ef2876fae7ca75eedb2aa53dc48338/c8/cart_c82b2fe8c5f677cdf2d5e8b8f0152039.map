{"version":3,"names":["express","require","router","Router","Product","User","Cart","authenticateToken","validateCSRFToken","cartService","cleanupInvalidCarts","result","deleteMany","sessionId","$not","deletedCount","console","log","error","getOrCreateCart","req","user","findById","_id","cart","items","updatedAt","Date","save","type","headers","sessionID","startsWith","now","Math","random","toString","substr","findOne","length","get","res","cartData","getCartWithPerformanceOptimization","serviceError","warn","message","populatedCart","Promise","all","map","item","product","select","isActive","toPublicJSON","quantity","price","subtotal","validCartItems","filter","itemCount","reduce","total","json","success","data","round","isEmpty","status","code","post","productId","body","Number","isInteger","match","existingItemIndex","findIndex","currentQuantity","updateCartOptimistically","fallbackCart","addedAt","push","addItem","duration","performance","updatedCartData","prod","then","stack","details","process","env","NODE_ENV","undefined","put","itemIndex","splice","updateItem","findByIdAndUpdate","new","wasRemoved","cartItemCount","delete","removeItem","deleteOne","newCart","guestCartItems","userId","guestItemCount","mergeResult","mergeCartsWithConflictResolution","mergedItems","Array","isArray","guestItem","guestCart","conflicts","merge","guestCarts","find","userCarts","$exists","guestSessionId","serverSessionId","cartId","session","createdAt","email","currentSession","frontendSessionId","storedCartId","module","exports"],"sources":["cart.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Product = require('../models/Product');\nconst User = require('../models/User');\nconst Cart = require('../models/Cart');\nconst { authenticateToken } = require('../middleware/auth');\nconst { validateCSRFToken } = require('../middleware/sessionCSRF');\nconst cartService = require('../services/cartService');\n\n// Cleanup invalid cart sessions on startup\nconst cleanupInvalidCarts = async () => {\n  try {\n    const result = await Cart.deleteMany({\n      sessionId: { $not: /^guest_/ }\n    });\n    if (result.deletedCount > 0) {\n      console.log(`Cleaned up ${result.deletedCount} invalid cart sessions`);\n    }\n  } catch (error) {\n    console.error('Error cleaning up invalid carts:', error);\n  }\n};\n\n// Run cleanup\ncleanupInvalidCarts();\n\n// Helper function to get or create cart\nconst getOrCreateCart = async (req) => {\n  if (req.user) {\n    // For authenticated users, use user's cart\n    const user = await User.findById(req.user._id);\n    if (!user.cart) {\n      user.cart = { items: [], updatedAt: new Date() };\n      await user.save();\n    }\n    return { type: 'user', cart: user.cart, user };\n  } else {\n    // For guests, use session-based cart with database storage\n    // ONLY use frontend session ID from headers - NO FALLBACKS\n    let sessionId = req.headers['x-guest-session-id'];\n    \n    console.log('Frontend session ID from headers:', sessionId);\n    console.log('Server session ID:', req.sessionID);\n    \n    // STRICT: If no valid frontend session ID, always create a new one\n    if (!sessionId || !sessionId.startsWith('guest_')) {\n      sessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      console.log('Created NEW session ID (no valid frontend ID):', sessionId);\n    }\n    \n    // NEVER use server session ID as fallback\n    console.log('Final session ID to use:', sessionId);\n    \n    // Safety check: Only look for carts with proper guest session format\n    let cart = null;\n    if (sessionId.startsWith('guest_')) {\n      cart = await Cart.findOne({ sessionId });\n    }\n    \n    if (!cart) {\n      console.log('Creating NEW cart for session:', sessionId);\n      cart = new Cart({ sessionId, items: [] });\n      await cart.save();\n    } else {\n      console.log('Found EXISTING cart for session:', sessionId, 'with', cart.items.length, 'items');\n    }\n    \n    return { type: 'guest', cart, sessionId };\n  }\n};\n\n// Get cart contents with performance optimization\nrouter.get('/', authenticateToken, async (req, res) => {\n  try {\n    // Use fallback to original function if cart service fails\n    let cartData;\n    try {\n      cartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed, using fallback:', serviceError.message);\n      cartData = await getOrCreateCart(req);\n    }\n    \n    const { type, cart, user } = cartData;\n    \n    // Populate product details for cart items\n    const populatedCart = await Promise.all(\n      cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          return {\n            _id: item.product,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    \n    // Calculate totals\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n    \n    res.json({\n      success: true,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error fetching cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_FETCH_ERROR',\n        message: 'Failed to fetch cart'\n      }\n    });\n  }\n});\n\n// Add item to cart with optimistic updates\nrouter.post('/add', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId, quantity = 1 } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    if (!Number.isInteger(quantity) || quantity < 1 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 1 and 99'\n        }\n      });\n    }\n\n        // Validate product ID format\n    if (!productId.match(/^[0-9a-fA-F]{24}$/)) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_PRODUCT_ID',\n          message: 'Invalid product ID format'\n        }\n      });\n    }\n\n    // Check if product exists and is active\n    const product = await Product.findById(productId);\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found'\n        }\n      });\n    }\n    \n    if (!product.isActive) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found or inactive'\n        }\n      });\n    }\n\n    // Check for existing item and validate maximum quantity\n    const { type, cart, user } = await getOrCreateCart(req);\n    \n    if (type === 'user') {\n      const existingItemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (existingItemIndex >= 0) {\n        const currentQuantity = user.cart.items[existingItemIndex].quantity;\n        if (currentQuantity + quantity > 99) {\n          return res.status(400).json({\n            success: false,\n            error: {\n              code: 'MAX_QUANTITY_EXCEEDED',\n              message: 'Cannot exceed maximum quantity of 99'\n            }\n          });\n        }\n      }\n    } else {\n      const existingItemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (existingItemIndex >= 0) {\n        const currentQuantity = cart.items[existingItemIndex].quantity;\n        if (currentQuantity + quantity > 99) {\n          return res.status(400).json({\n            success: false,\n            error: {\n              code: 'MAX_QUANTITY_EXCEEDED',\n              message: 'Cannot exceed maximum quantity of 99'\n            }\n          });\n        }\n      }\n    }\n\n    // Use optimistic cart service with fallback\n    let result;\n    try {\n      result = await cartService.updateCartOptimistically(req, 'add', {\n        productId,\n        quantity\n      });\n    } catch (serviceError) {\n      console.warn('Cart service failed, using fallback:', serviceError.message);\n      // Fallback to original logic - need to re-fetch cart since service failed\n      const fallbackCart = await getOrCreateCart(req);\n      \n      if (fallbackCart.type === 'user') {\n        // Add to user's cart\n        const existingItemIndex = fallbackCart.user.cart.items.findIndex(item => \n          item.product.toString() === productId.toString()\n        );\n\n        if (existingItemIndex >= 0) {\n          fallbackCart.user.cart.items[existingItemIndex].quantity += quantity;\n          fallbackCart.user.cart.items[existingItemIndex].addedAt = new Date();\n        } else {\n          fallbackCart.user.cart.items.push({\n            product: productId,\n            quantity,\n            price: product.price,\n            addedAt: new Date()\n          });\n        }\n        \n        fallbackCart.user.cart.updatedAt = new Date();\n        await fallbackCart.user.save();\n      } else {\n        // Add to guest cart - use the Cart model method\n        if (fallbackCart.cart.addItem && typeof fallbackCart.cart.addItem === 'function') {\n          fallbackCart.cart.addItem(productId, quantity, product.price);\n        } else {\n          // Fallback: manually add item\n          const existingItemIndex = fallbackCart.cart.items.findIndex(item => \n            item.product.toString() === productId.toString()\n          );\n\n          if (existingItemIndex >= 0) {\n            fallbackCart.cart.items[existingItemIndex].quantity += quantity;\n            fallbackCart.cart.items[existingItemIndex].addedAt = new Date();\n          } else {\n            fallbackCart.cart.items.push({\n              product: productId,\n              quantity,\n              price: product.price,\n              addedAt: new Date()\n            });\n          }\n        }\n        await fallbackCart.cart.save();\n      }\n      \n      result = { duration: 0, performance: 'fallback' };\n    }\n\n    // Return updated cart with performance metrics\n    let updatedCartData;\n    try {\n      updatedCartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed after add, using fallback:', serviceError.message);\n      updatedCartData = await getOrCreateCart(req);\n    }\n    \n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const prod = await Product.findById(item.product).select('-wholesaler');\n        if (!prod) {\n          return null; // Filter out missing products\n        }\n        return {\n          _id: item.product,\n          product: prod.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    ).then(items => items.filter(item => item !== null));\n\n    const itemCount = populatedCart.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = populatedCart.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item added to cart',\n      data: {\n        cart: {\n          items: populatedCart,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        },\n        performance: {\n          duration: result.duration,\n          status: result.performance\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    console.error('Full stack:', error.stack);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_ADD_ERROR',\n        message: 'Failed to add item to cart',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\n      }\n    });\n  }\n});\n\n// Update cart item quantity\nrouter.put('/update', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId, quantity } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    if (!Number.isInteger(quantity) || quantity < 0 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 0 and 99'\n        }\n      });\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Update user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        if (quantity === 0) {\n          user.cart.items.splice(itemIndex, 1);\n        } else {\n          user.cart.items[itemIndex].quantity = quantity;\n          user.cart.items[itemIndex].addedAt = new Date();\n        }\n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    } else {\n      // Update guest cart\n      const itemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (itemIndex >= 0) {\n        if (cart.updateItem && typeof cart.updateItem === 'function') {\n          cart.updateItem(productId, quantity);\n        } else {\n          // Manual update\n          if (quantity === 0) {\n            cart.items.splice(itemIndex, 1);\n          } else {\n            cart.items[itemIndex].quantity = quantity;\n            cart.items[itemIndex].addedAt = new Date();\n          }\n          cart.updatedAt = new Date();\n        }\n        \n        if (cart.save && typeof cart.save === 'function') {\n          await cart.save();\n        } else {\n          // Use findByIdAndUpdate for lean objects\n          await Cart.findByIdAndUpdate(\n            cart._id,\n            { items: cart.items, updatedAt: cart.updatedAt },\n            { new: true }\n          );\n        }\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    }\n\n    // Return updated cart\n    const updatedCartData = await getOrCreateCart(req);\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) return null;\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    // Check if item was removed (quantity was 0)\n    const wasRemoved = quantity === 0;\n    \n    res.json({\n      success: true,\n      message: wasRemoved ? 'Item removed from cart' : 'Cart updated',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      },\n      cartItemCount: itemCount\n    });\n\n  } catch (error) {\n    console.error('Error updating cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_UPDATE_ERROR',\n        message: 'Failed to update cart'\n      }\n    });\n  }\n});\n\n// Remove item from cart\nrouter.delete('/remove', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId } = req.body;\n\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Remove from user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        user.cart.items.splice(itemIndex, 1);\n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    } else {\n      // Remove from guest cart\n      const itemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (itemIndex >= 0) {\n        if (cart.removeItem && typeof cart.removeItem === 'function') {\n          cart.removeItem(productId);\n        } else {\n          // Manual removal\n          cart.items.splice(itemIndex, 1);\n          cart.updatedAt = new Date();\n        }\n        \n        if (cart.save && typeof cart.save === 'function') {\n          await cart.save();\n        } else {\n          // Use findByIdAndUpdate for lean objects\n          await Cart.findByIdAndUpdate(\n            cart._id,\n            { items: cart.items, updatedAt: cart.updatedAt },\n            { new: true }\n          );\n        }\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    }\n\n    // Return updated cart\n    const updatedCartData = await getOrCreateCart(req);\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) return null;\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item removed from cart',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      },\n      cartItemCount: itemCount\n    });\n\n  } catch (error) {\n    console.error('Error removing from cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_REMOVE_ERROR',\n        message: 'Failed to remove item from cart'\n      }\n    });\n  }\n});\n\n// Clear cart\nrouter.delete('/clear', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Clear user's cart\n      user.cart.items = [];\n      user.cart.updatedAt = new Date();\n      await user.save();\n      console.log('Cleared user cart for user:', user._id);\n    } else {\n      // Clear guest cart - be more aggressive\n      console.log('Clearing guest cart for session:', cart.sessionId);\n      \n      // Delete the entire cart record and create a new one\n      await Cart.deleteOne({ sessionId: cart.sessionId });\n      \n      // Create a fresh cart\n      const newCart = new Cart({ sessionId: cart.sessionId, items: [] });\n      await newCart.save();\n      \n      console.log('Created fresh guest cart for session:', cart.sessionId);\n    }\n\n    res.json({\n      success: true,\n      message: 'Cart cleared',\n      data: {\n        cart: {\n          items: [],\n          itemCount: 0,\n          subtotal: 0,\n          total: 0,\n          isEmpty: true\n        }\n      },\n      cartItemCount: 0\n    });\n\n  } catch (error) {\n    console.error('Error clearing cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_CLEAR_ERROR',\n        message: 'Failed to clear cart'\n      }\n    });\n  }\n});\n\n// Merge guest cart with user cart with conflict resolution\nrouter.post('/merge', authenticateToken, async (req, res) => {\n  try {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'AUTHENTICATION_REQUIRED',\n          message: 'User must be authenticated to merge cart'\n        }\n      });\n    }\n\n    const { guestCartItems, sessionId } = req.body;\n    \n    console.log('Cart merge request:', { \n      userId: req.user._id, \n      sessionId, \n      guestItemCount: guestCartItems?.length || 0 \n    });\n    \n    // Use enhanced cart service for merging with conflict resolution\n    let mergeResult;\n    try {\n      mergeResult = await cartService.mergeCartsWithConflictResolution(\n        req.user._id,\n        guestCartItems,\n        sessionId\n      );\n    } catch (serviceError) {\n      console.warn('Cart service merge failed, using fallback:', serviceError.message);\n      // Fallback to original merge logic\n      const user = await User.findById(req.user._id);\n      if (!user.cart) {\n        user.cart = { items: [], updatedAt: new Date() };\n      }\n\n      let mergedItems = 0;\n\n      // Process guest cart items\n      if (guestCartItems && Array.isArray(guestCartItems) && guestCartItems.length > 0) {\n        for (const guestItem of guestCartItems) {\n          const product = await Product.findById(guestItem.productId || guestItem.product);\n          if (!product || !product.isActive) {\n            continue;\n          }\n\n          const productId = guestItem.productId || guestItem.product;\n          const quantity = guestItem.quantity || 1;\n\n          const existingItemIndex = user.cart.items.findIndex(item => \n            item.product.toString() === productId.toString()\n          );\n\n          if (existingItemIndex >= 0) {\n            user.cart.items[existingItemIndex].quantity += quantity;\n            user.cart.items[existingItemIndex].addedAt = new Date();\n          } else {\n            user.cart.items.push({\n              product: productId,\n              quantity,\n              price: product.price,\n              addedAt: new Date()\n            });\n          }\n          mergedItems++;\n        }\n      }\n\n      // Process session-based cart\n      if (sessionId) {\n        const guestCart = await Cart.findOne({ sessionId });\n        if (guestCart && guestCart.items.length > 0) {\n          console.log('Found guest cart with', guestCart.items.length, 'items for session:', sessionId);\n          \n          for (const guestItem of guestCart.items) {\n            const product = await Product.findById(guestItem.product);\n            if (!product || !product.isActive) {\n              continue;\n            }\n\n            const existingItemIndex = user.cart.items.findIndex(item => \n              item.product.toString() === guestItem.product.toString()\n            );\n\n            if (existingItemIndex >= 0) {\n              user.cart.items[existingItemIndex].quantity += guestItem.quantity;\n              user.cart.items[existingItemIndex].addedAt = new Date();\n            } else {\n              user.cart.items.push({\n                product: guestItem.product,\n                quantity: guestItem.quantity,\n                price: guestItem.price,\n                addedAt: new Date()\n              });\n            }\n            mergedItems++;\n          }\n          \n          // Clean up the guest cart after merge\n          await Cart.deleteOne({ sessionId });\n          console.log('Deleted guest cart for session:', sessionId);\n        } else {\n          console.log('No guest cart found for session:', sessionId);\n        }\n      }\n\n      user.cart.updatedAt = new Date();\n      await user.save();\n      \n      mergeResult = {\n        mergedItems,\n        conflicts: [],\n        duration: 0\n      };\n    }\n\n    // Get updated cart data with fallback\n    let updatedCartData;\n    try {\n      updatedCartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed in merge, using fallback:', serviceError.message);\n      updatedCartData = await getOrCreateCart(req);\n    }\n    \n    // Return updated user cart\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          return {\n            _id: item.product,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: `Successfully merged ${mergeResult.mergedItems} items into your cart`,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        },\n        merge: {\n          mergedItems: mergeResult.mergedItems,\n          conflicts: mergeResult.conflicts,\n          duration: mergeResult.duration\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error merging guest cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_MERGE_ERROR',\n        message: 'Failed to merge guest cart',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined\n      }\n    });\n  }\n});\n\n// Debug endpoint to see all guest carts (development only)\nif (process.env.NODE_ENV === 'development') {\n  router.get('/debug', async (req, res) => {\n    try {\n      const guestCarts = await Cart.find({}).select('sessionId items createdAt updatedAt');\n      const userCarts = await User.find({ 'cart.items.0': { $exists: true } })\n        .select('email cart.items cart.updatedAt');\n      \n      console.log('Debug request - Headers:', {\n        guestSessionId: req.headers['x-guest-session-id'],\n        serverSessionId: req.sessionID,\n        cartId: req.session?.cartId\n      });\n      \n      res.json({\n        success: true,\n        data: {\n          guestCarts: guestCarts.map(cart => ({\n            sessionId: cart.sessionId,\n            itemCount: cart.items.length,\n            items: cart.items,\n            createdAt: cart.createdAt,\n            updatedAt: cart.updatedAt\n          })),\n          userCarts: userCarts.map(user => ({\n            email: user.email,\n            itemCount: user.cart?.items?.length || 0,\n            items: user.cart?.items || [],\n            updatedAt: user.cart?.updatedAt\n          })),\n          currentSession: {\n            frontendSessionId: req.headers['x-guest-session-id'],\n            serverSessionId: req.sessionID,\n            storedCartId: req.session?.cartId\n          }\n        }\n      });\n    } catch (error) {\n      res.status(500).json({ success: false, error: error.message });\n    }\n  });\n}\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}