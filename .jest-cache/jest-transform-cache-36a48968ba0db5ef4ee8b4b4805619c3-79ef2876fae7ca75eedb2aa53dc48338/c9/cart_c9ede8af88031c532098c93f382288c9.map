{"version":3,"names":["express","require","router","Router","Product","User","Cart","authenticateToken","validateCSRFToken","cartService","getOrCreateCart","req","user","findById","_id","cart","items","updatedAt","Date","save","type","sessionId","headers","session","cartId","startsWith","now","Math","random","toString","substr","console","warn","existingCarts","find","length","sortedCarts","sort","a","b","cartsToDelete","slice","cartToDelete","deleteOne","findOne","get","res","cartData","getCartWithPerformanceOptimization","serviceError","message","populatedCart","Promise","all","map","item","product","select","isActive","toPublicJSON","quantity","price","subtotal","error","validCartItems","filter","itemCount","reduce","total","json","success","data","round","isEmpty","status","code","post","productId","body","Number","isInteger","MAX_SAFE_INTEGER","match","existingItemIndex","findIndex","currentQuantity","newQuantity","result","updateCartOptimistically","fallbackCart","addedAt","push","addItem","duration","performance","updatedCartData","prod","then","stack","details","process","env","NODE_ENV","undefined","put","itemIndex","splice","updateItem","findByIdAndUpdate","new","wasRemoved","cartItemCount","delete","removeItem","log","newCart","guestCartItems","userId","guestItemCount","mergeResult","mergeCartsWithConflictResolution","mergedItems","Array","isArray","guestItem","guestCart","conflicts","merge","oldSessionId","deleteResult","deleteMany","deletedCount","guestId","newSessionId","guestCarts","userCarts","$exists","createdAt","email","currentSession","guestSessionId","serverSessionId","sessionID","module","exports"],"sources":["cart.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Product = require('../models/Product');\nconst User = require('../models/User');\nconst Cart = require('../models/Cart');\nconst { authenticateToken } = require('../middleware/auth');\nconst { validateCSRFToken } = require('../middleware/sessionCSRF');\nconst cartService = require('../services/cartService');\n\n// Helper function to get or create cart - Fixed cart persistence bug\nconst getOrCreateCart = async (req) => {\n  if (req.user) {\n    // For authenticated users, use user's cart\n    const user = await User.findById(req.user._id);\n    if (!user.cart) {\n      user.cart = { items: [], updatedAt: new Date() };\n      await user.save();\n    }\n    return { type: 'user', cart: user.cart, user };\n  } else {\n    // For guests, use session-based cart with database storage\n    // Create a consistent session ID strategy to prevent ghost carts\n    let sessionId = req.headers['x-guest-session-id'] || req.session?.cartId;\n    \n    // If no valid session ID exists, create a new one\n    if (!sessionId || !sessionId.startsWith('guest_')) {\n      sessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      \n      // Ensure session exists before setting properties\n      if (!req.session) {\n        // This shouldn't happen with proper session middleware, but handle gracefully\n        console.warn('No session found when creating cart session ID');\n        req.session = {};\n      }\n      req.session.cartId = sessionId;\n    }\n    \n    // Clean up any orphaned carts for this session first\n    const existingCarts = await Cart.find({ sessionId });\n    if (existingCarts.length > 1) {\n      console.warn(`Found ${existingCarts.length} carts for session ${sessionId}, cleaning up duplicates`);\n      // Keep the most recently updated cart and delete the rest\n      const sortedCarts = existingCarts.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt));\n      const cartsToDelete = sortedCarts.slice(1);\n      for (const cartToDelete of cartsToDelete) {\n        await Cart.deleteOne({ _id: cartToDelete._id });\n      }\n    }\n    \n    let cart = await Cart.findOne({ sessionId });\n    \n    if (!cart) {\n      cart = new Cart({ sessionId, items: [] });\n      await cart.save();\n    }\n    \n    return { type: 'guest', cart, sessionId };\n  }\n};\n\n// Get cart contents with performance optimization\nrouter.get('/', authenticateToken, async (req, res) => {\n  try {\n    // Use fallback to original function if cart service fails\n    let cartData;\n    try {\n      cartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed, using fallback:', serviceError.message);\n      cartData = await getOrCreateCart(req);\n    }\n    \n    const { type, cart, user } = cartData;\n    \n    // Populate product details for cart items\n    const populatedCart = await Promise.all(\n      cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          return {\n            _id: item.product,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    \n    // Calculate totals\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n    \n    res.json({\n      success: true,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error fetching cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_FETCH_ERROR',\n        message: 'Failed to fetch cart'\n      }\n    });\n  }\n});\n\n// Add item to cart with optimistic updates\nrouter.post('/add', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId, quantity = 1 } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    // Enhanced quantity validation to prevent integer overflow and other edge cases\n    if (!Number.isInteger(quantity) || quantity < 1 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 1 and 99'\n        }\n      });\n    }\n\n    // Additional safety check for potential integer overflow\n    if (quantity > Number.MAX_SAFE_INTEGER) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity value is too large'\n        }\n      });\n    }\n\n        // Validate product ID format\n    if (!productId.match(/^[0-9a-fA-F]{24}$/)) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_PRODUCT_ID',\n          message: 'Invalid product ID format'\n        }\n      });\n    }\n\n    // Check if product exists and is active\n    const product = await Product.findById(productId);\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found'\n        }\n      });\n    }\n    \n    if (!product.isActive) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found or inactive'\n        }\n      });\n    }\n\n    // Check for existing item and validate maximum quantity\n    const { type, cart, user } = await getOrCreateCart(req);\n    \n    if (type === 'user') {\n      const existingItemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (existingItemIndex >= 0) {\n        const currentQuantity = user.cart.items[existingItemIndex].quantity;\n        const newQuantity = currentQuantity + quantity;\n        \n        // Check for integer overflow and maximum quantity\n        if (newQuantity > 99 || newQuantity < currentQuantity) {\n          return res.status(400).json({\n            success: false,\n            error: {\n              code: 'MAX_QUANTITY_EXCEEDED',\n              message: 'Cannot exceed maximum quantity of 99'\n            }\n          });\n        }\n      }\n    } else {\n      const existingItemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (existingItemIndex >= 0) {\n        const currentQuantity = cart.items[existingItemIndex].quantity;\n        const newQuantity = currentQuantity + quantity;\n        \n        // Check for integer overflow and maximum quantity\n        if (newQuantity > 99 || newQuantity < currentQuantity) {\n          return res.status(400).json({\n            success: false,\n            error: {\n              code: 'MAX_QUANTITY_EXCEEDED',\n              message: 'Cannot exceed maximum quantity of 99'\n            }\n          });\n        }\n      }\n    }\n\n    // Use optimistic cart service with fallback\n    let result;\n    try {\n      result = await cartService.updateCartOptimistically(req, 'add', {\n        productId,\n        quantity\n      });\n    } catch (serviceError) {\n      console.warn('Cart service failed, using fallback:', serviceError.message);\n      // Fallback to original logic - need to re-fetch cart since service failed\n      const fallbackCart = await getOrCreateCart(req);\n      \n      if (fallbackCart.type === 'user') {\n        // Add to user's cart\n        const existingItemIndex = fallbackCart.user.cart.items.findIndex(item => \n          item.product.toString() === productId.toString()\n        );\n\n        if (existingItemIndex >= 0) {\n          fallbackCart.user.cart.items[existingItemIndex].quantity += quantity;\n          fallbackCart.user.cart.items[existingItemIndex].addedAt = new Date();\n        } else {\n          fallbackCart.user.cart.items.push({\n            product: productId,\n            quantity,\n            price: product.price,\n            addedAt: new Date()\n          });\n        }\n        \n        fallbackCart.user.cart.updatedAt = new Date();\n        await fallbackCart.user.save();\n      } else {\n        // Add to guest cart - use the Cart model method\n        if (fallbackCart.cart.addItem && typeof fallbackCart.cart.addItem === 'function') {\n          fallbackCart.cart.addItem(productId, quantity, product.price);\n        } else {\n          // Fallback: manually add item\n          const existingItemIndex = fallbackCart.cart.items.findIndex(item => \n            item.product.toString() === productId.toString()\n          );\n\n          if (existingItemIndex >= 0) {\n            fallbackCart.cart.items[existingItemIndex].quantity += quantity;\n            fallbackCart.cart.items[existingItemIndex].addedAt = new Date();\n          } else {\n            fallbackCart.cart.items.push({\n              product: productId,\n              quantity,\n              price: product.price,\n              addedAt: new Date()\n            });\n          }\n        }\n        await fallbackCart.cart.save();\n      }\n      \n      result = { duration: 0, performance: 'fallback' };\n    }\n\n    // Return updated cart with performance metrics\n    let updatedCartData;\n    try {\n      updatedCartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed after add, using fallback:', serviceError.message);\n      updatedCartData = await getOrCreateCart(req);\n    }\n    \n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const prod = await Product.findById(item.product).select('-wholesaler');\n        if (!prod) {\n          return null; // Filter out missing products\n        }\n        return {\n          _id: item.product,\n          product: prod.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    ).then(items => items.filter(item => item !== null));\n\n    const itemCount = populatedCart.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = populatedCart.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item added to cart',\n      data: {\n        cart: {\n          items: populatedCart,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        },\n        performance: {\n          duration: result.duration,\n          status: result.performance\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    console.error('Full stack:', error.stack);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_ADD_ERROR',\n        message: 'Failed to add item to cart',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\n      }\n    });\n  }\n});\n\n// Update cart item quantity\nrouter.put('/update', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId, quantity } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    if (!Number.isInteger(quantity) || quantity < 0 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 0 and 99'\n        }\n      });\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Update user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        if (quantity === 0) {\n          user.cart.items.splice(itemIndex, 1);\n        } else {\n          user.cart.items[itemIndex].quantity = quantity;\n          user.cart.items[itemIndex].addedAt = new Date();\n        }\n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    } else {\n      // Update guest cart\n      const itemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (itemIndex >= 0) {\n        if (cart.updateItem && typeof cart.updateItem === 'function') {\n          cart.updateItem(productId, quantity);\n        } else {\n          // Manual update\n          if (quantity === 0) {\n            cart.items.splice(itemIndex, 1);\n          } else {\n            cart.items[itemIndex].quantity = quantity;\n            cart.items[itemIndex].addedAt = new Date();\n          }\n          cart.updatedAt = new Date();\n        }\n        \n        if (cart.save && typeof cart.save === 'function') {\n          await cart.save();\n        } else {\n          // Use findByIdAndUpdate for lean objects\n          await Cart.findByIdAndUpdate(\n            cart._id,\n            { items: cart.items, updatedAt: cart.updatedAt },\n            { new: true }\n          );\n        }\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    }\n\n    // Return updated cart\n    const updatedCartData = await getOrCreateCart(req);\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) return null;\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    // Check if item was removed (quantity was 0)\n    const wasRemoved = quantity === 0;\n    \n    res.json({\n      success: true,\n      message: wasRemoved ? 'Item removed from cart' : 'Cart updated',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      },\n      cartItemCount: itemCount\n    });\n\n  } catch (error) {\n    console.error('Error updating cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_UPDATE_ERROR',\n        message: 'Failed to update cart'\n      }\n    });\n  }\n});\n\n// Remove item from cart\nrouter.delete('/remove', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId } = req.body;\n\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Remove from user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        user.cart.items.splice(itemIndex, 1);\n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    } else {\n      // Remove from guest cart\n      const itemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (itemIndex >= 0) {\n        if (cart.removeItem && typeof cart.removeItem === 'function') {\n          cart.removeItem(productId);\n        } else {\n          // Manual removal\n          cart.items.splice(itemIndex, 1);\n          cart.updatedAt = new Date();\n        }\n        \n        if (cart.save && typeof cart.save === 'function') {\n          await cart.save();\n        } else {\n          // Use findByIdAndUpdate for lean objects\n          await Cart.findByIdAndUpdate(\n            cart._id,\n            { items: cart.items, updatedAt: cart.updatedAt },\n            { new: true }\n          );\n        }\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    }\n\n    // Return updated cart\n    const updatedCartData = await getOrCreateCart(req);\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) return null;\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item removed from cart',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      },\n      cartItemCount: itemCount\n    });\n\n  } catch (error) {\n    console.error('Error removing from cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_REMOVE_ERROR',\n        message: 'Failed to remove item from cart'\n      }\n    });\n  }\n});\n\n// Clear cart\nrouter.delete('/clear', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Clear user's cart\n      user.cart.items = [];\n      user.cart.updatedAt = new Date();\n      await user.save();\n      console.log('Cleared user cart for user:', user._id);\n    } else {\n      // Clear guest cart - be more aggressive\n      console.log('Clearing guest cart for session:', cart.sessionId);\n      \n      // Delete the entire cart record and create a new one\n      await Cart.deleteOne({ sessionId: cart.sessionId });\n      \n      // Create a fresh cart\n      const newCart = new Cart({ sessionId: cart.sessionId, items: [] });\n      await newCart.save();\n      \n      console.log('Created fresh guest cart for session:', cart.sessionId);\n    }\n\n    res.json({\n      success: true,\n      message: 'Cart cleared',\n      data: {\n        cart: {\n          items: [],\n          itemCount: 0,\n          subtotal: 0,\n          total: 0,\n          isEmpty: true\n        }\n      },\n      cartItemCount: 0\n    });\n\n  } catch (error) {\n    console.error('Error clearing cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_CLEAR_ERROR',\n        message: 'Failed to clear cart'\n      }\n    });\n  }\n});\n\n// Merge guest cart with user cart with conflict resolution\nrouter.post('/merge', authenticateToken, async (req, res) => {\n  try {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'AUTHENTICATION_REQUIRED',\n          message: 'User must be authenticated to merge cart'\n        }\n      });\n    }\n\n    const { guestCartItems, sessionId } = req.body;\n    \n    console.log('Cart merge request:', { \n      userId: req.user._id, \n      sessionId, \n      guestItemCount: guestCartItems?.length || 0 \n    });\n    \n    // Use enhanced cart service for merging with conflict resolution\n    let mergeResult;\n    try {\n      mergeResult = await cartService.mergeCartsWithConflictResolution(\n        req.user._id,\n        guestCartItems,\n        sessionId\n      );\n    } catch (serviceError) {\n      console.warn('Cart service merge failed, using fallback:', serviceError.message);\n      // Fallback to original merge logic\n      const user = await User.findById(req.user._id);\n      if (!user.cart) {\n        user.cart = { items: [], updatedAt: new Date() };\n      }\n\n      let mergedItems = 0;\n\n      // Process guest cart items\n      if (guestCartItems && Array.isArray(guestCartItems) && guestCartItems.length > 0) {\n        for (const guestItem of guestCartItems) {\n          const product = await Product.findById(guestItem.productId || guestItem.product);\n          if (!product || !product.isActive) {\n            continue;\n          }\n\n          const productId = guestItem.productId || guestItem.product;\n          const quantity = guestItem.quantity || 1;\n\n          const existingItemIndex = user.cart.items.findIndex(item => \n            item.product.toString() === productId.toString()\n          );\n\n          if (existingItemIndex >= 0) {\n            user.cart.items[existingItemIndex].quantity += quantity;\n            user.cart.items[existingItemIndex].addedAt = new Date();\n          } else {\n            user.cart.items.push({\n              product: productId,\n              quantity,\n              price: product.price,\n              addedAt: new Date()\n            });\n          }\n          mergedItems++;\n        }\n      }\n\n      // Process session-based cart\n      if (sessionId) {\n        const guestCart = await Cart.findOne({ sessionId });\n        if (guestCart && guestCart.items.length > 0) {\n          console.log('Found guest cart with', guestCart.items.length, 'items for session:', sessionId);\n          \n          for (const guestItem of guestCart.items) {\n            const product = await Product.findById(guestItem.product);\n            if (!product || !product.isActive) {\n              continue;\n            }\n\n            const existingItemIndex = user.cart.items.findIndex(item => \n              item.product.toString() === guestItem.product.toString()\n            );\n\n            if (existingItemIndex >= 0) {\n              user.cart.items[existingItemIndex].quantity += guestItem.quantity;\n              user.cart.items[existingItemIndex].addedAt = new Date();\n            } else {\n              user.cart.items.push({\n                product: guestItem.product,\n                quantity: guestItem.quantity,\n                price: guestItem.price,\n                addedAt: new Date()\n              });\n            }\n            mergedItems++;\n          }\n          \n          // Clean up the guest cart after merge\n          await Cart.deleteOne({ sessionId });\n          console.log('Deleted guest cart for session:', sessionId);\n        } else {\n          console.log('No guest cart found for session:', sessionId);\n        }\n      }\n\n      user.cart.updatedAt = new Date();\n      await user.save();\n      \n      mergeResult = {\n        mergedItems,\n        conflicts: [],\n        duration: 0\n      };\n    }\n\n    // Get updated cart data with fallback\n    let updatedCartData;\n    try {\n      updatedCartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed in merge, using fallback:', serviceError.message);\n      updatedCartData = await getOrCreateCart(req);\n    }\n    \n    // Return updated user cart\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          return {\n            _id: item.product,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: `Successfully merged ${mergeResult.mergedItems} items into your cart`,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        },\n        merge: {\n          mergedItems: mergeResult.mergedItems,\n          conflicts: mergeResult.conflicts,\n          duration: mergeResult.duration\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error merging guest cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_MERGE_ERROR',\n        message: 'Failed to merge guest cart',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined\n      }\n    });\n  }\n});\n\n// Reset guest cart session - helps fix cart persistence issues\nrouter.post('/reset-guest-session', async (req, res) => {\n  try {\n    // Only allow this for non-authenticated users (guests)\n    if (req.user) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'NOT_GUEST_USER',\n          message: 'This endpoint is only for guest users'\n        }\n      });\n    }\n\n    // Clear current session cart data\n    if (req.session) {\n      const oldSessionId = req.session.cartId;\n      \n      // Delete old guest cart if it exists\n      if (oldSessionId && oldSessionId.startsWith('guest_')) {\n        const deleteResult = await Cart.deleteMany({ sessionId: oldSessionId });\n        console.log(`Deleted ${deleteResult.deletedCount} guest cart(s) for old session ${oldSessionId}`);\n      }\n      \n      // Clear session cart data\n      delete req.session.cartId;\n      delete req.session.guestId;\n    }\n\n    // Create a fresh guest session ID\n    const newSessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    \n    if (req.session) {\n      req.session.cartId = newSessionId;\n    }\n\n    // Create a fresh empty cart\n    const newCart = new Cart({ sessionId: newSessionId, items: [] });\n    await newCart.save();\n\n    res.json({\n      success: true,\n      message: 'Guest cart session reset successfully',\n      data: {\n        sessionId: newSessionId,\n        cart: {\n          items: [],\n          itemCount: 0,\n          subtotal: 0,\n          total: 0,\n          isEmpty: true\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error resetting guest cart session:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'RESET_SESSION_ERROR',\n        message: 'Failed to reset guest cart session'\n      }\n    });\n  }\n});\n\n// Debug endpoint to see all guest carts (development only)\nif (process.env.NODE_ENV === 'development') {\n  router.get('/debug', async (req, res) => {\n    try {\n      const guestCarts = await Cart.find({}).select('sessionId items createdAt updatedAt');\n      const userCarts = await User.find({ 'cart.items.0': { $exists: true } })\n        .select('email cart.items cart.updatedAt');\n      \n      res.json({\n        success: true,\n        data: {\n          guestCarts: guestCarts.map(cart => ({\n            sessionId: cart.sessionId,\n            itemCount: cart.items.length,\n            items: cart.items,\n            createdAt: cart.createdAt,\n            updatedAt: cart.updatedAt\n          })),\n          userCarts: userCarts.map(user => ({\n            email: user.email,\n            itemCount: user.cart?.items?.length || 0,\n            items: user.cart?.items || [],\n            updatedAt: user.cart?.updatedAt\n          })),\n          currentSession: {\n            guestSessionId: req.headers['x-guest-session-id'],\n            serverSessionId: req.sessionID\n          }\n        }\n      });\n    } catch (error) {\n      res.status(500).json({ success: false, error: error.message });\n    }\n  });\n}\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}