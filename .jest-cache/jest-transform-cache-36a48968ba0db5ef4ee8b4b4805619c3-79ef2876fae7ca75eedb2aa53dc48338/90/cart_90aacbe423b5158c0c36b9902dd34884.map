{"version":3,"names":["express","require","router","Router","Product","User","Cart","authenticateToken","validateCSRFToken","getCurrencyForLocale","formatPrice","ErrorCodes","getUserCurrency","req","query","currency","headers","locale","enhanceProductWithCurrency","product","productObj","toPublicJSON","priceInCurrency","prices","price","displayPrice","displayCurrency","getOrCreateCart","user","findById","_id","cart","items","updatedAt","Date","save","type","sessionId","startsWith","now","Math","random","toString","substr","console","log","existingCarts","find","length","warn","sortedCarts","sort","a","b","cartsToDelete","slice","cartToDelete","deleteOne","findOneAndUpdate","$setOnInsert","$set","lastAccessed","new","upsert","error","message","findOne","get","res","cartData","populatedCart","Promise","all","map","item","select","isActive","userCurrency","quantity","subtotal","validCartItems","filter","itemCount","reduce","total","json","success","data","round","isEmpty","CART_FETCH_ERROR","post","productId","body","process","env","NODE_ENV","sessionID","guestSessionId","csrfToken","MISSING_PRODUCT_ID","Number","isInteger","INVALID_QUANTITY","MAX_SAFE_INTEGER","match","INVALID_PRODUCT_ID","PRODUCT_NOT_FOUND","existingItemIndex","findIndex","currentQuantity","newQuantity","MAX_QUANTITY_EXCEEDED","addedAt","push","updatedCartData","prod","then","stack","CART_ADD_ERROR","details","undefined","put","itemIndex","splice","ITEM_NOT_FOUND","updatedItems","updatedCart","findByIdAndUpdate","cartItems","wasRemoved","cartItemCount","CART_UPDATE_ERROR","delete","CART_REMOVE_ERROR","deleteResult","deleteMany","deletedCount","newCart","CART_CLEAR_ERROR","AUTHENTICATION_REQUIRED","guestCartItems","userId","guestItemCount","mergedItems","Array","isArray","guestItem","guestCart","mergeResult","conflicts","duration","merge","CART_MERGE_ERROR","NOT_GUEST_USER","oldSessionId","newSessionId","RESET_SESSION_ERROR","guestCarts","userCarts","$exists","createdAt","email","currentSession","serverSessionId","INTERNAL_ERROR","module","exports"],"sources":["cart.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Product = require('../models/Product');\nconst User = require('../models/User');\nconst Cart = require('../models/Cart');\nconst { authenticateToken } = require('../middleware/auth');\nconst { validateCSRFToken } = require('../middleware/sessionCSRF');\nconst { getCurrencyForLocale, formatPrice } = require('../utils/currency');\nconst { ErrorCodes } = require('../utils/errorHandler');\n\n// Helper function to get user's currency from request\nfunction getUserCurrency(req) {\n  // Check for explicit currency in query or header\n  if (req.query.currency) return req.query.currency;\n  if (req.headers['x-currency']) return req.headers['x-currency'];\n  \n  // Get from locale header (set by frontend based on i18n)\n  const locale = req.headers['x-locale'] || 'en';\n  return getCurrencyForLocale(locale);\n}\n\n// Helper to enhance product with currency info\nfunction enhanceProductWithCurrency(product, currency, locale = 'en') {\n  const productObj = product.toPublicJSON();\n  \n  // Get price in user's currency\n  const priceInCurrency = product.prices && product.prices[currency] \n    ? product.prices[currency] \n    : product.price; // Fallback to USD price\n    \n  return {\n    ...productObj,\n    displayPrice: formatPrice(priceInCurrency, currency, locale),\n    displayCurrency: currency,\n    priceInCurrency: priceInCurrency\n  };\n}\n\n// Helper function to get or create cart - Fixed cart persistence bug\nconst getOrCreateCart = async (req) => {\n  if (req.user) {\n    // For authenticated users, use user's cart\n    const user = await User.findById(req.user._id);\n    if (!user.cart) {\n      user.cart = { items: [], updatedAt: new Date() };\n      await user.save();\n    }\n    return { type: 'user', cart: user.cart, user };\n  } else {\n    // For guests, use session-based cart with database storage\n    // Get session ID from header (frontend managed) or create new one\n    let sessionId = req.headers['x-guest-session-id'];\n    \n    // If no session ID from frontend, this is a new session\n    if (!sessionId || !sessionId.startsWith('guest_')) {\n      sessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      console.log('Created new guest session:', sessionId);\n    }\n    \n    // Clean up any duplicate carts for this session BEFORE creating/fetching\n    const existingCarts = await Cart.find({ sessionId });\n    if (existingCarts.length > 1) {\n      console.warn(`Found ${existingCarts.length} carts for session ${sessionId}, cleaning up duplicates`);\n      // Keep the most recently updated cart and delete the rest\n      const sortedCarts = existingCarts.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt));\n      const cartsToDelete = sortedCarts.slice(1);\n      for (const cartToDelete of cartsToDelete) {\n        await Cart.deleteOne({ _id: cartToDelete._id });\n      }\n    }\n    \n    // Get or create the cart - use findOneAndUpdate for atomic operation with fallback\n    let cart;\n    try {\n      cart = await Cart.findOneAndUpdate(\n        { sessionId },\n        { \n          $setOnInsert: { sessionId, items: [] },\n          $set: { lastAccessed: new Date() }\n        },\n        { \n          new: true, \n          upsert: true\n        }\n      );\n    } catch (error) {\n      console.warn('findOneAndUpdate failed, using fallback:', error.message);\n      cart = null;\n    }\n    \n    if (!cart) {\n      // Fallback: try to find existing cart or create new one\n      cart = await Cart.findOne({ sessionId });\n      if (!cart) {\n        cart = new Cart({ sessionId, items: [] });\n        await cart.save();\n        console.log('Created new guest cart for session (fallback):', sessionId);\n      }\n    }\n    \n    return { type: 'guest', cart, sessionId };\n  }\n};\n\n// Get cart contents with performance optimization\nrouter.get('/', authenticateToken, async (req, res) => {\n  try {\n    // Get cart data directly\n    const cartData = await getOrCreateCart(req);\n    \n    const { type, cart, user } = cartData;\n    \n    // Populate product details for cart items\n    const populatedCart = await Promise.all(\n      cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          const userCurrency = getUserCurrency(req);\n          const locale = req.headers['x-locale'] || 'en';\n          \n          return {\n            _id: item.product,\n            product: enhanceProductWithCurrency(product, userCurrency, locale),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    \n    // Calculate totals\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n    \n    res.json({\n      success: true,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error fetching cart:', error);\n    res.error(500, ErrorCodes.CART_FETCH_ERROR, 'Failed to fetch cart');\n  }\n});\n\n// Add item to cart with optimistic updates\nrouter.post('/add', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId, quantity = 1 } = req.body;\n    \n    // Debug logging for Docker environment\n    if (process.env.NODE_ENV === 'development') {\n      console.log('Add to cart request:', {\n        productId,\n        quantity,\n        user: req.user ? 'authenticated' : 'guest',\n        sessionId: req.sessionID,\n        guestSessionId: req.headers['x-guest-session-id'],\n        csrfToken: req.headers['x-csrf-token'] ? 'present' : 'missing'\n      });\n    }\n\n    // Validation\n    if (!productId) {\n      return res.error(400, ErrorCodes.MISSING_PRODUCT_ID, 'Product ID is required');\n    }\n\n    // Enhanced quantity validation to prevent integer overflow and other edge cases\n    if (!Number.isInteger(quantity) || quantity < 1 || quantity > 99) {\n      return res.error(400, ErrorCodes.INVALID_QUANTITY, 'Quantity must be between 1 and 99');\n    }\n\n    // Additional safety check for potential integer overflow\n    if (quantity > Number.MAX_SAFE_INTEGER) {\n      return res.error(400, ErrorCodes.INVALID_QUANTITY, 'Quantity value is too large');\n    }\n\n        // Validate product ID format\n    if (!productId.match(/^[0-9a-fA-F]{24}$/)) {\n      return res.error(400, ErrorCodes.INVALID_PRODUCT_ID, 'Invalid product ID format');\n    }\n\n    // Check if product exists and is active\n    const product = await Product.findById(productId);\n    if (!product) {\n      return res.error(404, ErrorCodes.PRODUCT_NOT_FOUND, 'Product not found');\n    }\n    \n    if (!product.isActive) {\n      return res.error(404, ErrorCodes.PRODUCT_NOT_FOUND, 'Product not found or inactive');\n    }\n\n    // Check for existing item and validate maximum quantity\n    const { type, cart, user } = await getOrCreateCart(req);\n    \n    if (type === 'user') {\n      const existingItemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (existingItemIndex >= 0) {\n        const currentQuantity = user.cart.items[existingItemIndex].quantity;\n        const newQuantity = currentQuantity + quantity;\n        \n        // Check for integer overflow and maximum quantity\n        if (newQuantity > 99 || newQuantity < currentQuantity) {\n          return res.error(400, ErrorCodes.MAX_QUANTITY_EXCEEDED, 'Cannot exceed maximum quantity of 99');\n        }\n      }\n    } else {\n      const existingItemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (existingItemIndex >= 0) {\n        const currentQuantity = cart.items[existingItemIndex].quantity;\n        const newQuantity = currentQuantity + quantity;\n        \n        // Check for integer overflow and maximum quantity\n        if (newQuantity > 99 || newQuantity < currentQuantity) {\n          return res.error(400, ErrorCodes.MAX_QUANTITY_EXCEEDED, 'Cannot exceed maximum quantity of 99');\n        }\n      }\n    }\n\n    // Add item to cart directly\n    const cartData = await getOrCreateCart(req);\n    \n    if (cartData.type === 'user') {\n      // Add to user's cart\n      const existingItemIndex = cartData.user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (existingItemIndex >= 0) {\n        cartData.user.cart.items[existingItemIndex].quantity += quantity;\n        cartData.user.cart.items[existingItemIndex].addedAt = new Date();\n      } else {\n        cartData.user.cart.items.push({\n          product: productId,\n          quantity,\n          price: product.price,\n          addedAt: new Date()\n        });\n      }\n      \n      cartData.user.cart.updatedAt = new Date();\n      await cartData.user.save();\n    } else {\n      // Add to guest cart\n      const existingItemIndex = cartData.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (existingItemIndex >= 0) {\n        cartData.cart.items[existingItemIndex].quantity += quantity;\n        cartData.cart.items[existingItemIndex].addedAt = new Date();\n      } else {\n        cartData.cart.items.push({\n          product: productId,\n          quantity,\n          price: product.price,\n          addedAt: new Date()\n        });\n      }\n      await cartData.cart.save();\n    }\n\n    // Return updated cart\n    const updatedCartData = await getOrCreateCart(req);\n    \n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const prod = await Product.findById(item.product).select('-wholesaler');\n        if (!prod) {\n          return null; // Filter out missing products\n        }\n        const userCurrency = getUserCurrency(req);\n        const locale = req.headers['x-locale'] || 'en';\n        \n        return {\n          _id: item.product,\n          product: enhanceProductWithCurrency(prod, userCurrency, locale),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    ).then(items => items.filter(item => item !== null));\n\n    const itemCount = populatedCart.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = populatedCart.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item added to cart',\n      data: {\n        cart: {\n          items: populatedCart,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    console.error('Full stack:', error.stack);\n    res.error(500, ErrorCodes.CART_ADD_ERROR, 'Failed to add item to cart', {\n      details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n      stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\n    });\n  }\n});\n\n// Update cart item quantity\nrouter.put('/update', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId, quantity } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.error(400, ErrorCodes.MISSING_PRODUCT_ID, 'Product ID is required');\n    }\n\n    if (!Number.isInteger(quantity) || quantity < 0 || quantity > 99) {\n      return res.error(400, ErrorCodes.INVALID_QUANTITY, 'Quantity must be between 0 and 99');\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Update user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        if (quantity === 0) {\n          user.cart.items.splice(itemIndex, 1);\n        } else {\n          user.cart.items[itemIndex].quantity = quantity;\n          user.cart.items[itemIndex].addedAt = new Date();\n        }\n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        return res.error(404, ErrorCodes.ITEM_NOT_FOUND, 'Item not found in cart');\n      }\n    } else {\n      // Update guest cart\n      const itemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (itemIndex >= 0) {\n        // Always use direct database update for consistency\n        let updatedItems = [...cart.items];\n        \n        if (quantity === 0) {\n          updatedItems.splice(itemIndex, 1);\n        } else {\n          updatedItems[itemIndex] = {\n            ...updatedItems[itemIndex],\n            quantity,\n            addedAt: new Date()\n          };\n        }\n        \n        // Use atomic update to prevent race conditions\n        const updatedCart = await Cart.findByIdAndUpdate(\n          cart._id,\n          { \n            items: updatedItems, \n            updatedAt: new Date() \n          },\n          { new: true }\n        );\n        cart.items = updatedCart.items;\n      } else {\n        return res.error(404, ErrorCodes.ITEM_NOT_FOUND, 'Item not found in cart');\n      }\n    }\n\n    // Return updated cart - use the already modified data instead of refetching\n    const cartItems = type === 'user' ? user.cart.items : cart.items;\n    const populatedCart = await Promise.all(\n      cartItems.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) return null;\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    // Check if item was removed (quantity was 0)\n    const wasRemoved = quantity === 0;\n    \n    res.json({\n      success: true,\n      message: wasRemoved ? 'Item removed from cart' : 'Cart updated',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      },\n      cartItemCount: itemCount\n    });\n\n  } catch (error) {\n    console.error('Error updating cart:', error);\n    res.error(500, ErrorCodes.CART_UPDATE_ERROR, 'Failed to update cart');\n  }\n});\n\n// Remove item from cart\nrouter.delete('/remove', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId } = req.body;\n\n    if (!productId) {\n      return res.error(400, ErrorCodes.MISSING_PRODUCT_ID, 'Product ID is required');\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Remove from user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        user.cart.items.splice(itemIndex, 1);\n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        return res.error(404, ErrorCodes.ITEM_NOT_FOUND, 'Item not found in cart');\n      }\n    } else {\n      // Remove from guest cart\n      const itemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (itemIndex >= 0) {\n        // Always use direct database update for consistency\n        let updatedItems = [...cart.items];\n        updatedItems.splice(itemIndex, 1);\n        \n        // Use atomic update to prevent race conditions\n        const updatedCart = await Cart.findByIdAndUpdate(\n          cart._id,\n          { \n            items: updatedItems, \n            updatedAt: new Date() \n          },\n          { new: true }\n        );\n        cart.items = updatedCart.items;\n      } else {\n        return res.error(404, ErrorCodes.ITEM_NOT_FOUND, 'Item not found in cart');\n      }\n    }\n\n    // Return updated cart - use the already modified data instead of refetching\n    const cartItems = type === 'user' ? user.cart.items : cart.items;\n    const populatedCart = await Promise.all(\n      cartItems.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) return null;\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item removed from cart',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      },\n      cartItemCount: itemCount\n    });\n\n  } catch (error) {\n    console.error('Error removing from cart:', error);\n    res.error(500, ErrorCodes.CART_REMOVE_ERROR, 'Failed to remove item from cart');\n  }\n});\n\n// Clear cart\nrouter.delete('/clear', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Clear user's cart\n      user.cart.items = [];\n      user.cart.updatedAt = new Date();\n      await user.save();\n      console.log('Cleared user cart for user:', user._id);\n    } else {\n      // Clear guest cart - use atomic update instead of delete/recreate\n      console.log('Clearing guest cart for session:', cart.sessionId);\n      \n      // First, delete ALL carts with this session ID to handle duplicates\n      const deleteResult = await Cart.deleteMany({ sessionId: cart.sessionId });\n      console.log(`Deleted ${deleteResult?.deletedCount || 0} cart(s) for session ${cart.sessionId}`);\n      \n      // Create a single fresh cart\n      const newCart = new Cart({ sessionId: cart.sessionId, items: [] });\n      await newCart.save();\n      \n      console.log('Created fresh guest cart for session:', cart.sessionId);\n    }\n\n    res.json({\n      success: true,\n      message: 'Cart cleared',\n      data: {\n        cart: {\n          items: [],\n          itemCount: 0,\n          subtotal: 0,\n          total: 0,\n          isEmpty: true\n        }\n      },\n      cartItemCount: 0\n    });\n\n  } catch (error) {\n    console.error('Error clearing cart:', error);\n    res.error(500, ErrorCodes.CART_CLEAR_ERROR, 'Failed to clear cart');\n  }\n});\n\n// Merge guest cart with user cart with conflict resolution\nrouter.post('/merge', authenticateToken, async (req, res) => {\n  try {\n    if (!req.user) {\n      return res.error(401, ErrorCodes.AUTHENTICATION_REQUIRED, 'User must be authenticated to merge cart');\n    }\n\n    const { guestCartItems, sessionId } = req.body;\n    \n    console.log('Cart merge request:', { \n      userId: req.user._id, \n      sessionId, \n      guestItemCount: guestCartItems?.length || 0 \n    });\n    \n    // Merge cart logic directly\n    const user = await User.findById(req.user._id);\n    if (!user.cart) {\n      user.cart = { items: [], updatedAt: new Date() };\n    }\n\n    let mergedItems = 0;\n\n    // Process guest cart items - use either guestCartItems OR session-based cart, not both\n    if (guestCartItems && Array.isArray(guestCartItems) && guestCartItems.length > 0) {\n      // Frontend sent cart items directly, use those\n      for (const guestItem of guestCartItems) {\n        const product = await Product.findById(guestItem.productId || guestItem.product);\n        if (!product || !product.isActive) {\n          continue;\n        }\n\n        const productId = guestItem.productId || guestItem.product;\n        const quantity = guestItem.quantity || 1;\n\n        const existingItemIndex = user.cart.items.findIndex(item => \n          item.product.toString() === productId.toString()\n        );\n\n        if (existingItemIndex >= 0) {\n          // Add guest quantity to existing user cart quantity\n          user.cart.items[existingItemIndex].quantity += quantity;\n          user.cart.items[existingItemIndex].addedAt = new Date();\n        } else {\n          user.cart.items.push({\n            product: productId,\n            quantity,\n            price: product.price,\n            addedAt: new Date()\n          });\n        }\n        mergedItems++;\n      }\n      \n      // Clean up the guest cart from database if sessionId provided\n      if (sessionId) {\n        await Cart.deleteOne({ sessionId });\n        console.log('Deleted guest cart for session:', sessionId);\n      }\n    } else if (sessionId) {\n      // No items sent from frontend, try to load from database\n      const guestCart = await Cart.findOne({ sessionId });\n      if (guestCart && guestCart.items.length > 0) {\n        console.log('Found guest cart with', guestCart.items.length, 'items for session:', sessionId);\n        \n        for (const guestItem of guestCart.items) {\n          const product = await Product.findById(guestItem.product);\n          if (!product || !product.isActive) {\n            continue;\n          }\n\n          const existingItemIndex = user.cart.items.findIndex(item => \n            item.product.toString() === guestItem.product.toString()\n          );\n\n          if (existingItemIndex >= 0) {\n            // Add guest quantity to existing user cart quantity\n            user.cart.items[existingItemIndex].quantity += guestItem.quantity;\n            user.cart.items[existingItemIndex].addedAt = new Date();\n          } else {\n            user.cart.items.push({\n              product: guestItem.product,\n              quantity: guestItem.quantity,\n              price: guestItem.price,\n              addedAt: new Date()\n            });\n          }\n          mergedItems++;\n        }\n        \n        // Clean up the guest cart after merge\n        await Cart.deleteOne({ sessionId });\n        console.log('Deleted guest cart for session:', sessionId);\n      } else {\n        console.log('No guest cart found for session:', sessionId);\n      }\n    }\n\n    user.cart.updatedAt = new Date();\n    await user.save();\n    \n    const mergeResult = {\n      mergedItems,\n      conflicts: [],\n      duration: 0\n    };\n\n    // Get updated cart data\n    const updatedCartData = await getOrCreateCart(req);\n    \n    // Return updated user cart\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          const userCurrency = getUserCurrency(req);\n          const locale = req.headers['x-locale'] || 'en';\n          \n          return {\n            _id: item.product,\n            product: enhanceProductWithCurrency(product, userCurrency, locale),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: `Successfully merged ${mergeResult.mergedItems} items into your cart`,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        },\n        merge: {\n          mergedItems: mergeResult.mergedItems,\n          conflicts: mergeResult.conflicts,\n          duration: mergeResult.duration\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error merging guest cart:', error);\n    res.error(500, ErrorCodes.CART_MERGE_ERROR, 'Failed to merge guest cart', {\n      details: process.env.NODE_ENV === 'development' ? error.message : undefined\n    });\n  }\n});\n\n// Reset guest cart session - helps fix cart persistence issues\nrouter.post('/reset-guest-session', async (req, res) => {\n  try {\n    // Only allow this for non-authenticated users (guests)\n    if (req.user) {\n      return res.error(400, ErrorCodes.NOT_GUEST_USER, 'This endpoint is only for guest users');\n    }\n\n    // Get the old session ID from header\n    const oldSessionId = req.headers['x-guest-session-id'];\n    \n    // Delete old guest cart if it exists\n    if (oldSessionId && oldSessionId.startsWith('guest_')) {\n      const deleteResult = await Cart.deleteMany({ sessionId: oldSessionId });\n      console.log(`Deleted ${deleteResult?.deletedCount || 0} guest cart(s) for old session ${oldSessionId}`);\n    }\n\n    // Create a fresh guest session ID\n    const newSessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n    // Create a fresh empty cart\n    const newCart = new Cart({ sessionId: newSessionId, items: [] });\n    await newCart.save();\n\n    res.json({\n      success: true,\n      message: 'Guest cart session reset successfully',\n      data: {\n        sessionId: newSessionId,\n        cart: {\n          items: [],\n          itemCount: 0,\n          subtotal: 0,\n          total: 0,\n          isEmpty: true\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error resetting guest cart session:', error);\n    res.error(500, ErrorCodes.RESET_SESSION_ERROR, 'Failed to reset guest cart session');\n  }\n});\n\n// Debug endpoint to see all guest carts (development only)\nif (process.env.NODE_ENV === 'development') {\n  router.get('/debug', async (req, res) => {\n    try {\n      const guestCarts = await Cart.find({}).select('sessionId items createdAt updatedAt');\n      const userCarts = await User.find({ 'cart.items.0': { $exists: true } })\n        .select('email cart.items cart.updatedAt');\n      \n      res.json({\n        success: true,\n        data: {\n          guestCarts: guestCarts.map(cart => ({\n            sessionId: cart.sessionId,\n            itemCount: cart.items.length,\n            items: cart.items,\n            createdAt: cart.createdAt,\n            updatedAt: cart.updatedAt\n          })),\n          userCarts: userCarts.map(user => ({\n            email: user.email,\n            itemCount: user.cart?.items?.length || 0,\n            items: user.cart?.items || [],\n            updatedAt: user.cart?.updatedAt\n          })),\n          currentSession: {\n            guestSessionId: req.headers['x-guest-session-id'],\n            serverSessionId: req.sessionID\n          }\n        }\n      });\n    } catch (error) {\n      res.error(500, ErrorCodes.INTERNAL_ERROR, error.message);\n    }\n  });\n}\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}