{"version":3,"names":["express","require","router","Router","Product","User","Cart","authenticateToken","cartService","getOrCreateCart","req","user","findById","_id","cart","items","updatedAt","Date","save","type","sessionId","sessionID","now","Math","random","toString","substr","findOne","get","res","cartData","getCartWithPerformanceOptimization","serviceError","console","warn","message","populatedCart","Promise","all","map","item","product","select","isActive","toPublicJSON","quantity","price","subtotal","error","validCartItems","filter","itemCount","reduce","total","json","success","data","round","isEmpty","length","status","code","post","productId","body","Number","isInteger","result","updateCartOptimistically","existingItemIndex","findIndex","addedAt","push","addItem","duration","performance","updatedCartData","prod","details","process","env","NODE_ENV","undefined","put","itemIndex","splice","updateItem","delete","params","removeItem","clearCart","guestCartItems","mergeResult","mergeCartsWithConflictResolution","mergedItems","Array","isArray","guestItem","guestCart","deleteOne","conflicts","merge","module","exports"],"sources":["cart.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Product = require('../models/Product');\nconst User = require('../models/User');\nconst Cart = require('../models/Cart');\nconst { authenticateToken } = require('../middleware/auth');\nconst cartService = require('../services/cartService');\n\n// Helper function to get or create cart\nconst getOrCreateCart = async (req) => {\n  if (req.user) {\n    // For authenticated users, use user's cart\n    const user = await User.findById(req.user._id);\n    if (!user.cart) {\n      user.cart = { items: [], updatedAt: new Date() };\n      await user.save();\n    }\n    return { type: 'user', cart: user.cart, user };\n  } else {\n    // For guests, use session-based cart with database storage\n    // Generate a more reliable session identifier\n    const sessionId = req.sessionID || `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    let cart = await Cart.findOne({ sessionId });\n    \n    if (!cart) {\n      cart = new Cart({ sessionId, items: [] });\n      await cart.save();\n    }\n    \n    return { type: 'guest', cart, sessionId };\n  }\n};\n\n// Get cart contents with performance optimization\nrouter.get('/', authenticateToken, async (req, res) => {\n  try {\n    // Use fallback to original function if cart service fails\n    let cartData;\n    try {\n      cartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed, using fallback:', serviceError.message);\n      cartData = await getOrCreateCart(req);\n    }\n    \n    const { type, cart, user } = cartData;\n    \n    // Populate product details for cart items\n    const populatedCart = await Promise.all(\n      cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          return {\n            _id: item.product,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    \n    // Calculate totals\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n    \n    res.json({\n      success: true,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error fetching cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_FETCH_ERROR',\n        message: 'Failed to fetch cart'\n      }\n    });\n  }\n});\n\n// Add item to cart with optimistic updates\nrouter.post('/add', authenticateToken, async (req, res) => {\n  try {\n    const { productId, quantity = 1 } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    if (!Number.isInteger(quantity) || quantity < 1 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Quantity must be between 1 and 99'\n        }\n      });\n    }\n\n    // Check if product exists and is active\n    const product = await Product.findById(productId);\n    if (!product || !product.isActive) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Product not found or inactive'\n        }\n      });\n    }\n\n    // Use optimistic cart service with fallback\n    let result;\n    try {\n      result = await cartService.updateCartOptimistically(req, 'add', {\n        productId,\n        quantity\n      });\n    } catch (serviceError) {\n      console.warn('Cart service failed, using fallback:', serviceError.message);\n      // Fallback to original logic\n      const { type, cart, user } = await getOrCreateCart(req);\n\n      if (type === 'user') {\n        // Add to user's cart\n        const existingItemIndex = user.cart.items.findIndex(item => \n          item.product.toString() === productId.toString()\n        );\n\n        if (existingItemIndex >= 0) {\n          user.cart.items[existingItemIndex].quantity += quantity;\n          user.cart.items[existingItemIndex].addedAt = new Date();\n        } else {\n          user.cart.items.push({\n            product: productId,\n            quantity,\n            price: product.price,\n            addedAt: new Date()\n          });\n        }\n        \n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        // Add to guest cart - use the Cart model method\n        if (cart.addItem && typeof cart.addItem === 'function') {\n          cart.addItem(productId, quantity, product.price);\n        } else {\n          // Fallback: manually add item\n          const existingItemIndex = cart.items.findIndex(item => \n            item.product.toString() === productId.toString()\n          );\n\n          if (existingItemIndex >= 0) {\n            cart.items[existingItemIndex].quantity += quantity;\n            cart.items[existingItemIndex].addedAt = new Date();\n          } else {\n            cart.items.push({\n              product: productId,\n              quantity,\n              price: product.price,\n              addedAt: new Date()\n            });\n          }\n        }\n        await cart.save();\n      }\n      \n      result = { duration: 0, performance: 'fallback' };\n    }\n\n    // Return updated cart with performance metrics\n    const updatedCartData = await cartService.getCartWithPerformanceOptimization(req);\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const prod = await Product.findById(item.product).select('-wholesaler');\n        return {\n          _id: item.product,\n          product: prod.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const itemCount = populatedCart.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = populatedCart.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item added to cart',\n      data: {\n        cart: {\n          items: populatedCart,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        },\n        performance: {\n          duration: result.duration,\n          status: result.performance\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_ADD_ERROR',\n        message: 'Failed to add item to cart',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined\n      }\n    });\n  }\n});\n\n// Update cart item quantity\nrouter.put('/update', authenticateToken, async (req, res) => {\n  try {\n    const { productId, quantity } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    if (!Number.isInteger(quantity) || quantity < 0 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Quantity must be between 0 and 99'\n        }\n      });\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Update user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        if (quantity === 0) {\n          user.cart.items.splice(itemIndex, 1);\n        } else {\n          user.cart.items[itemIndex].quantity = quantity;\n          user.cart.items[itemIndex].addedAt = new Date();\n        }\n        user.cart.updatedAt = new Date();\n        await user.save();\n      }\n    } else {\n      // Update guest cart\n      cart.updateItem(productId, quantity);\n      await cart.save();\n    }\n\n    // Return updated cart\n    const updatedCartData = await getOrCreateCart(req);\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) return null;\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Cart updated successfully',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error updating cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_UPDATE_ERROR',\n        message: 'Failed to update cart'\n      }\n    });\n  }\n});\n\n// Remove item from cart\nrouter.delete('/remove/:productId', authenticateToken, async (req, res) => {\n  try {\n    const { productId } = req.params;\n\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'VALIDATION_ERROR',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Remove from user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        user.cart.items.splice(itemIndex, 1);\n        user.cart.updatedAt = new Date();\n        await user.save();\n      }\n    } else {\n      // Remove from guest cart\n      cart.removeItem(productId);\n      await cart.save();\n    }\n\n    // Return updated cart\n    const updatedCartData = await getOrCreateCart(req);\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) return null;\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item removed from cart',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error removing from cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_REMOVE_ERROR',\n        message: 'Failed to remove item from cart'\n      }\n    });\n  }\n});\n\n// Clear cart\nrouter.delete('/clear', authenticateToken, async (req, res) => {\n  try {\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Clear user's cart\n      user.cart.items = [];\n      user.cart.updatedAt = new Date();\n      await user.save();\n    } else {\n      // Clear guest cart\n      cart.clearCart();\n      await cart.save();\n    }\n\n    res.json({\n      success: true,\n      message: 'Cart cleared successfully',\n      data: {\n        cart: {\n          items: [],\n          itemCount: 0,\n          subtotal: 0,\n          total: 0,\n          isEmpty: true\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error clearing cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_CLEAR_ERROR',\n        message: 'Failed to clear cart'\n      }\n    });\n  }\n});\n\n// Merge guest cart with user cart with conflict resolution\nrouter.post('/merge', authenticateToken, async (req, res) => {\n  try {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'AUTHENTICATION_REQUIRED',\n          message: 'User must be authenticated to merge cart'\n        }\n      });\n    }\n\n    const { guestCartItems, sessionId } = req.body;\n    \n    // Use enhanced cart service for merging with conflict resolution\n    let mergeResult;\n    try {\n      mergeResult = await cartService.mergeCartsWithConflictResolution(\n        req.user._id,\n        guestCartItems,\n        sessionId\n      );\n    } catch (serviceError) {\n      console.warn('Cart service merge failed, using fallback:', serviceError.message);\n      // Fallback to original merge logic\n      const user = await User.findById(req.user._id);\n      if (!user.cart) {\n        user.cart = { items: [], updatedAt: new Date() };\n      }\n\n      let mergedItems = 0;\n\n      // Process guest cart items\n      if (guestCartItems && Array.isArray(guestCartItems) && guestCartItems.length > 0) {\n        for (const guestItem of guestCartItems) {\n          const product = await Product.findById(guestItem.productId || guestItem.product);\n          if (!product || !product.isActive) {\n            continue;\n          }\n\n          const productId = guestItem.productId || guestItem.product;\n          const quantity = guestItem.quantity || 1;\n\n          const existingItemIndex = user.cart.items.findIndex(item => \n            item.product.toString() === productId.toString()\n          );\n\n          if (existingItemIndex >= 0) {\n            user.cart.items[existingItemIndex].quantity += quantity;\n            user.cart.items[existingItemIndex].addedAt = new Date();\n          } else {\n            user.cart.items.push({\n              product: productId,\n              quantity,\n              price: product.price,\n              addedAt: new Date()\n            });\n          }\n          mergedItems++;\n        }\n      }\n\n      // Process session-based cart\n      if (sessionId) {\n        const guestCart = await Cart.findOne({ sessionId });\n        if (guestCart && guestCart.items.length > 0) {\n          for (const guestItem of guestCart.items) {\n            const product = await Product.findById(guestItem.product);\n            if (!product || !product.isActive) {\n              continue;\n            }\n\n            const existingItemIndex = user.cart.items.findIndex(item => \n              item.product.toString() === guestItem.product.toString()\n            );\n\n            if (existingItemIndex >= 0) {\n              user.cart.items[existingItemIndex].quantity += guestItem.quantity;\n              user.cart.items[existingItemIndex].addedAt = new Date();\n            } else {\n              user.cart.items.push({\n                product: guestItem.product,\n                quantity: guestItem.quantity,\n                price: guestItem.price,\n                addedAt: new Date()\n              });\n            }\n            mergedItems++;\n          }\n          \n          await Cart.deleteOne({ sessionId });\n        }\n      }\n\n      user.cart.updatedAt = new Date();\n      await user.save();\n      \n      mergeResult = {\n        mergedItems,\n        conflicts: [],\n        duration: 0\n      };\n    }\n\n    // Get updated cart data with fallback\n    let updatedCartData;\n    try {\n      updatedCartData = await cartService.getCartWithPerformanceOptimization(req);\n    } catch (serviceError) {\n      console.warn('Cart service failed in merge, using fallback:', serviceError.message);\n      updatedCartData = await getOrCreateCart(req);\n    }\n    \n    // Return updated user cart\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          return {\n            _id: item.product,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: `Successfully merged ${mergeResult.mergedItems} items into your cart`,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        },\n        merge: {\n          mergedItems: mergeResult.mergedItems,\n          conflicts: mergeResult.conflicts,\n          duration: mergeResult.duration\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error merging guest cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_MERGE_ERROR',\n        message: 'Failed to merge guest cart',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined\n      }\n    });\n  }\n});\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}