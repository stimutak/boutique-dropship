{"version":3,"names":["express","require","router","Router","Product","User","Cart","authenticateToken","validateCSRFToken","getOrCreateCart","req","user","findById","_id","cart","items","updatedAt","Date","save","type","sessionId","headers","startsWith","now","Math","random","toString","substr","console","log","existingCarts","find","length","warn","sortedCarts","sort","a","b","cartsToDelete","slice","cartToDelete","deleteOne","findOneAndUpdate","$setOnInsert","$set","lastAccessed","new","upsert","error","message","findOne","get","res","cartData","populatedCart","Promise","all","map","item","product","select","isActive","toPublicJSON","quantity","price","subtotal","validCartItems","filter","itemCount","reduce","total","json","success","data","round","isEmpty","status","code","post","productId","body","Number","isInteger","MAX_SAFE_INTEGER","match","existingItemIndex","findIndex","currentQuantity","newQuantity","addedAt","push","updatedCartData","prod","then","stack","details","process","env","NODE_ENV","undefined","put","itemIndex","splice","updatedItems","updatedCart","findByIdAndUpdate","cartItems","wasRemoved","cartItemCount","delete","deleteResult","deleteMany","deletedCount","newCart","guestCartItems","userId","guestItemCount","mergedItems","Array","isArray","guestItem","guestCart","mergeResult","conflicts","duration","merge","oldSessionId","newSessionId","guestCarts","userCarts","$exists","createdAt","email","currentSession","guestSessionId","serverSessionId","sessionID","module","exports"],"sources":["cart.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst Product = require('../models/Product');\nconst User = require('../models/User');\nconst Cart = require('../models/Cart');\nconst { authenticateToken } = require('../middleware/auth');\nconst { validateCSRFToken } = require('../middleware/sessionCSRF');\n\n// Helper function to get or create cart - Fixed cart persistence bug\nconst getOrCreateCart = async (req) => {\n  if (req.user) {\n    // For authenticated users, use user's cart\n    const user = await User.findById(req.user._id);\n    if (!user.cart) {\n      user.cart = { items: [], updatedAt: new Date() };\n      await user.save();\n    }\n    return { type: 'user', cart: user.cart, user };\n  } else {\n    // For guests, use session-based cart with database storage\n    // Get session ID from header (frontend managed) or create new one\n    let sessionId = req.headers['x-guest-session-id'];\n    \n    // If no session ID from frontend, this is a new session\n    if (!sessionId || !sessionId.startsWith('guest_')) {\n      sessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      console.log('Created new guest session:', sessionId);\n    }\n    \n    // Clean up any duplicate carts for this session BEFORE creating/fetching\n    const existingCarts = await Cart.find({ sessionId });\n    if (existingCarts.length > 1) {\n      console.warn(`Found ${existingCarts.length} carts for session ${sessionId}, cleaning up duplicates`);\n      // Keep the most recently updated cart and delete the rest\n      const sortedCarts = existingCarts.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt));\n      const cartsToDelete = sortedCarts.slice(1);\n      for (const cartToDelete of cartsToDelete) {\n        await Cart.deleteOne({ _id: cartToDelete._id });\n      }\n    }\n    \n    // Get or create the cart - use findOneAndUpdate for atomic operation with fallback\n    let cart;\n    try {\n      cart = await Cart.findOneAndUpdate(\n        { sessionId },\n        { \n          $setOnInsert: { sessionId, items: [] },\n          $set: { lastAccessed: new Date() }\n        },\n        { \n          new: true, \n          upsert: true\n        }\n      );\n    } catch (error) {\n      console.warn('findOneAndUpdate failed, using fallback:', error.message);\n      cart = null;\n    }\n    \n    if (!cart) {\n      // Fallback: try to find existing cart or create new one\n      cart = await Cart.findOne({ sessionId });\n      if (!cart) {\n        cart = new Cart({ sessionId, items: [] });\n        await cart.save();\n        console.log('Created new guest cart for session (fallback):', sessionId);\n      }\n    }\n    \n    return { type: 'guest', cart, sessionId };\n  }\n};\n\n// Get cart contents with performance optimization\nrouter.get('/', authenticateToken, async (req, res) => {\n  try {\n    // Get cart data directly\n    const cartData = await getOrCreateCart(req);\n    \n    const { type, cart, user } = cartData;\n    \n    // Populate product details for cart items\n    const populatedCart = await Promise.all(\n      cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          return {\n            _id: item.product,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    \n    // Calculate totals\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n    \n    res.json({\n      success: true,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error fetching cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_FETCH_ERROR',\n        message: 'Failed to fetch cart'\n      }\n    });\n  }\n});\n\n// Add item to cart with optimistic updates\nrouter.post('/add', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId, quantity = 1 } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    // Enhanced quantity validation to prevent integer overflow and other edge cases\n    if (!Number.isInteger(quantity) || quantity < 1 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 1 and 99'\n        }\n      });\n    }\n\n    // Additional safety check for potential integer overflow\n    if (quantity > Number.MAX_SAFE_INTEGER) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity value is too large'\n        }\n      });\n    }\n\n    // Validate product ID format\n    if (!productId.match(/^[0-9a-fA-F]{24}$/)) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_PRODUCT_ID',\n          message: 'Invalid product ID format'\n        }\n      });\n    }\n\n    // Check if product exists and is active\n    const product = await Product.findById(productId);\n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found'\n        }\n      });\n    }\n    \n    if (!product.isActive) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found or inactive'\n        }\n      });\n    }\n\n    // Check for existing item and validate maximum quantity\n    const { type, cart, user } = await getOrCreateCart(req);\n    \n    if (type === 'user') {\n      const existingItemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (existingItemIndex >= 0) {\n        const currentQuantity = user.cart.items[existingItemIndex].quantity;\n        const newQuantity = currentQuantity + quantity;\n        \n        // Check for integer overflow and maximum quantity\n        if (newQuantity > 99 || newQuantity < currentQuantity) {\n          return res.status(400).json({\n            success: false,\n            error: {\n              code: 'MAX_QUANTITY_EXCEEDED',\n              message: 'Cannot exceed maximum quantity of 99'\n            }\n          });\n        }\n      }\n    } else {\n      const existingItemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (existingItemIndex >= 0) {\n        const currentQuantity = cart.items[existingItemIndex].quantity;\n        const newQuantity = currentQuantity + quantity;\n        \n        // Check for integer overflow and maximum quantity\n        if (newQuantity > 99 || newQuantity < currentQuantity) {\n          return res.status(400).json({\n            success: false,\n            error: {\n              code: 'MAX_QUANTITY_EXCEEDED',\n              message: 'Cannot exceed maximum quantity of 99'\n            }\n          });\n        }\n      }\n    }\n\n    // Add item to cart directly\n    const cartData = await getOrCreateCart(req);\n    \n    if (cartData.type === 'user') {\n      // Add to user's cart\n      const existingItemIndex = cartData.user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (existingItemIndex >= 0) {\n        cartData.user.cart.items[existingItemIndex].quantity += quantity;\n        cartData.user.cart.items[existingItemIndex].addedAt = new Date();\n      } else {\n        cartData.user.cart.items.push({\n          product: productId,\n          quantity,\n          price: product.price,\n          addedAt: new Date()\n        });\n      }\n      \n      cartData.user.cart.updatedAt = new Date();\n      await cartData.user.save();\n    } else {\n      // Add to guest cart\n      const existingItemIndex = cartData.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (existingItemIndex >= 0) {\n        cartData.cart.items[existingItemIndex].quantity += quantity;\n        cartData.cart.items[existingItemIndex].addedAt = new Date();\n      } else {\n        cartData.cart.items.push({\n          product: productId,\n          quantity,\n          price: product.price,\n          addedAt: new Date()\n        });\n      }\n      await cartData.cart.save();\n    }\n\n    // Return updated cart\n    const updatedCartData = await getOrCreateCart(req);\n    \n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        const prod = await Product.findById(item.product).select('-wholesaler');\n        if (!prod) {\n          return null; // Filter out missing products\n        }\n        return {\n          _id: item.product,\n          product: prod.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    ).then(items => items.filter(item => item !== null));\n\n    const itemCount = populatedCart.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = populatedCart.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item added to cart',\n      data: {\n        cart: {\n          items: populatedCart,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    console.error('Full stack:', error.stack);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_ADD_ERROR',\n        message: 'Failed to add item to cart',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\n      }\n    });\n  }\n});\n\n// Update cart item quantity\nrouter.put('/update', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId, quantity } = req.body;\n\n    // Validation\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    if (!Number.isInteger(quantity) || quantity < 0 || quantity > 99) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'INVALID_QUANTITY',\n          message: 'Quantity must be between 0 and 99'\n        }\n      });\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Update user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        if (quantity === 0) {\n          user.cart.items.splice(itemIndex, 1);\n        } else {\n          user.cart.items[itemIndex].quantity = quantity;\n          user.cart.items[itemIndex].addedAt = new Date();\n        }\n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    } else {\n      // Update guest cart\n      const itemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (itemIndex >= 0) {\n        // Always use direct database update for consistency\n        const updatedItems = [...cart.items];\n        \n        if (quantity === 0) {\n          updatedItems.splice(itemIndex, 1);\n        } else {\n          updatedItems[itemIndex] = {\n            ...updatedItems[itemIndex],\n            quantity,\n            addedAt: new Date()\n          };\n        }\n        \n        // Use atomic update to prevent race conditions\n        const updatedCart = await Cart.findByIdAndUpdate(\n          cart._id,\n          { \n            items: updatedItems, \n            updatedAt: new Date() \n          },\n          { new: true }\n        );\n        cart.items = updatedCart.items;\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    }\n\n    // Return updated cart - use the already modified data instead of refetching\n    const cartItems = type === 'user' ? user.cart.items : cart.items;\n    const populatedCart = await Promise.all(\n      cartItems.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) {return null;}\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    // Check if item was removed (quantity was 0)\n    const wasRemoved = quantity === 0;\n    \n    res.json({\n      success: true,\n      message: wasRemoved ? 'Item removed from cart' : 'Cart updated',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      },\n      cartItemCount: itemCount\n    });\n\n  } catch (error) {\n    console.error('Error updating cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_UPDATE_ERROR',\n        message: 'Failed to update cart'\n      }\n    });\n  }\n});\n\n// Remove item from cart\nrouter.delete('/remove', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { productId } = req.body;\n\n    if (!productId) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_PRODUCT_ID',\n          message: 'Product ID is required'\n        }\n      });\n    }\n\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Remove from user's cart\n      const itemIndex = user.cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n\n      if (itemIndex >= 0) {\n        user.cart.items.splice(itemIndex, 1);\n        user.cart.updatedAt = new Date();\n        await user.save();\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    } else {\n      // Remove from guest cart\n      const itemIndex = cart.items.findIndex(item => \n        item.product.toString() === productId.toString()\n      );\n      \n      if (itemIndex >= 0) {\n        // Always use direct database update for consistency\n        const updatedItems = [...cart.items];\n        updatedItems.splice(itemIndex, 1);\n        \n        // Use atomic update to prevent race conditions\n        const updatedCart = await Cart.findByIdAndUpdate(\n          cart._id,\n          { \n            items: updatedItems, \n            updatedAt: new Date() \n          },\n          { new: true }\n        );\n        cart.items = updatedCart.items;\n      } else {\n        return res.status(404).json({\n          success: false,\n          error: {\n            code: 'ITEM_NOT_FOUND',\n            message: 'Item not found in cart'\n          }\n        });\n      }\n    }\n\n    // Return updated cart - use the already modified data instead of refetching\n    const cartItems = type === 'user' ? user.cart.items : cart.items;\n    const populatedCart = await Promise.all(\n      cartItems.map(async (item) => {\n        const product = await Product.findById(item.product).select('-wholesaler');\n        if (!product || !product.isActive) {return null;}\n        \n        return {\n          _id: item.product,\n          product: product.toPublicJSON(),\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.price * item.quantity\n        };\n      })\n    );\n\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: 'Item removed from cart',\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100\n        }\n      },\n      cartItemCount: itemCount\n    });\n\n  } catch (error) {\n    console.error('Error removing from cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_REMOVE_ERROR',\n        message: 'Failed to remove item from cart'\n      }\n    });\n  }\n});\n\n// Clear cart\nrouter.delete('/clear', authenticateToken, validateCSRFToken, async (req, res) => {\n  try {\n    const { type, cart, user } = await getOrCreateCart(req);\n\n    if (type === 'user') {\n      // Clear user's cart\n      user.cart.items = [];\n      user.cart.updatedAt = new Date();\n      await user.save();\n      console.log('Cleared user cart for user:', user._id);\n    } else {\n      // Clear guest cart - use atomic update instead of delete/recreate\n      console.log('Clearing guest cart for session:', cart.sessionId);\n      \n      // First, delete ALL carts with this session ID to handle duplicates\n      const deleteResult = await Cart.deleteMany({ sessionId: cart.sessionId });\n      console.log(`Deleted ${deleteResult?.deletedCount || 0} cart(s) for session ${cart.sessionId}`);\n      \n      // Create a single fresh cart\n      const newCart = new Cart({ sessionId: cart.sessionId, items: [] });\n      await newCart.save();\n      \n      console.log('Created fresh guest cart for session:', cart.sessionId);\n    }\n\n    res.json({\n      success: true,\n      message: 'Cart cleared',\n      data: {\n        cart: {\n          items: [],\n          itemCount: 0,\n          subtotal: 0,\n          total: 0,\n          isEmpty: true\n        }\n      },\n      cartItemCount: 0\n    });\n\n  } catch (error) {\n    console.error('Error clearing cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_CLEAR_ERROR',\n        message: 'Failed to clear cart'\n      }\n    });\n  }\n});\n\n// Merge guest cart with user cart with conflict resolution\nrouter.post('/merge', authenticateToken, async (req, res) => {\n  try {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'AUTHENTICATION_REQUIRED',\n          message: 'User must be authenticated to merge cart'\n        }\n      });\n    }\n\n    const { guestCartItems, sessionId } = req.body;\n    \n    console.log('Cart merge request:', { \n      userId: req.user._id, \n      sessionId, \n      guestItemCount: guestCartItems?.length || 0 \n    });\n    \n    // Merge cart logic directly\n    const user = await User.findById(req.user._id);\n    if (!user.cart) {\n      user.cart = { items: [], updatedAt: new Date() };\n    }\n\n    let mergedItems = 0;\n\n    // Process guest cart items\n    if (guestCartItems && Array.isArray(guestCartItems) && guestCartItems.length > 0) {\n      for (const guestItem of guestCartItems) {\n        const product = await Product.findById(guestItem.productId || guestItem.product);\n        if (!product || !product.isActive) {\n          continue;\n        }\n\n        const productId = guestItem.productId || guestItem.product;\n        const quantity = guestItem.quantity || 1;\n\n        const existingItemIndex = user.cart.items.findIndex(item => \n          item.product.toString() === productId.toString()\n        );\n\n        if (existingItemIndex >= 0) {\n          user.cart.items[existingItemIndex].quantity += quantity;\n          user.cart.items[existingItemIndex].addedAt = new Date();\n        } else {\n          user.cart.items.push({\n            product: productId,\n            quantity,\n            price: product.price,\n            addedAt: new Date()\n          });\n        }\n        mergedItems++;\n      }\n    }\n\n    // Process session-based cart\n    if (sessionId) {\n      const guestCart = await Cart.findOne({ sessionId });\n      if (guestCart && guestCart.items.length > 0) {\n        console.log('Found guest cart with', guestCart.items.length, 'items for session:', sessionId);\n        \n        for (const guestItem of guestCart.items) {\n          const product = await Product.findById(guestItem.product);\n          if (!product || !product.isActive) {\n            continue;\n          }\n\n          const existingItemIndex = user.cart.items.findIndex(item => \n            item.product.toString() === guestItem.product.toString()\n          );\n\n          if (existingItemIndex >= 0) {\n            user.cart.items[existingItemIndex].quantity += guestItem.quantity;\n            user.cart.items[existingItemIndex].addedAt = new Date();\n          } else {\n            user.cart.items.push({\n              product: guestItem.product,\n              quantity: guestItem.quantity,\n              price: guestItem.price,\n              addedAt: new Date()\n            });\n          }\n          mergedItems++;\n        }\n        \n        // Clean up the guest cart after merge\n        await Cart.deleteOne({ sessionId });\n        console.log('Deleted guest cart for session:', sessionId);\n      } else {\n        console.log('No guest cart found for session:', sessionId);\n      }\n    }\n\n    user.cart.updatedAt = new Date();\n    await user.save();\n    \n    const mergeResult = {\n      mergedItems,\n      conflicts: [],\n      duration: 0\n    };\n\n    // Get updated cart data\n    const updatedCartData = await getOrCreateCart(req);\n    \n    // Return updated user cart\n    const populatedCart = await Promise.all(\n      updatedCartData.cart.items.map(async (item) => {\n        try {\n          const product = await Product.findById(item.product).select('-wholesaler');\n          if (!product || !product.isActive) {\n            return null; // Filter out inactive products\n          }\n          \n          return {\n            _id: item.product,\n            product: product.toPublicJSON(),\n            quantity: item.quantity,\n            price: item.price,\n            subtotal: item.price * item.quantity\n          };\n        } catch (error) {\n          console.error('Error populating cart item:', error);\n          return null;\n        }\n      })\n    );\n\n    // Filter out null items (inactive products)\n    const validCartItems = populatedCart.filter(item => item !== null);\n    const itemCount = validCartItems.reduce((total, item) => total + item.quantity, 0);\n    const subtotal = validCartItems.reduce((total, item) => total + item.subtotal, 0);\n\n    res.json({\n      success: true,\n      message: `Successfully merged ${mergeResult.mergedItems} items into your cart`,\n      data: {\n        cart: {\n          items: validCartItems,\n          itemCount,\n          subtotal: Math.round(subtotal * 100) / 100,\n          total: Math.round(subtotal * 100) / 100,\n          isEmpty: validCartItems.length === 0\n        },\n        merge: {\n          mergedItems: mergeResult.mergedItems,\n          conflicts: mergeResult.conflicts,\n          duration: mergeResult.duration\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error merging guest cart:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'CART_MERGE_ERROR',\n        message: 'Failed to merge guest cart',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined\n      }\n    });\n  }\n});\n\n// Reset guest cart session - helps fix cart persistence issues\nrouter.post('/reset-guest-session', async (req, res) => {\n  try {\n    // Only allow this for non-authenticated users (guests)\n    if (req.user) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'NOT_GUEST_USER',\n          message: 'This endpoint is only for guest users'\n        }\n      });\n    }\n\n    // Get the old session ID from header\n    const oldSessionId = req.headers['x-guest-session-id'];\n    \n    // Delete old guest cart if it exists\n    if (oldSessionId && oldSessionId.startsWith('guest_')) {\n      const deleteResult = await Cart.deleteMany({ sessionId: oldSessionId });\n      console.log(`Deleted ${deleteResult?.deletedCount || 0} guest cart(s) for old session ${oldSessionId}`);\n    }\n\n    // Create a fresh guest session ID\n    const newSessionId = `guest_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n    // Create a fresh empty cart\n    const newCart = new Cart({ sessionId: newSessionId, items: [] });\n    await newCart.save();\n\n    res.json({\n      success: true,\n      message: 'Guest cart session reset successfully',\n      data: {\n        sessionId: newSessionId,\n        cart: {\n          items: [],\n          itemCount: 0,\n          subtotal: 0,\n          total: 0,\n          isEmpty: true\n        }\n      }\n    });\n\n  } catch (error) {\n    console.error('Error resetting guest cart session:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'RESET_SESSION_ERROR',\n        message: 'Failed to reset guest cart session'\n      }\n    });\n  }\n});\n\n// Debug endpoint to see all guest carts (development only)\nif (process.env.NODE_ENV === 'development') {\n  router.get('/debug', async (req, res) => {\n    try {\n      const guestCarts = await Cart.find({}).select('sessionId items createdAt updatedAt');\n      const userCarts = await User.find({ 'cart.items.0': { $exists: true } })\n        .select('email cart.items cart.updatedAt');\n      \n      res.json({\n        success: true,\n        data: {\n          guestCarts: guestCarts.map(cart => ({\n            sessionId: cart.sessionId,\n            itemCount: cart.items.length,\n            items: cart.items,\n            createdAt: cart.createdAt,\n            updatedAt: cart.updatedAt\n          })),\n          userCarts: userCarts.map(user => ({\n            email: user.email,\n            itemCount: user.cart?.items?.length || 0,\n            items: user.cart?.items || [],\n            updatedAt: user.cart?.updatedAt\n          })),\n          currentSession: {\n            guestSessionId: req.headers['x-guest-session-id'],\n            serverSessionId: req.sessionID\n          }\n        }\n      });\n    } catch (error) {\n      res.status(500).json({ success: false, error: error.message });\n    }\n  });\n}\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}