{"version":3,"names":["jwt","require","User","authService","authenticateToken","req","res","next","authHeader","headers","token","split","user","decoded","validation","validateTokenSafely","valid","serviceError","console","warn","message","verify","process","env","JWT_SECRET","findById","userId","select","isActive","error","requireAuth","status","json","success","code","refreshResult","refreshTokenIfNeeded","refreshed","setHeader","reason","name","requireAdmin","isAdmin","module","exports"],"sources":["auth.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst User = require('../models/User');\nconst authService = require('../services/authService');\n\n// Middleware to authenticate JWT tokens\nconst authenticateToken = async (req, res, next) => {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN\n    \n    if (!token) {\n      req.user = null;\n      return next(); // Continue without authentication for optional auth routes\n    }\n    \n    // Use auth service for token validation with fallback\n    let decoded, user;\n    try {\n      const validation = await authService.validateTokenSafely(token);\n      if (validation.valid) {\n        decoded = validation.decoded;\n        user = validation.user;\n      } else {\n        req.user = null;\n        return next();\n      }\n    } catch (serviceError) {\n      // Fallback to direct JWT verification\n      console.warn('Auth service failed, using fallback:', serviceError.message);\n      decoded = jwt.verify(token, process.env.JWT_SECRET);\n      user = await User.findById(decoded.userId).select('-password');\n    }\n    \n    if (!user || !user.isActive) {\n      req.user = null;\n      return next();\n    }\n    \n    req.user = user;\n    next();\n  } catch (error) {\n    req.user = null;\n    next(); // Continue without authentication for optional auth routes\n  }\n};\n\n// Middleware to require authentication\nconst requireAuth = async (req, res, next) => {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n    \n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'NO_TOKEN',\n          message: 'Access token is required'\n        }\n      });\n    }\n    \n    // Use auth service for token validation with automatic refresh\n    let decoded, user;\n    try {\n      const validation = await authService.validateTokenSafely(token);\n      if (validation.valid) {\n        decoded = validation.decoded;\n        user = validation.user;\n        \n        // Check if token needs refresh\n        const refreshResult = await authService.refreshTokenIfNeeded(token);\n        if (refreshResult.refreshed) {\n          // Add new token to response headers for client to update\n          res.setHeader('X-New-Token', refreshResult.token);\n        }\n      } else {\n        return res.status(401).json({\n          success: false,\n          error: {\n            code: 'INVALID_TOKEN',\n            message: validation.reason === 'user_not_found' ? 'User not found' : 'Invalid or expired token'\n          }\n        });\n      }\n    } catch (serviceError) {\n      // Fallback to direct JWT verification\n      console.warn('Auth service failed in requireAuth, using fallback:', serviceError.message);\n      decoded = jwt.verify(token, process.env.JWT_SECRET);\n      user = await User.findById(decoded.userId).select('-password');\n      \n      if (!user || !user.isActive) {\n        return res.status(401).json({\n          success: false,\n          error: {\n            code: 'INVALID_TOKEN',\n            message: 'Invalid or expired token'\n          }\n        });\n      }\n    }\n    \n    req.user = user;\n    next();\n  } catch (error) {\n    if (error.name === 'JsonWebTokenError') {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'INVALID_TOKEN',\n          message: 'Invalid token format'\n        }\n      });\n    }\n    \n    if (error.name === 'TokenExpiredError') {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'TOKEN_EXPIRED',\n          message: 'Token has expired'\n        }\n      });\n    }\n    \n    console.error('Authentication error:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'AUTH_ERROR',\n        message: 'Authentication failed'\n      }\n    });\n  }\n};\n\n// Middleware to require admin role\nconst requireAdmin = async (req, res, next) => {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n    \n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'NO_TOKEN',\n          message: 'Access token is required'\n        }\n      });\n    }\n    \n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(decoded.userId).select('-password');\n    \n    if (!user || !user.isActive) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'INVALID_TOKEN',\n          message: 'Invalid or expired token'\n        }\n      });\n    }\n    \n    // Check if user has admin role\n    if (!user.isAdmin) {\n      return res.status(403).json({\n        success: false,\n        error: {\n          code: 'INSUFFICIENT_PERMISSIONS',\n          message: 'Admin access required'\n        }\n      });\n    }\n    \n    req.user = user;\n    next();\n  } catch (error) {\n    if (error.name === 'JsonWebTokenError') {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'INVALID_TOKEN',\n          message: 'Invalid token format'\n        }\n      });\n    }\n    \n    if (error.name === 'TokenExpiredError') {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: 'TOKEN_EXPIRED',\n          message: 'Token has expired'\n        }\n      });\n    }\n    \n    console.error('Admin auth error:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'AUTH_ERROR',\n        message: 'Authorization failed'\n      }\n    });\n  }\n};\n\nmodule.exports = {\n  authenticateToken,\n  requireAuth,\n  requireAdmin\n};"],"mappings":"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","ignoreList":[]}