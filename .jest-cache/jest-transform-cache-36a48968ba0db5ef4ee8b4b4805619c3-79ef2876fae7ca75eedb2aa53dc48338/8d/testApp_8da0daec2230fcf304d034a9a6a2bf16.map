{"version":3,"names":["_getJestObj","mock","createMollieClient","jest","fn","payments","create","Promise","resolve","id","status","amount","value","currency","description","redirectUrl","webhookUrl","_links","checkout","href","get","list","_embedded","count","methods","require","express","cors","helmet","rateLimit","session","cookieParser","globalErrorHandler","i18nMiddleware","errorResponse","authRoutes","productRoutes","cartRoutes","orderRoutes","paymentRoutes","adminRoutes","wholesalerRoutes","integrationRoutes","monitoringRoutes","createTestApp","app","use","origin","process","env","ALLOWED_ORIGINS","split","credentials","limiter","windowMs","max","message","success","error","code","secret","resave","saveUninitialized","cookie","secure","json","limit","verify","req","res","buf","JSON","parse","e","Error","urlencoded","extended","timestamp","Date","toISOString","module","exports"],"sources":["testApp.js"],"sourcesContent":["const express = require('express');\nconst cors = require('cors');\nconst helmet = require('helmet');\nconst rateLimit = require('express-rate-limit');\nconst session = require('express-session');\nconst cookieParser = require('cookie-parser');\n\n// Mock Mollie client before importing routes\njest.mock('@mollie/api-client', () => ({\n  createMollieClient: jest.fn(() => ({\n    payments: {\n      create: jest.fn(() => Promise.resolve({\n        id: 'tr_test123',\n        status: 'open',\n        amount: { value: '10.00', currency: 'EUR' },\n        description: 'Test payment',\n        redirectUrl: 'https://example.com/return',\n        webhookUrl: 'https://example.com/webhook',\n        _links: {\n          checkout: { href: 'https://checkout.mollie.com/test' }\n        }\n      })),\n      get: jest.fn(() => Promise.resolve({\n        id: 'tr_test123',\n        status: 'paid',\n        amount: { value: '10.00', currency: 'EUR' }\n      })),\n      list: jest.fn(() => Promise.resolve({\n        _embedded: { payments: [] },\n        count: 0\n      }))\n    },\n    methods: {\n      list: jest.fn(() => Promise.resolve([\n        { id: 'creditcard', description: 'Credit card' },\n        { id: 'ideal', description: 'iDEAL' }\n      ]))\n    }\n  }))\n}));\n\n// Import middleware\nconst { globalErrorHandler } = require('../../middleware/errorHandler');\nconst { i18nMiddleware } = require('../../utils/i18n');\nconst { errorResponse } = require('../../utils/errorHandler');\n\n// Import routes\nconst authRoutes = require('../../routes/auth');\nconst productRoutes = require('../../routes/products');\nconst cartRoutes = require('../../routes/cart');\nconst orderRoutes = require('../../routes/orders');\nconst paymentRoutes = require('../../routes/payments');\nconst adminRoutes = require('../../routes/admin');\nconst wholesalerRoutes = require('../../routes/wholesalers');\nconst integrationRoutes = require('../../routes/integration');\nconst monitoringRoutes = require('../../routes/monitoring');\n\n// Create test app without starting server\nfunction createTestApp() {\n  const app = express();\n\n  // Security middleware\n  app.use(helmet());\n  app.use(cors({\n    origin: process.env.ALLOWED_ORIGINS?.split(',') || ['http://localhost:3000'],\n    credentials: true\n  }));\n\n  // Rate limiting (more lenient for tests)\n  const limiter = rateLimit({\n    windowMs: 15 * 60 * 1000, // 15 minutes\n    max: 1000, // Higher limit for tests\n    message: {\n      success: false,\n      error: {\n        code: 'RATE_LIMIT_EXCEEDED',\n        message: 'Too many requests from this IP, please try again later.'\n      }\n    }\n  });\n  app.use(limiter);\n\n  // Session middleware for cart functionality\n  app.use(session({\n    secret: 'test-session-secret',\n    resave: false,\n    saveUninitialized: false,\n    cookie: { secure: false } // Set to false for testing\n  }));\n\n  // Body parsing middleware with error handling\n  app.use(express.json({ \n    limit: '10mb',\n    verify: (req, res, buf) => {\n      try {\n        JSON.parse(buf);\n      } catch (e) {\n        res.status(400).json({\n          success: false,\n          error: {\n            code: 'INVALID_JSON',\n            message: 'Invalid JSON format'\n          }\n        });\n        throw new Error('Invalid JSON');\n      }\n    }\n  }));\n  app.use(express.urlencoded({ extended: true, limit: '10mb' }));\n\n  // Cookie parser middleware\n  app.use(cookieParser());\n\n  // i18n middleware for error messages\n  app.use(i18nMiddleware);\n\n  // Error response helper middleware\n  app.use(errorResponse);\n\n  // Health check endpoint\n  app.get('/health', (req, res) => {\n    res.json({ status: 'OK', timestamp: new Date().toISOString() });\n  });\n\n  // API routes\n  app.use('/api/auth', authRoutes);\n  app.use('/api/products', productRoutes);\n  app.use('/api/cart', cartRoutes);\n  app.use('/api/orders', orderRoutes);\n  app.use('/api/payments', paymentRoutes);\n  app.use('/api/admin', adminRoutes);\n  app.use('/api/wholesalers', wholesalerRoutes);\n  app.use('/api/integration', integrationRoutes);\n  app.use('/api/monitoring', monitoringRoutes);\n\n  // Error handling middleware\n  app.use(globalErrorHandler);\n\n  return app;\n}\n\nmodule.exports = { createTestApp };"],"mappings":"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","ignoreList":[]}