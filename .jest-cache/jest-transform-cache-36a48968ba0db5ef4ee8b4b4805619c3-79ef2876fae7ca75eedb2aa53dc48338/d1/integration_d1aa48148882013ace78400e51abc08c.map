{"version":3,"names":["cov_173kgle1mt","actualCoverage","express","s","require","router","Router","body","param","query","Product","Order","apiKeyAuth","handleValidationErrors","rateLimits","use","integration","get","isLength","min","max","matches","withMessage","optional","req","res","f","referenceKey","params","source","product","findOne","$or","slug","isActive","b","status","json","success","error","code","message","console","log","crossSiteData","getCrossSiteData","meta","referralSource","crossSiteEnabled","directUrl","embedUrl","isIn","format","theme","embedData","id","_id","name","shortDescription","price","compareAtPrice","primaryImage","images","find","img","isPrimary","category","properties","chakra","element","healing","seo","urls","addToCart","buyNow","htmlWidget","generateProductWidget","setHeader","send","embed","embedCode","protocol","isInt","contentId","limit","includes","chakraName","replace","$in","elementName","healingProperty","propertyFilters","JSON","parse","Object","keys","forEach","key","Array","isArray","e","products","parseInt","sort","isFeatured","createdAt","relatedProducts","map","count","length","filters","totalAvailable","countDocuments","post","isMongoId","isObject","productId","action","metadata","analyticsData","timestamp","Date","ip","userAgent","isISO8601","startDate","endDate","dateFilter","$gte","$lte","sourceFilter","orderAnalytics","aggregate","$match","$exists","$ne","$group","orderCount","$sum","totalRevenue","averageOrderValue","$avg","$sort","topProducts","$unwind","referralCount","revenue","$multiply","$lookup","from","localField","foreignField","as","$project","productName","productSlug","$limit","analytics","summary","totalReferralOrders","reduce","sum","item","totalReferralRevenue","averageReferralOrderValue","bySource","dateRange","generatedAt","escapeHtml","text","themeStyles","url","alt","toFixed","join","module","exports"],"sources":["integration.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst { body, param, query } = require('express-validator');\nconst Product = require('../models/Product');\nconst Order = require('../models/Order');\nconst { apiKeyAuth, handleValidationErrors, rateLimits } = require('../middleware/security');\n\n// Apply integration-specific rate limiting\nrouter.use(rateLimits.integration);\n\n// Get product by reference key for cross-site linking\nrouter.get('/products/link/:referenceKey', [\n  param('referenceKey').isLength({ min: 1, max: 100 }).matches(/^[a-zA-Z0-9-_]+$/).withMessage('Invalid reference key format'),\n  query('source').optional().isLength({ max: 100 }).withMessage('Source parameter too long'),\n  handleValidationErrors\n], async (req, res) => {\n  try {\n    const { referenceKey } = req.params;\n    const { source } = req.query; // Track referral source\n    \n    const product = await Product.findOne({\n      $or: [\n        { 'crossSiteIntegration.referenceKey': referenceKey },\n        { slug: referenceKey }\n      ],\n      isActive: true,\n      'crossSiteIntegration.enabled': true\n    });\n    \n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found or not available for cross-site integration'\n        }\n      });\n    }\n    \n    // Track referral if source is provided\n    if (source) {\n      // Log referral for analytics (you might want to store this in a separate collection)\n      console.log(`Cross-site referral: ${source} -> ${product.slug}`);\n    }\n    \n    // Return cross-site optimized product data\n    const crossSiteData = product.getCrossSiteData();\n    \n    res.json({\n      success: true,\n      product: crossSiteData,\n      meta: {\n        referralSource: source,\n        crossSiteEnabled: true,\n        directUrl: `/products/${product.slug}`,\n        embedUrl: `/api/integration/products/embed/${product.slug}`\n      }\n    });\n    \n  } catch (error) {\n    console.error('Cross-site product link error:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'INTEGRATION_ERROR',\n        message: 'Failed to fetch product for cross-site integration'\n      }\n    });\n  }\n});\n\n// Get embeddable product widget data\nrouter.get('/products/embed/:slug', [\n  param('slug').isLength({ min: 1, max: 100 }).matches(/^[a-zA-Z0-9-_]+$/).withMessage('Invalid slug format'),\n  query('format').optional().isIn(['json', 'html']).withMessage('Format must be json or html'),\n  query('theme').optional().isIn(['light', 'dark']).withMessage('Theme must be light or dark'),\n  handleValidationErrors\n], async (req, res) => {\n  try {\n    const { slug } = req.params;\n    const { format = 'json', theme = 'light' } = req.query;\n    \n    const product = await Product.findOne({\n      slug,\n      isActive: true,\n      'crossSiteIntegration.enabled': true\n    });\n    \n    if (!product) {\n      return res.status(404).json({\n        success: false,\n        error: {\n          code: 'PRODUCT_NOT_FOUND',\n          message: 'Product not found or not available for embedding'\n        }\n      });\n    }\n    \n    const embedData = {\n      id: product._id,\n      name: product.name,\n      slug: product.slug,\n      shortDescription: product.shortDescription,\n      price: product.price,\n      compareAtPrice: product.compareAtPrice,\n      primaryImage: product.images.find(img => img.isPrimary) || product.images[0],\n      category: product.category,\n      properties: {\n        chakra: product.properties.chakra,\n        element: product.properties.element,\n        healing: product.properties.healing\n      },\n      seo: product.seo,\n      urls: {\n        product: `/products/${product.slug}`,\n        addToCart: `/api/cart/add`,\n        buyNow: `/checkout?product=${product._id}`\n      }\n    };\n    \n    if (format === 'html') {\n      // Return HTML widget\n      const htmlWidget = generateProductWidget(embedData, theme);\n      res.setHeader('Content-Type', 'text/html');\n      res.send(htmlWidget);\n    } else {\n      // Return JSON data\n      res.json({\n        success: true,\n        embed: embedData,\n        meta: {\n          format,\n          theme,\n          embedCode: `<iframe src=\"${req.protocol}://${req.get('host')}/api/integration/products/embed/${slug}?format=html&theme=${theme}\" width=\"300\" height=\"400\" frameborder=\"0\"></iframe>`\n        }\n      });\n    }\n    \n  } catch (error) {\n    console.error('Product embed error:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'EMBED_ERROR',\n        message: 'Failed to generate product embed'\n      }\n    });\n  }\n});\n\n// Get products related to content ID (for content-based recommendations)\nrouter.get('/products/related/:contentId', [\n  param('contentId').isLength({ min: 1, max: 100 }).matches(/^[a-zA-Z0-9-_]+$/).withMessage('Invalid content ID format'),\n  query('limit').optional().isInt({ min: 1, max: 50 }).withMessage('Limit must be between 1 and 50'),\n  query('category').optional().isLength({ max: 50 }).withMessage('Category parameter too long'),\n  handleValidationErrors\n], async (req, res) => {\n  try {\n    const { contentId } = req.params;\n    const { limit = 6, category, properties } = req.query;\n    \n    // Build query based on content relationship\n    let query = {\n      isActive: true,\n      'crossSiteIntegration.enabled': true\n    };\n    \n    // Add content-specific filters\n    if (contentId.includes('chakra')) {\n      const chakraName = contentId.replace('chakra-', '');\n      query['properties.chakra'] = { $in: [chakraName] };\n    } else if (contentId.includes('element')) {\n      const elementName = contentId.replace('element-', '');\n      query['properties.element'] = { $in: [elementName] };\n    } else if (contentId.includes('healing')) {\n      const healingProperty = contentId.replace('healing-', '');\n      query['properties.healing'] = { $in: [healingProperty] };\n    }\n    \n    // Add additional filters\n    if (category) {\n      query.category = category;\n    }\n    \n    if (properties) {\n      try {\n        const propertyFilters = JSON.parse(properties);\n        Object.keys(propertyFilters).forEach(key => {\n          if (propertyFilters[key]) {\n            query[`properties.${key}`] = { $in: Array.isArray(propertyFilters[key]) ? propertyFilters[key] : [propertyFilters[key]] };\n          }\n        });\n      } catch (e) {\n        // Ignore invalid JSON in properties filter\n      }\n    }\n    \n    const products = await Product.find(query)\n      .limit(parseInt(limit))\n      .sort({ isFeatured: -1, createdAt: -1 });\n    \n    const relatedProducts = products.map(product => product.getCrossSiteData());\n    \n    res.json({\n      success: true,\n      products: relatedProducts,\n      meta: {\n        contentId,\n        count: relatedProducts.length,\n        filters: { category, properties },\n        totalAvailable: await Product.countDocuments(query)\n      }\n    });\n    \n  } catch (error) {\n    console.error('Related products error:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'RELATED_PRODUCTS_ERROR',\n        message: 'Failed to fetch related products'\n      }\n    });\n  }\n});\n\n// Track referral analytics (requires API key)\nrouter.post('/analytics/referral', [\n  apiKeyAuth,\n  body('source').isLength({ min: 1, max: 100 }).withMessage('Source is required and must be less than 100 characters'),\n  body('action').isIn(['view', 'click', 'add_to_cart', 'purchase']).withMessage('Action must be one of: view, click, add_to_cart, purchase'),\n  body('productId').optional().isMongoId().withMessage('Invalid product ID format'),\n  body('metadata').optional().isObject().withMessage('Metadata must be an object'),\n  handleValidationErrors\n], async (req, res) => {\n  try {\n    const { source, productId, action, metadata } = req.body;\n    \n    if (!source || !action) {\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: 'MISSING_REQUIRED_FIELDS',\n          message: 'Source and action are required'\n        }\n      });\n    }\n    \n    // Log referral analytics (in a real app, you'd store this in a dedicated analytics collection)\n    const analyticsData = {\n      timestamp: new Date(),\n      source,\n      productId,\n      action, // 'view', 'click', 'add_to_cart', 'purchase'\n      metadata,\n      ip: req.ip,\n      userAgent: req.get('User-Agent')\n    };\n    \n    console.log('Cross-site analytics:', analyticsData);\n    \n    // TODO: Store in analytics collection\n    // await Analytics.create(analyticsData);\n    \n    res.json({\n      success: true,\n      message: 'Referral tracked successfully'\n    });\n    \n  } catch (error) {\n    console.error('Analytics tracking error:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ANALYTICS_ERROR',\n        message: 'Failed to track referral'\n      }\n    });\n  }\n});\n\n// Get referral analytics summary (requires API key)\nrouter.get('/analytics/summary', [\n  apiKeyAuth,\n  query('startDate').optional().isISO8601().withMessage('Start date must be in ISO8601 format'),\n  query('endDate').optional().isISO8601().withMessage('End date must be in ISO8601 format'),\n  query('source').optional().isLength({ max: 100 }).withMessage('Source parameter too long'),\n  handleValidationErrors\n], async (req, res) => {\n  try {\n    const { startDate, endDate, source } = req.query;\n    \n    // Build date filter\n    let dateFilter = {};\n    if (startDate || endDate) {\n      dateFilter.createdAt = {};\n      if (startDate) dateFilter.createdAt.$gte = new Date(startDate);\n      if (endDate) dateFilter.createdAt.$lte = new Date(endDate);\n    }\n    \n    // Build source filter\n    let sourceFilter = {};\n    if (source) {\n      sourceFilter.referralSource = source;\n    }\n    \n    // Get order analytics with referral sources\n    const orderAnalytics = await Order.aggregate([\n      {\n        $match: {\n          ...dateFilter,\n          ...sourceFilter,\n          referralSource: { $exists: true, $ne: null }\n        }\n      },\n      {\n        $group: {\n          _id: '$referralSource',\n          orderCount: { $sum: 1 },\n          totalRevenue: { $sum: '$total' },\n          averageOrderValue: { $avg: '$total' }\n        }\n      },\n      {\n        $sort: { orderCount: -1 }\n      }\n    ]);\n    \n    // Get top referred products\n    const topProducts = await Order.aggregate([\n      {\n        $match: {\n          ...dateFilter,\n          referralSource: { $exists: true, $ne: null }\n        }\n      },\n      { $unwind: '$items' },\n      {\n        $group: {\n          _id: '$items.product',\n          referralCount: { $sum: '$items.quantity' },\n          revenue: { $sum: { $multiply: ['$items.price', '$items.quantity'] } }\n        }\n      },\n      {\n        $lookup: {\n          from: 'products',\n          localField: '_id',\n          foreignField: '_id',\n          as: 'product'\n        }\n      },\n      { $unwind: '$product' },\n      {\n        $project: {\n          productName: '$product.name',\n          productSlug: '$product.slug',\n          referralCount: 1,\n          revenue: 1\n        }\n      },\n      { $sort: { referralCount: -1 } },\n      { $limit: 10 }\n    ]);\n    \n    res.json({\n      success: true,\n      analytics: {\n        summary: {\n          totalReferralOrders: orderAnalytics.reduce((sum, item) => sum + item.orderCount, 0),\n          totalReferralRevenue: orderAnalytics.reduce((sum, item) => sum + item.totalRevenue, 0),\n          averageReferralOrderValue: orderAnalytics.length > 0 \n            ? orderAnalytics.reduce((sum, item) => sum + item.averageOrderValue, 0) / orderAnalytics.length \n            : 0\n        },\n        bySource: orderAnalytics,\n        topProducts\n      },\n      meta: {\n        dateRange: { startDate, endDate },\n        sourceFilter: source,\n        generatedAt: new Date()\n      }\n    });\n    \n  } catch (error) {\n    console.error('Analytics summary error:', error);\n    res.status(500).json({\n      success: false,\n      error: {\n        code: 'ANALYTICS_SUMMARY_ERROR',\n        message: 'Failed to generate analytics summary'\n      }\n    });\n  }\n});\n\n// HTML escape function to prevent XSS\nfunction escapeHtml(text) {\n  if (!text) return '';\n  return text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\n// Generate HTML widget for product embedding\nfunction generateProductWidget(product, theme = 'light') {\n  const themeStyles = theme === 'dark' \n    ? 'background: #2d3748; color: #e2e8f0; border: 1px solid #4a5568;'\n    : 'background: #ffffff; color: #2d3748; border: 1px solid #e2e8f0;';\n    \n  return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      <title>${escapeHtml(product.name)} - Holistic Store</title>\n      <style>\n        body { margin: 0; padding: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }\n        .product-widget {\n          ${themeStyles}\n          border-radius: 8px;\n          padding: 16px;\n          max-width: 300px;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n        }\n        .product-image {\n          width: 100%;\n          height: 200px;\n          object-fit: cover;\n          border-radius: 4px;\n          margin-bottom: 12px;\n        }\n        .product-name {\n          font-size: 18px;\n          font-weight: 600;\n          margin-bottom: 8px;\n          line-height: 1.3;\n        }\n        .product-description {\n          font-size: 14px;\n          margin-bottom: 12px;\n          opacity: 0.8;\n          line-height: 1.4;\n        }\n        .product-price {\n          font-size: 20px;\n          font-weight: 700;\n          margin-bottom: 16px;\n        }\n        .product-properties {\n          font-size: 12px;\n          margin-bottom: 16px;\n          opacity: 0.7;\n        }\n        .product-button {\n          background: #4299e1;\n          color: white;\n          border: none;\n          padding: 12px 24px;\n          border-radius: 4px;\n          font-size: 14px;\n          font-weight: 600;\n          cursor: pointer;\n          width: 100%;\n          text-decoration: none;\n          display: inline-block;\n          text-align: center;\n          transition: background 0.2s;\n        }\n        .product-button:hover {\n          background: #3182ce;\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"product-widget\">\n        ${product.primaryImage ? `<img src=\"${escapeHtml(product.primaryImage.url)}\" alt=\"${escapeHtml(product.primaryImage.alt || product.name)}\" class=\"product-image\">` : ''}\n        <div class=\"product-name\">${escapeHtml(product.name)}</div>\n        <div class=\"product-description\">${escapeHtml(product.shortDescription || '')}</div>\n        <div class=\"product-price\">\n          $${product.price.toFixed(2)}\n          ${product.compareAtPrice ? `<span style=\"text-decoration: line-through; opacity: 0.6; font-size: 16px; margin-left: 8px;\">$${product.compareAtPrice.toFixed(2)}</span>` : ''}\n        </div>\n        ${product.properties.chakra || product.properties.element ? `\n          <div class=\"product-properties\">\n            ${product.properties.chakra ? `Chakra: ${escapeHtml(product.properties.chakra.join(', '))} ` : ''}\n            ${product.properties.element ? `Element: ${escapeHtml(product.properties.element.join(', '))}` : ''}\n          </div>\n        ` : ''}\n        <a href=\"${escapeHtml(product.urls.product)}\" target=\"_parent\" class=\"product-button\">\n          View Product\n        </a>\n      </div>\n    </body>\n    </html>\n  `;\n}\n\nmodule.exports = router;"],"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","ignoreList":[]}