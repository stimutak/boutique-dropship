{"version":3,"names":["cov_g6l96xyuu","actualCoverage","mongoose","s","require","bcrypt","userSchema","Schema","email","type","String","required","unique","lowercase","trim","password","minlength","firstName","lastName","phone","addresses","enum","street","city","state","zipCode","country","default","isDefault","Boolean","isActive","isAdmin","lastLogin","Date","passwordResetToken","passwordResetExpiry","preferences","newsletter","notifications","emailPreferences","orderConfirmations","paymentReceipts","orderUpdates","promotionalEmails","welcomeEmails","timestamps","index","pre","next","f","isModified","b","hash","methods","comparePassword","candidatePassword","compare","getDefaultShippingAddress","find","addr","getDefaultBillingAddress","addAddress","addressData","forEach","push","save","updateAddress","addressId","updateData","address","id","_id","toString","Object","assign","removeAddress","pull","updateEmailPreferences","wantsEmail","emailType","toPublicJSON","createdAt","updatedAt","module","exports","model"],"sources":["User.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6\n  },\n  firstName: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  lastName: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  phone: {\n    type: String,\n    trim: true\n  },\n  addresses: [{\n    type: {\n      type: String,\n      enum: ['shipping', 'billing'],\n      required: true\n    },\n    firstName: { type: String, required: true },\n    lastName: { type: String, required: true },\n    street: { type: String, required: true },\n    city: { type: String, required: true },\n    state: { type: String, required: true },\n    zipCode: { type: String, required: true },\n    country: { type: String, required: true, default: 'US' },\n    phone: String,\n    isDefault: { type: Boolean, default: false }\n  }],\n  isActive: {\n    type: Boolean,\n    default: true\n  },\n  isAdmin: {\n    type: Boolean,\n    default: false\n  },\n  lastLogin: Date,\n  passwordResetToken: String,\n  passwordResetExpiry: Date,\n  preferences: {\n    newsletter: { type: Boolean, default: false },\n    notifications: { type: Boolean, default: true },\n    emailPreferences: {\n      orderConfirmations: { type: Boolean, default: true },\n      paymentReceipts: { type: Boolean, default: true },\n      orderUpdates: { type: Boolean, default: true },\n      promotionalEmails: { type: Boolean, default: false },\n      welcomeEmails: { type: Boolean, default: true }\n    }\n  }\n}, {\n  timestamps: true\n});\n\n// Indexes for performance\nuserSchema.index({ email: 1 });\nuserSchema.index({ isActive: 1 });\nuserSchema.index({ lastLogin: -1 });\n\n// Pre-save middleware\nuserSchema.pre('save', async function(next) {\n  if (!this.isModified('password')) return next();\n  this.password = await bcrypt.hash(this.password, 12);\n  next();\n});\n\n// Authentication method\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n  return bcrypt.compare(candidatePassword, this.password);\n};\n\n// Method to get default shipping address\nuserSchema.methods.getDefaultShippingAddress = function() {\n  return this.addresses.find(addr => addr.type === 'shipping' && addr.isDefault) ||\n         this.addresses.find(addr => addr.type === 'shipping');\n};\n\n// Method to get default billing address\nuserSchema.methods.getDefaultBillingAddress = function() {\n  return this.addresses.find(addr => addr.type === 'billing' && addr.isDefault) ||\n         this.addresses.find(addr => addr.type === 'billing') ||\n         this.getDefaultShippingAddress(); // Fallback to shipping if no billing\n};\n\n// Method to add or update address\nuserSchema.methods.addAddress = function(addressData) {\n  // If this is set as default, unset other defaults of the same type\n  if (addressData.isDefault) {\n    this.addresses.forEach(addr => {\n      if (addr.type === addressData.type) {\n        addr.isDefault = false;\n      }\n    });\n  }\n  \n  this.addresses.push(addressData);\n  return this.save();\n};\n\n// Method to update address\nuserSchema.methods.updateAddress = function(addressId, updateData) {\n  const address = this.addresses.id(addressId);\n  if (!address) return null;\n  \n  // If setting as default, unset other defaults of the same type\n  if (updateData.isDefault) {\n    this.addresses.forEach(addr => {\n      if (addr.type === address.type && addr._id.toString() !== addressId) {\n        addr.isDefault = false;\n      }\n    });\n  }\n  \n  Object.assign(address, updateData);\n  return this.save();\n};\n\n// Method to remove address\nuserSchema.methods.removeAddress = function(addressId) {\n  this.addresses.pull(addressId);\n  return this.save();\n};\n\n// Method to update email preferences\nuserSchema.methods.updateEmailPreferences = function(preferences) {\n  Object.assign(this.preferences.emailPreferences, preferences);\n  return this.save();\n};\n\n// Method to check if user wants specific email type\nuserSchema.methods.wantsEmail = function(emailType) {\n  if (!this.preferences.notifications) return false;\n  return this.preferences.emailPreferences[emailType] !== false;\n};\n\n// Method to get public user data (excludes sensitive info)\nuserSchema.methods.toPublicJSON = function() {\n  return {\n    _id: this._id,\n    email: this.email,\n    firstName: this.firstName,\n    lastName: this.lastName,\n    phone: this.phone,\n    addresses: this.addresses,\n    preferences: this.preferences,\n    createdAt: this.createdAt,\n    updatedAt: this.updatedAt\n  };\n};\n\nmodule.exports = mongoose.model('User', userSchema);"],"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","ignoreList":[]}